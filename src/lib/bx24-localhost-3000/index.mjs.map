{"version":3,"file":"index.mjs","sources":["../../src/logger/browser.ts","../../src/types/common.ts","../../src/tools/type.ts","../../src/tools/uuidv7.ts","../../src/tools/text.ts","../../src/tools/browser.ts","../../src/types/http.ts","../../src/types/crm/entity-type.ts","../../src/types/b24-helper.ts","../../src/types/pull.ts","../../src/core/result.ts","../../src/core/http/ajax-error.ts","../../src/core/http/ajax-result.ts","../../src/core/http/restriction-manager.ts","../../src/core/http/request-id-generator.ts","../../src/core/http/controller.ts","../../src/core/abstract-b24.ts","../../src/core/language/list.ts","../../src/tools/scroll-size.ts","../../src/tools/formatters/numbers.ts","../../src/tools/formatters/iban.ts","../../src/tools/use-formatters.ts","../../src/hook/auth.ts","../../src/hook/controller.ts","../../src/frame/message/commands.ts","../../src/frame/message/controller.ts","../../src/frame/frame.ts","../../src/frame/auth.ts","../../src/frame/parent.ts","../../src/frame/options.ts","../../src/frame/dialog.ts","../../src/frame/slider.ts","../../src/frame/placement.ts","../../src/frame/controller.ts","../../src/helper/abstract-helper.ts","../../src/helper/profile-manager.ts","../../src/helper/app-manager.ts","../../src/helper/payment-manager.ts","../../src/helper/license-manager.ts","../../src/helper/currency-manager.ts","../../src/helper/options-manager.ts","../../src/pullClient/storage-manager.ts","../../src/pullClient/errors.ts","../../src/pullClient/json-rpc.ts","../../src/pullClient/shared-config.ts","../../src/pullClient/channel-manager.ts","../../src/pullClient/protobuf/protobuf.js","../../src/pullClient/protobuf/model.js","../../src/pullClient/protobuf/index.ts","../../src/pullClient/abstract-connector.ts","../../src/pullClient/web-socket-connector.ts","../../src/pullClient/long-polling-connector.ts","../../src/pullClient/client.ts","../../src/helper/helper-manager.ts","../../src/helper/use-b24-helper.ts","../../src/loader-b24frame.ts"],"sourcesContent":["export enum LoggerType {\n\tdesktop = 'desktop',\n\tlog = 'log',\n\tinfo = 'info',\n\twarn = 'warn',\n\terror = 'error',\n\ttrace = 'trace',\n}\n\ninterface LoggerTypes {\n\tdesktop: boolean\n\tlog: boolean\n\tinfo: boolean\n\twarn: boolean\n\terror: boolean\n\ttrace: boolean\n}\n\n// region StyleCollection ////\nconst styleCollection: Map<string, string[]> = new Map()\n\nstyleCollection.set('title', [\n\t'%c#title#',\n\t'color: #959ca4; font-style: italic; padding: 0 6px; border-top: 1px solid #ccc; border-left: 1px solid #ccc; border-bottom: 1px solid #ccc',\n])\n\nstyleCollection.set(LoggerType.desktop, [\n\t`%cDESKTOP`,\n\t'color: white; font-style: italic; background-color: #29619b; padding: 0 6px; border: 1px solid #29619b',\n])\n\nstyleCollection.set(LoggerType.log, [\n\t`%cLOG`,\n\t'color: #2a323b; font-style: italic; background-color: #ccc; padding: 0 6px; border: 1px solid #ccc',\n])\n\nstyleCollection.set(LoggerType.info, [\n\t`%cINFO`,\n\t'color: #fff; font-style: italic; background-color: #6b7f96; padding: 0 6px; border: 1px solid #6b7f96',\n])\n\nstyleCollection.set(LoggerType.warn, [\n\t`%cWARNING`,\n\t'color: #f0a74f; font-style: italic; padding: 0 6px; border: 1px solid #f0a74f',\n])\n\nstyleCollection.set(LoggerType.error, [\n\t`%cERROR`,\n\t'color: white; font-style: italic; background-color: #8a3232; padding: 0 6px; border: 1px solid #8a3232',\n])\n\nstyleCollection.set(LoggerType.trace, [\n\t`%cTRACE`,\n\t'color: #2a323b; font-style: italic; background-color: #ccc; padding: 0 6px; border: 1px solid #ccc',\n])\n// endregion ////\n\nexport class LoggerBrowser {\n\treadonly #title: string\n\t#types: LoggerTypes = {\n\t\tdesktop: true,\n\t\tlog: false,\n\t\tinfo: false,\n\t\twarn: false,\n\t\terror: true,\n\t\ttrace: true,\n\t}\n\n\tstatic build(title: string, isDevelopment: boolean = false): LoggerBrowser {\n\t\tconst logger = new LoggerBrowser(title)\n\n\t\tif (isDevelopment) {\n\t\t\tlogger.enable(LoggerType.log)\n\t\t\tlogger.enable(LoggerType.info)\n\t\t\tlogger.enable(LoggerType.warn)\n\t\t}\n\n\t\treturn logger\n\t}\n\n\tprivate constructor(title: string) {\n\t\tthis.#title = title\n\t}\n\n\t// region Styles ////\n\t#getStyle(type: LoggerType): string[] {\n\t\tconst resultText: string[] = []\n\t\tconst resultStyle: string[] = []\n\n\t\tif (styleCollection.has('title')) {\n\t\t\tconst styleTitle = styleCollection.get('title') as string[]\n\t\t\tif (styleTitle[0]) {\n\t\t\t\tresultText.push(styleTitle[0].replace('#title#', this.#title))\n\t\t\t\tresultStyle.push(styleTitle[1] || '')\n\t\t\t}\n\t\t}\n\n\t\tif (styleCollection.has(type)) {\n\t\t\tconst styleBadge = styleCollection.get(type) as string[]\n\t\t\tif (styleBadge[0]) {\n\t\t\t\tresultText.push(styleBadge[0])\n\t\t\t\tresultStyle.push(styleBadge[1] || '')\n\t\t\t}\n\t\t}\n\n\t\treturn [resultText.join(''), ...resultStyle]\n\t}\n\t// endregion ////\n\n\t// region Config ////\n\tsetConfig(types: Record<string | LoggerType, boolean>): void {\n\t\tfor (const type in types) {\n\t\t\tthis.#types[type as LoggerType] = types[type] as boolean\n\t\t}\n\t}\n\n\tenable(type: LoggerType): boolean {\n\t\tif (typeof this.#types[type] === 'undefined') {\n\t\t\treturn false\n\t\t}\n\n\t\tthis.#types[type] = true\n\n\t\treturn true\n\t}\n\n\tdisable(type: LoggerType): boolean {\n\t\tif (typeof this.#types[type] === 'undefined') {\n\t\t\treturn false\n\t\t}\n\n\t\tthis.#types[type] = false\n\n\t\treturn true\n\t}\n\n\tisEnabled(type: LoggerType): boolean {\n\t\treturn this.#types[type]\n\t}\n\t// endregion ////\n\n\t// region Functions ////\n\tdesktop(...params: any[]): void {\n\t\tif (this.isEnabled(LoggerType.desktop)) {\n\t\t\tconsole.log(...this.#getStyle(LoggerType.desktop), ...params)\n\t\t}\n\t}\n\n\tlog(...params: any[]): void {\n\t\tif (this.isEnabled(LoggerType.log)) {\n\t\t\tconsole.log(...this.#getStyle(LoggerType.log), ...params)\n\t\t}\n\t}\n\n\tinfo(...params: any[]): void {\n\t\tif (this.isEnabled(LoggerType.info)) {\n\t\t\tconsole.info(...this.#getStyle(LoggerType.info), ...params)\n\t\t}\n\t}\n\n\twarn(...params: any[]): void {\n\t\tif (this.isEnabled(LoggerType.warn)) {\n\t\t\tconsole.warn(...this.#getStyle(LoggerType.warn), ...params)\n\t\t}\n\t}\n\n\terror(...params: any[]): void {\n\t\tif (this.isEnabled(LoggerType.error)) {\n\t\t\tconsole.error(...this.#getStyle(LoggerType.error), ...params)\n\t\t}\n\t}\n\n\ttrace(...params: any[]): void {\n\t\tif (this.isEnabled(LoggerType.trace)) {\n\t\t\tconsole.trace(...this.#getStyle(LoggerType.trace), ...params)\n\t\t}\n\t}\n\t// endregion ////\n}\n","/**\n * String which is actually a number, like `'20.23'`\n */\nexport type NumberString = string\n\n/**\n * Like `'2018-06-07T03:00:00+03:00'`\n */\nexport type ISODate = string\nexport type BoolString = 'Y' | 'N'\nexport type GenderString = 'M' | 'F' | ''\n\nexport type PlacementViewMode = 'view' | 'edit'\n\nexport type Fields = {\n\treadonly [key: string]: {\n\t\treadonly type: string\n\t\treadonly isRequired: boolean\n\t\treadonly isReadOnly: boolean\n\t\treadonly isImmutable: boolean\n\t\treadonly isMultiple: boolean\n\t\treadonly isDynamic: boolean\n\t\treadonly title: string\n\t\treadonly upperName?: string\n\t}\n}\n\nexport type MultiField = {\n\treadonly ID: NumberString\n\treadonly VALUE_TYPE: string\n\treadonly VALUE: string\n\treadonly TYPE_ID: string\n}\n\nexport type MultiFieldArray = ReadonlyArray<\n\tPick<MultiField, 'VALUE' | 'VALUE_TYPE'>\n>\n\n/**\n * Describes the inline settings in UF\n */\nexport type UserFieldType = {\n\tUSER_TYPE_ID: string\n\tHANDLER: string\n\tTITLE: string\n\tDESCRIPTION: string\n\tOPTIONS?: {\n\t\theight: number\n\t}\n}\n\n/**\n * Data types\n * @link https://apidocs.bitrix24.ru/api-reference/data-types.html\n * @link https://dev.1c-bitrix.ru/rest_help/crm/dynamic/methodscrmitem/crm_item_fields.php\n */\nexport enum DataType {\n\tundefined = 'undefined',\n\tany = 'any',\n\tinteger = 'integer',\n\tboolean = 'boolean',\n\tdouble = 'double',\n\tdate = 'date',\n\tdatetime = 'datetime',\n\tstring = 'string',\n\ttext = 'text',\n\tfile = 'file',\n\tarray = 'array',\n\tobject = 'object',\n\tuser = 'user',\n\tlocation = 'location',\n\tcrmCategory = 'crm_category',\n\tcrmStatus = 'crm_status',\n\tcrmCurrency = 'crm_currency',\n}\n","const objectCtorString = Function.prototype.toString.call(Object)\n\n/**\n * The `Type` class is designed to check and determine data types\n *\n * @see bitrix/js/main/core/src/lib/type.js\n */\nclass TypeManager {\n\tgetTag(value: any): string {\n\t\treturn Object.prototype.toString.call(value)\n\t}\n\n\t/**\n\t * Checks that value is string\n\t * @param value\n\t * @return {boolean}\n\t *\n\t * @memo get from pull.client.Utils\n\t */\n\tisString(value: any): boolean {\n\t\treturn value === ''\n\t\t\t? true\n\t\t\t: // eslint-disable-next-line unicorn/no-nested-ternary\n\t\t\t\tvalue\n\t\t\t\t? typeof value === 'string' || value instanceof String\n\t\t\t\t: false\n\t}\n\n\t/**\n\t * Returns true if a value is not an empty string\n\t * @param value\n\t * @returns {boolean}\n\t */\n\tisStringFilled(value: any): boolean {\n\t\treturn this.isString(value) && value !== ''\n\t}\n\n\t/**\n\t * Checks that value is function\n\t * @param value\n\t * @return {boolean}\n\t *\n\t * @memo get from pull.client.Utils\n\t */\n\tisFunction(value: any): boolean {\n\t\treturn value === null\n\t\t\t? false\n\t\t\t: typeof value === 'function' || value instanceof Function\n\t}\n\n\t/**\n\t * Checks that value is an object\n\t * @param value\n\t * @return {boolean}\n\t */\n\tisObject(value: any): boolean {\n\t\treturn !!value && (typeof value === 'object' || typeof value === 'function')\n\t}\n\n\t/**\n\t * Checks that value is object like\n\t * @param value\n\t * @return {boolean}\n\t */\n\tisObjectLike(value: any): boolean {\n\t\treturn !!value && typeof value === 'object'\n\t}\n\n\t/**\n\t * Checks that value is plain object\n\t * @param value\n\t * @return {boolean}\n\t */\n\tisPlainObject(value: any): boolean {\n\t\tif (!this.isObjectLike(value) || this.getTag(value) !== '[object Object]') {\n\t\t\treturn false\n\t\t}\n\n\t\tconst proto = Object.getPrototypeOf(value)\n\t\tif (proto === null) {\n\t\t\treturn true\n\t\t}\n\n\t\tconst ctor = proto.hasOwnProperty('constructor') && proto.constructor\n\n\t\treturn (\n\t\t\ttypeof ctor === 'function' &&\n\t\t\tFunction.prototype.toString.call(ctor) === objectCtorString\n\t\t)\n\t}\n\n\tisJsonRpcRequest(value: any): boolean {\n\t\treturn (\n\t\t\ttypeof value === 'object' &&\n\t\t\tvalue &&\n\t\t\t'jsonrpc' in value &&\n\t\t\tthis.isStringFilled(value.jsonrpc) &&\n\t\t\t'method' in value &&\n\t\t\tthis.isStringFilled(value.method)\n\t\t)\n\t}\n\n\tisJsonRpcResponse(value: any): boolean {\n\t\treturn (\n\t\t\ttypeof value === 'object' &&\n\t\t\tvalue &&\n\t\t\t'jsonrpc' in value &&\n\t\t\tthis.isStringFilled(value.jsonrpc) &&\n\t\t\t'id' in value &&\n\t\t\t('result' in value || 'error' in value)\n\t\t)\n\t}\n\n\t/**\n\t * Checks that value is boolean\n\t * @param value\n\t * @return {boolean}\n\t */\n\tisBoolean(value: any): boolean {\n\t\treturn value === true || value === false\n\t}\n\n\t/**\n\t * Checks that value is number\n\t * @param value\n\t * @return {boolean}\n\t */\n\tisNumber(value: any): boolean {\n\t\treturn !Number.isNaN(value) && typeof value === 'number'\n\t}\n\n\t/**\n\t * Checks that value is integer\n\t * @param value\n\t * @return {boolean}\n\t */\n\tisInteger(value: any): boolean {\n\t\treturn this.isNumber(value) && value % 1 === 0\n\t}\n\n\t/**\n\t * Checks that value is float\n\t * @param value\n\t * @return {boolean}\n\t */\n\tisFloat(value: any): boolean {\n\t\treturn this.isNumber(value) && !this.isInteger(value)\n\t}\n\n\t/**\n\t * Checks that value is nil\n\t * @param value\n\t * @return {boolean}\n\t */\n\tisNil(value: any): boolean {\n\t\treturn value === null || value === undefined\n\t}\n\n\t/**\n\t * Checks that value is an array\n\t * @param value\n\t * @return {boolean}\n\t */\n\tisArray(value: any): boolean {\n\t\treturn !this.isNil(value) && Array.isArray(value)\n\t}\n\n\t/**\n\t * Returns true if a value is an array, and it has at least one element\n\t * @param value\n\t * @returns {boolean}\n\t */\n\tisArrayFilled(value: any): boolean {\n\t\treturn this.isArray(value) && value.length > 0\n\t}\n\n\t/**\n\t * Checks that value is array like\n\t * @param value\n\t * @return {boolean}\n\t */\n\tisArrayLike(value: any): boolean {\n\t\treturn (\n\t\t\t!this.isNil(value) &&\n\t\t\t!this.isFunction(value) &&\n\t\t\tvalue.length > -1 &&\n\t\t\tvalue.length <= Number.MAX_SAFE_INTEGER\n\t\t)\n\t}\n\n\t/**\n\t * Checks that value is Date\n\t * @param value\n\t * @return {boolean}\n\t */\n\tisDate(value: any): boolean {\n\t\treturn this.isObjectLike(value) && this.getTag(value) === '[object Date]'\n\t}\n\n\t/**\n\t * Checks that is a DOM node\n\t * @param value\n\t * @return {boolean}\n\t */\n\tisDomNode(value: any): boolean {\n\t\treturn (\n\t\t\tthis.isObjectLike(value) &&\n\t\t\t!this.isPlainObject(value) &&\n\t\t\t'nodeType' in value\n\t\t)\n\t}\n\n\t/**\n\t * Checks that value is element node\n\t * @param value\n\t * @return {boolean}\n\t */\n\tisElementNode(value: any): boolean {\n\t\treturn this.isDomNode(value) && value.nodeType === Node.ELEMENT_NODE\n\t}\n\n\t/**\n\t * Checks that value is a text node\n\t * @param value\n\t * @return {boolean}\n\t */\n\tisTextNode(value: any): boolean {\n\t\treturn this.isDomNode(value) && value.nodeType === Node.TEXT_NODE\n\t}\n\n\t/**\n\t * Checks that value is Map\n\t * @param value\n\t * @return {boolean}\n\t */\n\tisMap(value: any): boolean {\n\t\treturn this.isObjectLike(value) && this.getTag(value) === '[object Map]'\n\t}\n\n\t/**\n\t * Checks that value is Set\n\t * @param value\n\t * @return {boolean}\n\t */\n\tisSet(value: any): boolean {\n\t\treturn this.isObjectLike(value) && this.getTag(value) === '[object Set]'\n\t}\n\n\t/**\n\t * Checks that value is WeakMap\n\t * @param value\n\t * @return {boolean}\n\t */\n\tisWeakMap(value: any): boolean {\n\t\treturn this.isObjectLike(value) && this.getTag(value) === '[object WeakMap]'\n\t}\n\n\t/**\n\t * Checks that value is WeakSet\n\t * @param value\n\t * @return {boolean}\n\t */\n\tisWeakSet(value: any): boolean {\n\t\treturn this.isObjectLike(value) && this.getTag(value) === '[object WeakSet]'\n\t}\n\n\t/**\n\t * Checks that value is prototype\n\t * @param value\n\t * @return {boolean}\n\t */\n\tisPrototype(value: any): boolean {\n\t\treturn (\n\t\t\t((typeof (value && value.constructor) === 'function' &&\n\t\t\t\tvalue.constructor.prototype) ||\n\t\t\t\tObject.prototype) === value\n\t\t)\n\t}\n\n\t/**\n\t * Checks that value is regexp\n\t * @param value\n\t * @return {boolean}\n\t */\n\tisRegExp(value: any): boolean {\n\t\treturn this.isObjectLike(value) && this.getTag(value) === '[object RegExp]'\n\t}\n\n\t/**\n\t * Checks that value is null\n\t * @param value\n\t * @return {boolean}\n\t */\n\tisNull(value: any): boolean {\n\t\treturn value === null\n\t}\n\n\t/**\n\t * Checks that value is undefined\n\t * @param value\n\t * @return {boolean}\n\t */\n\tisUndefined(value: any): boolean {\n\t\treturn typeof value === 'undefined'\n\t}\n\n\t/**\n\t * Checks that value is ArrayBuffer\n\t * @param value\n\t * @return {boolean}\n\t */\n\tisArrayBuffer(value: any): boolean {\n\t\treturn (\n\t\t\tthis.isObjectLike(value) && this.getTag(value) === '[object ArrayBuffer]'\n\t\t)\n\t}\n\n\t/**\n\t * Checks that value is typed array\n\t * @param value\n\t * @return {boolean}\n\t */\n\tisTypedArray(value: any): boolean {\n\t\tconst regExpTypedTag =\n\t\t\t/^\\[object (?:Float(?:32|64)|(?:Int|Uint)(?:8|16|32)|Uint8Clamped)]$/\n\t\treturn this.isObjectLike(value) && regExpTypedTag.test(this.getTag(value))\n\t}\n\n\t/**\n\t * Checks that value is Blob\n\t * @param value\n\t * @return {boolean}\n\t */\n\tisBlob(value: any): boolean {\n\t\treturn (\n\t\t\tthis.isObjectLike(value) &&\n\t\t\tthis.isNumber(value.size) &&\n\t\t\tthis.isString(value.type) &&\n\t\t\tthis.isFunction(value.slice)\n\t\t)\n\t}\n\n\t/**\n\t * Checks that value is File\n\t * @param value\n\t * @return {boolean}\n\t */\n\tisFile(value: any): boolean {\n\t\treturn (\n\t\t\tthis.isBlob(value) &&\n\t\t\tthis.isString(value.name) &&\n\t\t\t(this.isNumber(value.lastModified) ||\n\t\t\t\tthis.isObjectLike(value.lastModifiedDate))\n\t\t)\n\t}\n\n\t/**\n\t * Checks that value is FormData\n\t * @param value\n\t * @return {boolean}\n\t */\n\tisFormData(value: any): boolean {\n\t\treturn value instanceof FormData\n\t}\n\n\tclone(obj: any, bCopyObj: boolean = true): any {\n\t\tlet _obj, i, l\n\n\t\tif (obj === null) {\n\t\t\treturn null\n\t\t}\n\n\t\tif (this.isDomNode(obj)) {\n\t\t\t_obj = obj.cloneNode(bCopyObj)\n\t\t} else if (typeof obj == 'object') {\n\t\t\tif (this.isArray(obj)) {\n\t\t\t\t_obj = []\n\t\t\t\tfor (i = 0, l = obj.length; i < l; i++) {\n\t\t\t\t\tif (typeof obj[i] == 'object' && bCopyObj) {\n\t\t\t\t\t\t_obj[i] = this.clone(obj[i], bCopyObj)\n\t\t\t\t\t} else {\n\t\t\t\t\t\t_obj[i] = obj[i]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t_obj = {}\n\t\t\t\tif (obj.constructor) {\n\t\t\t\t\tif (this.isDate(obj)) {\n\t\t\t\t\t\t_obj = new Date(obj)\n\t\t\t\t\t} else {\n\t\t\t\t\t\t_obj = new obj.constructor()\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfor (i in obj) {\n\t\t\t\t\tif (!obj.hasOwnProperty(i)) {\n\t\t\t\t\t\tcontinue\n\t\t\t\t\t}\n\t\t\t\t\tif (typeof obj[i] === 'object' && bCopyObj) {\n\t\t\t\t\t\t_obj[i] = this.clone(obj[i], bCopyObj)\n\t\t\t\t\t} else {\n\t\t\t\t\t\t_obj[i] = obj[i]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\t_obj = obj\n\t\t}\n\n\t\treturn _obj\n\t}\n}\n\nconst Type = new TypeManager()\n\nexport default Type\n","/**\n * uuid v7\n *\n * @link https://github.com/uuidjs/uuid\n */\n\ntype V7State = {\n\t// time, milliseconds\n\tmsecs?: number\n\t// sequence number (32-bits)\n\tseq?: number\n}\n\nconst _state: V7State = {}\n\nlet getRandomValues: typeof crypto.getRandomValues | undefined\nconst randoms8 = new Uint8Array(16)\n\nconst byteToHex: string[] = []\nfor (let i = 0; i < 256; ++i) {\n\tbyteToHex.push((i + 0x100).toString(16).slice(1))\n}\n\nfunction updateV7State(state: V7State, now: number, randoms: Uint8Array) {\n\tstate.msecs ??= -Infinity\n\tstate.seq ??= 0\n\n\tif (now > state.msecs) {\n\t\t// Time has moved on! Pick a new random sequence number\n\t\tstate.seq =\n\t\t\t(randoms[6] << 23) | (randoms[7] << 16) | (randoms[8] << 8) | randoms[9]\n\t\tstate.msecs = now\n\t} else {\n\t\t// Bump sequence counter w/ 32-bit rollover\n\t\tstate.seq = Math.trunc(state.seq + 1)\n\n\t\t// In case of rollover, bump timestamp to preserve monotonicity. This is\n\t\t// allowed by the RFC and should self-correct as the system clock catches\n\t\t// up. See https://www.rfc-editor.org/rfc/rfc9562.html#section-6.2-9.4\n\t\tif (state.seq === 0) {\n\t\t\tstate.msecs++\n\t\t}\n\t}\n\n\treturn state\n}\n\nfunction v7Bytes(\n\trandoms: Uint8Array,\n\tmsecs?: number,\n\tseq?: number,\n\tbuf?: Uint8Array,\n\toffset = 0\n) {\n\tif (!buf) {\n\t\tbuf = new Uint8Array(16)\n\t\toffset = 0\n\t}\n\n\t// Defaults\n\tmsecs ??= Date.now()\n\tseq ??=\n\t\t((randoms[6] * 0x7f) << 24) |\n\t\t(randoms[7] << 16) |\n\t\t(randoms[8] << 8) |\n\t\trandoms[9]\n\n\t// byte 0-5: timestamp (48 bits)\n\tbuf[offset++] = (msecs / 0x10000000000) & 0xff\n\tbuf[offset++] = (msecs / 0x100000000) & 0xff\n\tbuf[offset++] = (msecs / 0x1000000) & 0xff\n\tbuf[offset++] = (msecs / 0x10000) & 0xff\n\tbuf[offset++] = (msecs / 0x100) & 0xff\n\tbuf[offset++] = msecs & 0xff\n\n\t// byte 6: `version` (4 bits) | sequence bits 28-31 (4 bits)\n\tbuf[offset++] = 0x70 | ((seq >>> 28) & 0x0f)\n\n\t// byte 7: sequence bits 20-27 (8 bits)\n\tbuf[offset++] = (seq >>> 20) & 0xff\n\n\t// byte 8: `variant` (2 bits) | sequence bits 14-19 (6 bits)\n\tbuf[offset++] = 0x80 | ((seq >>> 14) & 0x3f)\n\n\t// byte 9: sequence bits 6-13 (8 bits)\n\tbuf[offset++] = (seq >>> 6) & 0xff\n\n\t// byte 10: sequence bits 0-5 (6 bits) | random (2 bits)\n\tbuf[offset++] = ((seq << 2) & 0xff) | (randoms[10] & 0x03)\n\n\t// bytes 11-15: random (40 bits)\n\tbuf[offset++] = randoms[11]\n\tbuf[offset++] = randoms[12]\n\tbuf[offset++] = randoms[13]\n\tbuf[offset++] = randoms[14]\n\tbuf[offset++] = randoms[15]\n\n\treturn buf\n}\n\nfunction unsafeStringify(arr: Uint8Array, offset = 0): string {\n\t// Note: Be careful editing this code!  It's been tuned for performance\n\t// and works in ways you may not expect.\n\t//\n\t// Note to future-self: No, you can't remove the `toLowerCase()` call.\n\treturn (\n\t\tbyteToHex[arr[offset]] +\n\t\tbyteToHex[arr[offset + 1]] +\n\t\tbyteToHex[arr[offset + 2]] +\n\t\tbyteToHex[arr[offset + 3]] +\n\t\t'-' +\n\t\tbyteToHex[arr[offset + 4]] +\n\t\tbyteToHex[arr[offset + 5]] +\n\t\t'-' +\n\t\tbyteToHex[arr[offset + 6]] +\n\t\tbyteToHex[arr[offset + 7]] +\n\t\t'-' +\n\t\tbyteToHex[arr[offset + 8]] +\n\t\tbyteToHex[arr[offset + 9]] +\n\t\t'-' +\n\t\tbyteToHex[arr[offset + 10]] +\n\t\tbyteToHex[arr[offset + 11]] +\n\t\tbyteToHex[arr[offset + 12]] +\n\t\tbyteToHex[arr[offset + 13]] +\n\t\tbyteToHex[arr[offset + 14]] +\n\t\tbyteToHex[arr[offset + 15]]\n\t).toLowerCase()\n}\n\nexport default function uuidv7(): string {\n\tconst buf = undefined\n\tconst offset = undefined\n\n\tconst now = Date.now()\n\n\tif (!getRandomValues) {\n\t\tif (typeof crypto === 'undefined' || !crypto.getRandomValues) {\n\t\t\tthrow new Error('crypto.getRandomValues() not supported.')\n\t\t}\n\n\t\tgetRandomValues = crypto.getRandomValues.bind(crypto)\n\t}\n\n\tconst randoms = getRandomValues(randoms8)\n\n\tupdateV7State(_state, now, randoms)\n\n\tconst bytes: Uint8Array = v7Bytes(\n\t\trandoms,\n\t\t_state.msecs,\n\t\t_state.seq,\n\t\tbuf,\n\t\toffset\n\t)\n\n\treturn unsafeStringify(bytes)\n}\n","import { DateTime, type DateTimeOptions } from 'luxon'\nimport uuidv7 from '../tools/uuidv7'\nimport Type from './type'\n\n// eslint-disable-next-line\nconst reEscape = /[&<>'\"]/g\nconst reUnescape = /&(?:amp|#38|lt|#60|gt|#62|apos|#39|quot|#34)/g\n\nconst escapeEntities: Record<string, string> = {\n\t'&': '&amp',\n\t'<': '&lt',\n\t'>': '&gt',\n\t\"'\": '&#39',\n\t'\"': '&quot',\n}\n\nconst unescapeEntities: Record<string, string> = {\n\t'&amp': '&',\n\t'&#38': '&',\n\t'&lt': '<',\n\t'&#60': '<',\n\t'&gt': '>',\n\t'&#62': '>',\n\t'&apos': \"'\",\n\t'&#39': \"'\",\n\t'&quot': '\"',\n\t'&#34': '\"',\n}\n\n/**\n * The `Text` class provides a set of utility methods for working with text data.\n * It includes functions for encoding and decoding HTML entities, generating random strings,\n * converting values to different data types, and changing the case and format of strings\n *\n * @see bitrix/js/main/core/src/lib/text.js\n */\nclass TextManager {\n\tgetRandom(length = 8): string {\n\t\t// eslint-disable-next-line\n\t\treturn [...Array(length)]\n\t\t\t.map(() => Math.trunc(Math.random() * 36).toString(36))\n\t\t\t.join('')\n\t}\n\n\t/**\n\t * Generates UUID\n\t */\n\tgetUniqId(): string {\n\t\treturn 'xxxxxxxx-xlsx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n\t\t\tconst r = Math.trunc(Math.random() * 16)\n\t\t\tconst v = c === 'x' ? r : (r & 0x3) | 0x8\n\t\t\treturn v.toString(16)\n\t\t})\n\t}\n\n\t/**\n\t * Generate uuid v7\n\t * @return {string}\n\t */\n\tgetUuidRfc4122(): string {\n\t\treturn uuidv7()\n\t}\n\n\t/**\n\t * Encodes all unsafe entities\n\t * @param {string} value\n\t * @return {string}\n\t */\n\tencode(value: string): string {\n\t\tif (Type.isString(value)) {\n\t\t\treturn value.replace(reEscape, (item) => escapeEntities[item])\n\t\t}\n\n\t\treturn value\n\t}\n\n\t/**\n\t * Decodes all encoded entities\n\t * @param {string} value\n\t * @return {string}\n\t */\n\tdecode(value: string): string {\n\t\tif (Type.isString(value)) {\n\t\t\treturn value.replace(reUnescape, (item) => unescapeEntities[item])\n\t\t}\n\n\t\treturn value\n\t}\n\n\ttoNumber(value: any): number {\n\t\tconst parsedValue = Number.parseFloat(value)\n\n\t\tif (Type.isNumber(parsedValue)) {\n\t\t\treturn parsedValue\n\t\t}\n\n\t\treturn 0.0\n\t}\n\n\ttoInteger(value: any): number {\n\t\treturn this.toNumber(Number.parseInt(value, 10))\n\t}\n\n\ttoBoolean(value: any, trueValues: string[] = []): boolean {\n\t\tconst transformedValue = Type.isString(value) ? value.toLowerCase() : value\n\t\treturn ['true', 'y', '1', 1, true, ...trueValues].includes(transformedValue)\n\t}\n\n\ttoCamelCase(str: string): string {\n\t\tif (!Type.isStringFilled(str)) {\n\t\t\treturn str\n\t\t}\n\n\t\t// eslint-disable-next-line\n\t\tconst regex = /[-_\\s]+(.)?/g\n\t\tif (!regex.test(str)) {\n\t\t\t// eslint-disable-next-line\n\t\t\treturn str.match(/^[A-Z]+$/)\n\t\t\t\t? str.toLowerCase()\n\t\t\t\t: str[0].toLowerCase() + str.slice(1)\n\t\t}\n\n\t\tstr = str.toLowerCase()\n\t\tstr = str.replace(regex, (_match: string, letter) =>\n\t\t\tletter ? letter.toUpperCase() : ''\n\t\t)\n\n\t\t// eslint-disable-next-line\n\t\treturn str[0].toLowerCase() + str.substring(1)\n\t}\n\n\ttoPascalCase(str: string): string {\n\t\tif (!Type.isStringFilled(str)) {\n\t\t\treturn str\n\t\t}\n\n\t\treturn this.capitalize(this.toCamelCase(str))\n\t}\n\n\ttoKebabCase(str: string): string {\n\t\tif (!Type.isStringFilled(str)) {\n\t\t\treturn str\n\t\t}\n\n\t\tconst matches = str.match(\n\t\t\t// eslint-disable-next-line\n\t\t\t/[A-Z]{2,}(?=[A-Z][a-z]+[0-9]*|\\b)|[A-Z]?[a-z]+[0-9]*|[A-Z]|[0-9]+/g\n\t\t)\n\t\tif (!matches) {\n\t\t\treturn str\n\t\t}\n\n\t\treturn matches.map((x) => x.toLowerCase()).join('-')\n\t}\n\n\tcapitalize(str: string): string {\n\t\tif (!Type.isStringFilled(str)) {\n\t\t\treturn str\n\t\t}\n\n\t\t// eslint-disable-next-line\n\t\treturn str[0].toUpperCase() + str.substring(1)\n\t}\n\n\tnumberFormat(\n\t\tnumber: number,\n\t\tdecimals: number = 0,\n\t\tdecPoint: string = '.',\n\t\tthousandsSep: string = ','\n\t): string {\n\t\t// eslint-disable-next-line\n\t\tconst n = !Number.isFinite(number) ? 0 : number\n\t\t// eslint-disable-next-line\n\t\tconst fractionDigits = !Number.isFinite(decimals) ? 0 : Math.abs(decimals)\n\n\t\tconst toFixedFix = (n: number, fractionDigits: number): number => {\n\t\t\tconst k = Math.pow(10, fractionDigits)\n\t\t\treturn Math.round(n * k) / k\n\t\t}\n\n\t\tconst s = (fractionDigits ? toFixedFix(n, fractionDigits) : Math.round(n))\n\t\t\t.toString()\n\t\t\t.split('.')\n\n\t\tif (s[0].length > 3) {\n\t\t\ts[0] = s[0].replace(/\\B(?=(?:\\d{3})+(?!\\d))/g, thousandsSep)\n\t\t}\n\n\t\tif ((s[1] || '').length < fractionDigits) {\n\t\t\ts[1] = s[1] || ''\n\t\t\t// eslint-disable-next-line\n\t\t\ts[1] += new Array(fractionDigits - s[1].length + 1).join('0')\n\t\t}\n\n\t\treturn s.join(decPoint)\n\t}\n\n\t/**\n\t * Convert string to DateTime from ISO 8601 or self template\n\t *\n\t * @param {string} dateString\n\t * @param {string} template\n\t * @param opts\n\t * @returns {DateTime}\n\t *\n\t * @link https://moment.github.io/luxon/#/parsing?id=parsing-technical-formats\n\t */\n\ttoDateTime(\n\t\tdateString: string,\n\t\ttemplate?: string,\n\t\topts?: DateTimeOptions\n\t): DateTime {\n\t\tif (!(typeof template === 'undefined') && Type.isStringFilled(template)) {\n\t\t\treturn DateTime.fromFormat(dateString, template, opts)\n\t\t}\n\n\t\treturn DateTime.fromISO(dateString, opts)\n\t}\n\n\tgetDateForLog(): string {\n\t\tconst now = DateTime.now()\n\t\treturn now.toFormat('y-MM-dd HH:mm:ss')\n\t}\n\n\tbuildQueryString(params: any): string {\n\t\tlet result = ''\n\t\tfor (const key in params) {\n\t\t\tif (!params.hasOwnProperty(key)) {\n\t\t\t\tcontinue\n\t\t\t}\n\n\t\t\tconst value = params[key]\n\t\t\tif (Type.isArray(value)) {\n\t\t\t\t// eslint-disable-next-line\n\t\t\t\tvalue.forEach((valueElement: any, index: any) => {\n\t\t\t\t\tresult +=\n\t\t\t\t\t\tencodeURIComponent(key + '[' + index + ']') +\n\t\t\t\t\t\t'=' +\n\t\t\t\t\t\tencodeURIComponent(valueElement) +\n\t\t\t\t\t\t'&'\n\t\t\t\t})\n\t\t\t} else {\n\t\t\t\tresult +=\n\t\t\t\t\tencodeURIComponent(key) + '=' + encodeURIComponent(value) + '&'\n\t\t\t}\n\t\t}\n\n\t\tif (result.length > 0) {\n\t\t\t// eslint-disable-next-line\n\t\t\tresult = result.substring(0, result.length - 1)\n\t\t}\n\n\t\treturn result\n\t}\n}\n\nconst Text = new TextManager()\n\nexport default Text\n","import Type from './type'\n\nlet UA: string = ''\ntry {\n\tUA = navigator?.userAgent.toLowerCase()\n} catch {\n\tUA = '?'\n}\n\n/**\n * @see bitrix/js/main/core/src/lib/browser.js\n */\nclass BrowserManager {\n\tisOpera(): boolean {\n\t\treturn UA.includes('opera')\n\t}\n\n\tisIE(): boolean {\n\t\treturn 'attachEvent' in document && !this.isOpera()\n\t}\n\n\tisIE6(): boolean {\n\t\treturn UA.includes('msie 6')\n\t}\n\n\tisIE7(): boolean {\n\t\treturn UA.includes('msie 7')\n\t}\n\n\tisIE8(): boolean {\n\t\treturn UA.includes('msie 8')\n\t}\n\n\tisIE9(): boolean {\n\t\t// @ts-ignore ////\n\t\treturn 'documentMode' in document && document.documentMode >= 9\n\t}\n\n\tisIE10(): boolean {\n\t\t// @ts-ignore ////\n\t\treturn 'documentMode' in document && document.documentMode >= 10\n\t}\n\n\tisSafari(): boolean {\n\t\treturn UA.includes('safari') && !UA.includes('chrome')\n\t}\n\n\tisFirefox() {\n\t\treturn UA.includes('firefox')\n\t}\n\n\tisChrome() {\n\t\treturn UA.includes('chrome')\n\t}\n\n\tdetectIEVersion() {\n\t\tif (\n\t\t\tthis.isOpera() ||\n\t\t\tthis.isSafari() ||\n\t\t\tthis.isFirefox() ||\n\t\t\tthis.isChrome()\n\t\t) {\n\t\t\treturn -1\n\t\t}\n\n\t\tlet rv = -1\n\n\t\tif (\n\t\t\t// @ts-ignore ////\n\t\t\t!!window.MSStream &&\n\t\t\t// @ts-ignore ////\n\t\t\t!window.ActiveXObject &&\n\t\t\t'ActiveXObject' in window\n\t\t) {\n\t\t\trv = 11\n\t\t} else if (this.isIE10()) {\n\t\t\trv = 10\n\t\t} else if (this.isIE9()) {\n\t\t\trv = 9\n\t\t} else if (this.isIE()) {\n\t\t\trv = 8\n\t\t}\n\n\t\tif (rv === -1 || rv === 8) {\n\t\t\t// @ts-ignore ////\n\t\t\tif (navigator.appName === 'Microsoft Internet Explorer') {\n\t\t\t\t// eslint-disable-next-line\n\t\t\t\tconst re = new RegExp('MSIE ([0-9]+[.0-9]*)')\n\t\t\t\tconst res = navigator.userAgent.match(re)\n\n\t\t\t\t// @ts-ignore ////\n\t\t\t\tif (Type.isArrayLike(res) && res.length > 0) {\n\t\t\t\t\t// @ts-ignore ////\n\t\t\t\t\trv = Number.parseFloat(res[1])\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// @ts-ignore ////\n\t\t\tif (navigator.appName === 'Netscape') {\n\t\t\t\t// Alternative check for IE 11\n\t\t\t\trv = 11\n\t\t\t\t// eslint-disable-next-line\n\t\t\t\tconst re = new RegExp('Trident/.*rv:([0-9]+[.0-9]*)')\n\n\t\t\t\tif (re.exec(navigator.userAgent) != null) {\n\t\t\t\t\tconst res = navigator.userAgent.match(re)\n\n\t\t\t\t\t// @ts-ignore ////\n\t\t\t\t\tif (Type.isArrayLike(res) && res.length > 0) {\n\t\t\t\t\t\t// @ts-ignore ////\n\t\t\t\t\t\trv = Number.parseFloat(res[1])\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn rv\n\t}\n\n\tisIE11(): boolean {\n\t\treturn this.detectIEVersion() >= 11\n\t}\n\n\tisMac(): boolean {\n\t\treturn UA.includes('macintosh')\n\t}\n\n\tisWin(): boolean {\n\t\treturn UA.includes('windows')\n\t}\n\n\tisLinux(): boolean {\n\t\treturn UA.includes('linux') && !this.isAndroid()\n\t}\n\n\tisAndroid(): boolean {\n\t\treturn UA.includes('android')\n\t}\n\n\tisIPad(): boolean {\n\t\treturn UA.includes('ipad;') || (this.isMac() && this.isTouchDevice())\n\t}\n\n\tisIPhone(): boolean {\n\t\treturn UA.includes('iphone;')\n\t}\n\n\tisIOS(): boolean {\n\t\treturn this.isIPad() || this.isIPhone()\n\t}\n\n\tisMobile(): boolean {\n\t\treturn (\n\t\t\tthis.isIPhone() ||\n\t\t\tthis.isIPad() ||\n\t\t\tthis.isAndroid() ||\n\t\t\tUA.includes('mobile') ||\n\t\t\tUA.includes('touch')\n\t\t)\n\t}\n\n\tisRetina(): boolean {\n\t\treturn (window.devicePixelRatio && window.devicePixelRatio >= 2) === true\n\t}\n\n\tisTouchDevice(): boolean {\n\t\treturn (\n\t\t\t'ontouchstart' in window ||\n\t\t\tnavigator.maxTouchPoints > 0 ||\n\t\t\t// @ts-ignore ////\n\t\t\tnavigator.msMaxTouchPoints > 0\n\t\t)\n\t}\n\n\tisDoctype(target: any): boolean {\n\t\tconst doc = target || document\n\n\t\tif (doc.compatMode) {\n\t\t\treturn doc.compatMode === 'CSS1Compat'\n\t\t}\n\n\t\treturn doc.documentElement && doc.documentElement.clientHeight\n\t}\n\n\tisLocalStorageSupported(): boolean {\n\t\ttry {\n\t\t\tlocalStorage.setItem('test', 'test')\n\t\t\tlocalStorage.removeItem('test')\n\t\t\treturn true\n\t\t} catch {\n\t\t\treturn false\n\t\t}\n\t}\n\n\tdetectAndroidVersion(): number {\n\t\t// eslint-disable-next-line\n\t\tconst re = new RegExp('Android ([0-9]+[.0-9]*)')\n\n\t\tif (re.exec(navigator.userAgent) != null) {\n\t\t\tconst res = navigator.userAgent.match(re)\n\n\t\t\t// @ts-ignore ////\n\t\t\tif (Type.isArrayLike(res) && res.length > 0) {\n\t\t\t\t// @ts-ignore ////\n\t\t\t\treturn Number.parseFloat(res[1])\n\t\t\t}\n\t\t}\n\n\t\treturn 0\n\t}\n}\n\nconst Browser = new BrowserManager()\n\nexport default Browser\n","import { LoggerBrowser } from '../logger/browser'\nimport { Result } from '../core/result'\nimport { AjaxResult } from '../core/http/ajax-result'\n\nexport type TypeHttp = {\n\tsetLogger(logger: LoggerBrowser): void\n\tgetLogger(): LoggerBrowser\n\n\tbatch(calls: any[] | object, isHaltOnError: boolean): Promise<Result>\n\n\tcall(method: string, params: object, start: number): Promise<AjaxResult>\n\n\tsetRestrictionManagerParams(params: TypeRestrictionManagerParams): void\n\n\tgetRestrictionManagerParams(): TypeRestrictionManagerParams\n\n\tsetLogTag(logTag?: string): void\n\tclearLogTag(): void\n\t\n\t/**\n\t * On|Off warning about client-side query execution\n\t * @param {boolean} value\n\t * @param {string} message\n\t */\n\tsetClientSideWarning(value: boolean, message: string): void\n}\n\nexport interface IRequestIdGenerator {\n\tgetRequestId(): string\n\tgetHeaderFieldName(): string\n\tgetQueryStringParameterName(): string\n\tgetQueryStringSdkParameterName(): string\n}\n\nexport type TypeRestrictionManagerParams = {\n\tsleep: number\n\tspeed: number\n\tamount: number\n}\n\nexport const RestrictionManagerParamsBase = {\n\tsleep: 1_000,\n\tspeed: 0.001,\n\tamount: 30,\n} as TypeRestrictionManagerParams\n\n/**\n * @todo Need test\n */\nexport const RestrictionManagerParamsForEnterprise = {\n\tsleep: 600,\n\tspeed: 0.01,\n\tamount: 30 * 5,\n} as TypeRestrictionManagerParams\n","/**\n * CRM Entity Types\n * @link https://dev.1c-bitrix.ru/rest_help/crm/constants.php\n */\nexport enum EnumCrmEntityType {\n\tundefined = 'UNDEFINED',\n\tlead = 'CRM_LEAD',\n\tdeal = 'CRM_DEAL',\n\tcontact = 'CRM_CONTACT',\n\tcompany = 'CRM_COMPANY',\n\toldInvoice = 'CRM_INVOICE',\n\tinvoice = 'CRM_SMART_INVOICE',\n\tquote = 'CRM_QUOTE',\n\trequisite = 'CRM_REQUISITE',\n}\n\nexport enum EnumCrmEntityTypeId {\n\tundefined = 0,\n\tlead = 1,\n\tdeal = 2,\n\tcontact = 3,\n\tcompany = 4,\n\toldInvoice = 5,\n\tinvoice = 31,\n\tquote = 7,\n\trequisite = 8,\n}\n","import { DateTime } from 'luxon'\n\nimport type { BoolString, GenderString } from './common'\n\nexport enum LoadDataType {\n\tApp = 'app',\n\tProfile = 'profile',\n\tCurrency = 'currency',\n\tAppOptions = 'appOptions',\n\tUserOptions = 'userOptions',\n}\n\nexport type TypeUser = {\n\treadonly isAdmin: boolean\n\n\treadonly id: null | number\n\treadonly lastName: null | string\n\treadonly name: null | string\n\n\treadonly gender: GenderString\n\n\treadonly photo: null | string\n\n\treadonly TimeZone: null | string\n\treadonly TimeZoneOffset: null | number\n}\n\nexport const EnumAppStatus = {\n\t// free ////\n\tFree: 'F',\n\n\t// demo version ////\n\tDemo: 'D',\n\n\t// trial version (limited time) ////\n\tTrial: 'T',\n\n\t// paid application ////\n\tPaid: 'P',\n\n\t// local application ////\n\tLocal: 'L',\n\n\t// subscription application ////\n\tSubscription: 'S',\n} as const\n\nexport const StatusDescriptions: Record<\n\t(typeof EnumAppStatus)[keyof typeof EnumAppStatus],\n\tstring\n> = {\n\t[EnumAppStatus.Free]: 'Free',\n\t[EnumAppStatus.Demo]: 'Demo',\n\t[EnumAppStatus.Trial]: 'Trial',\n\t[EnumAppStatus.Paid]: 'Paid',\n\t[EnumAppStatus.Local]: 'Local',\n\t[EnumAppStatus.Subscription]: 'Subscription',\n}\n\nexport type TypeEnumAppStatus = keyof typeof EnumAppStatus\n\n/**\n * @link https://dev.1c-bitrix.ru/rest_help/general/app_info.php\n */\nexport type TypeApp = {\n\t/**\n\t * Local application identifier on the portal\n\t */\n\treadonly id: number\n\n\t/**\n\t * application code\n\t */\n\treadonly code: string\n\n\t/**\n\t * installed version of the application\n\t */\n\treadonly version: number\n\n\t/**\n\t * application status\n\t */\n\treadonly status: TypeEnumAppStatus\n\n\t/**\n\t * application installed flag\n\t */\n\treadonly isInstalled: boolean\n}\n\n/**\n * @link https://dev.1c-bitrix.ru/rest_help/general/app_info.php\n */\nexport type TypePayment = {\n\t/**\n\t * flag indicating whether the paid period or trial period has expired\n\t */\n\treadonly isExpired: boolean\n\n\t/**\n\t * number of days remaining until the end of the paid period or trial period\n\t */\n\treadonly days: number\n}\n\n/**\n * @link https://dev.1c-bitrix.ru/rest_help/general/app_info.php\n */\nexport type TypeLicense = {\n\t/**\n\t * language code designation\n\t */\n\treadonly languageId: null | string\n\t/**\n\t * tariff designation with indication of the region as a prefix\n\t */\n\treadonly license: null | string\n\n\t/**\n\t * internal tariff designation without indication of region\n\t */\n\treadonly licenseType: null | string\n\n\t/**\n\t * past meaning of license\n\t */\n\treadonly licensePrevious: null | string\n\n\t/**\n\t * Tariff designation without specifying the region.\n\t */\n\treadonly licenseFamily: null | string\n\n\t/**\n\t * flag indicating whether it is a box (true) or a cloud (false)\n\t */\n\treadonly isSelfHosted: boolean\n}\n\nexport const TypeSpecificUrl = {\n\tMainSettings: 'MainSettings',\n\tUfList: 'UfList',\n\tUfPage: 'UfPage',\n} as const\n\nexport type TypeB24Form = {\n\treadonly app_code: string\n\treadonly app_status: string\n\n\treadonly payment_expired: BoolString\n\treadonly days: number\n\n\t/**\n\t * B24 tariff plan identifier (if cloud)\n\t */\n\treadonly b24_plan: string\n\n\treadonly c_name: string\n\treadonly c_last_name: string\n\n\treadonly hostname: string\n}\n\nexport type CurrencyFormat = {\n\tdecimals: number\n\tdecPoint: string\n\tformatString: string\n\tfullName: string\n\tisHideZero: boolean\n\tthousandsSep?: string\n\tthousandsVariant?: 'N' | 'D' | 'C' | 'S' | 'B' | 'OWN' | string\n}\n\nexport type Currency = {\n\tamount: number\n\tamountCnt: number\n\tisBase: boolean\n\tcurrencyCode: string\n\tdateUpdate: DateTime\n\tdecimals: number\n\tdecPoint: string\n\tformatString: string\n\tfullName: string\n\tlid: string\n\tsort: number\n\tthousandsSep?: string\n\tlang: Record<string, CurrencyFormat>\n}\n\nexport enum TypeOption {\n\tNotSet = 'notSet',\n\tJsonArray = 'jsonArray',\n\tJsonObject = 'jsonObject',\n\tFloatVal = 'float',\n\tIntegerVal = 'integer',\n\tBoolYN = 'boolYN',\n\tStringVal = 'string',\n}\n","import { LoggerBrowser } from '../logger/browser'\nimport type { TypeB24 } from './b24'\nimport type { ISODate, NumberString } from './common'\n\nexport type TypePullMessage = {\n\tcommand: string\n\tparams: Record<string, any>\n\textra: Record<string, any>\n}\n\nexport type TypePullClientMessageBody = {\n\tmodule_id: string\n\tcommand: string\n\tparams: any\n\textra?: {\n\t\trevision_web?: number\n\t\tsender?: {\n\t\t\ttype: SenderType\n\t\t}\n\t\tserver_time_unix?: number\n\t\tserver_time_ago?: number\n\t}\n}\n\nexport enum ConnectionType {\n\tUndefined = 'undefined',\n\tWebSocket = 'webSocket',\n\tLongPolling = 'longPolling',\n}\n\nexport type TypeConnector = {\n\tsetLogger(logger: LoggerBrowser): void\n\tdestroy(): void\n\tconnect(): void\n\tdisconnect(code: number, reason: string): void\n\tsend(buffer: ArrayBuffer | string): boolean\n\tconnected: boolean\n\tconnectionPath: string\n}\n\nexport type ConnectorParent = {\n\tsession: TypePullClientSession\n\tgetConnectionPath(connectionType: ConnectionType): string\n\tgetPublicationPath(): string\n\tsetLastMessageId(lastMessageId: string): void\n\tisProtobufSupported(): boolean\n\tisJsonRpc(): boolean\n}\n\nexport type ConnectorCallbacks = {\n\tonOpen: () => void\n\tonDisconnect: (response: { code: number; reason: string }) => void\n\tonError: (error: Error) => void\n\tonMessage: (response: string | ArrayBuffer) => void\n}\n\nexport type ConnectorConfig = {\n\tparent: ConnectorParent\n\tonOpen?: () => void\n\tonDisconnect?: (response: { code: number; reason: string }) => void\n\tonError?: (error: Error) => void\n\tonMessage?: (response: string | ArrayBuffer) => void\n}\n\nexport type StorageManagerParams = {\n\tuserId?: number\n\tsiteId?: string\n}\n\nexport type TypeStorageManager = {\n\tsetLogger(logger: LoggerBrowser): void\n\tgetLogger(): LoggerBrowser\n\n\tset(name: string, value: any): void\n\tget(name: string, defaultValue: any): any\n\tremove(name: string): void\n\tcompareKey(eventKey: string, userKey: string): boolean\n}\n\nexport enum LsKeys {\n\tPullConfig = 'bx-pull-config',\n\tWebsocketBlocked = 'bx-pull-websocket-blocked',\n\tLongPollingBlocked = 'bx-pull-longpolling-blocked',\n\tLoggingEnabled = 'bx-pull-logging-enabled',\n}\n\nexport type SharedConfigCallbacks = {\n\tonWebSocketBlockChanged: (response: { isWebSocketBlocked: boolean }) => void\n}\n\nexport type SharedConfigParams = {\n\tstorage?: TypeStorageManager\n\tonWebSocketBlockChanged?: (response: { isWebSocketBlocked: boolean }) => void\n}\n\nexport enum PullStatus {\n\tOnline = 'online',\n\tOffline = 'offline',\n\tConnecting = 'connect',\n}\n\nexport enum SenderType {\n\tUnknown = 0,\n\tClient = 1,\n\tBackend = 2,\n}\n\nexport enum SubscriptionType {\n\tServer = 'server',\n\tClient = 'client',\n\tOnline = 'online',\n\tStatus = 'status',\n\tRevision = 'revision',\n}\n\nexport type TypeSubscriptionOptions = {\n\t/**\n\t * Subscription type\n\t */\n\ttype?: SubscriptionType\n\n\t/**\n\t * Name of the module\n\t */\n\tmoduleId?: string\n\n\t/**\n\t * Name of the command\n\t */\n\tcommand?: null | string\n\n\t/**\n\t * Function, that will be called for incoming messages\n\t */\n\t// eslint-disable-next-line\n\tcallback: Function\n}\n\nexport interface UserStatusCallback {\n\t(params: { userId: number; isOnline: boolean }): void\n}\n\nexport interface CommandHandlerFunctionV1 {\n\t(\n\t\tdata: Record<string, any>,\n\t\tinfo?: {\n\t\t\ttype: SubscriptionType\n\t\t\tmoduleId?: string\n\t\t}\n\t): void\n}\n\nexport interface CommandHandlerFunctionV2 {\n\t(\n\t\tparams: Record<string, any>,\n\t\textra: Record<string, any>,\n\t\tcommand: string,\n\t\tinfo?: {\n\t\t\ttype: SubscriptionType\n\t\t\tmoduleId: string\n\t\t}\n\t): void\n}\n\nexport interface TypeSubscriptionCommandHandler {\n\tgetModuleId: () => string\n\tgetSubscriptionType?: () => SubscriptionType\n\tgetMap?: () => Record<string, CommandHandlerFunctionV2>\n\t[key: string]: CommandHandlerFunctionV2 | undefined\n}\n\nexport type TypePullClientEmitConfig = {\n\ttype: SubscriptionType\n\tmoduleId?: string\n\tdata?: Record<string, any>\n}\n\nexport enum CloseReasons {\n\tNORMAL_CLOSURE = 1000,\n\tSERVER_DIE = 1001,\n\tCONFIG_REPLACED = 3000,\n\tCHANNEL_EXPIRED = 3001,\n\tSERVER_RESTARTED = 3002,\n\tCONFIG_EXPIRED = 3003,\n\tMANUAL = 3004,\n\tSTUCK = 3005,\n\tWRONG_CHANNEL_ID = 4010,\n}\n\nexport enum SystemCommands {\n\tCHANNEL_EXPIRE = 'CHANNEL_EXPIRE',\n\tCONFIG_EXPIRE = 'CONFIG_EXPIRE',\n\tSERVER_RESTART = 'SERVER_RESTART',\n}\n\nexport enum ServerMode {\n\tShared = 'shared',\n\tPersonal = 'personal',\n}\n\nexport type RpcError = {\n\tcode: number\n\tmessage: string\n}\n\nexport const ListRpcError = {\n\tParse: { code: -32700, message: 'Parse error' } as RpcError,\n\tInvalidRequest: { code: -32600, message: 'Invalid Request' } as RpcError,\n\tMethodNotFound: { code: -32601, message: 'Method not found' } as RpcError,\n\tInvalidParams: { code: -32602, message: 'Invalid params' } as RpcError,\n\tInternal: { code: -32603, message: 'Internal error' } as RpcError,\n} as const\n\nexport type JsonRpcRequest = {\n\tmethod: string\n\tparams: any\n\tid: number\n}\n\nexport type RpcCommand = {\n\tjsonrpc: string\n\tmethod: string\n\tparams: any\n\tid: number\n}\n\nexport type RpcRequest = RpcCommand & {}\n\nexport type RpcCommandResult = {\n\tjsonrpc?: string\n\tid?: number\n\t/**\n\t * @fix this TypeRpcResponseAwaiters.resolve(response)\n\t */\n\tresult?: any\n\terror?: RpcError\n}\n\nexport enum RpcMethod {\n\tPublish = 'publish',\n\tGetUsersLastSeen = 'getUsersLastSeen',\n\tPing = 'ping',\n\tListChannels = 'listChannels',\n\tSubscribeStatusChange = 'subscribeStatusChange',\n\tUnsubscribeStatusChange = 'unsubscribeStatusChange',\n}\n\nexport type TypeRpcResponseAwaiters = {\n\t/**\n\t * @fix this RpcCommandResult.result\n\t */\n\tresolve: (response: any) => void\n\treject: (error: string | RpcError) => void\n\ttimeout: number\n}\n\nexport type TypeJsonRpcConfig = {\n\tconnector: TypeConnector\n\thandlers: Record<string, (params: any) => RpcCommandResult>\n}\n\nexport type TypePublicIdDescriptor = {\n\tid?: string\n\tuser_id?: NumberString\n\tpublic_id?: string\n\tsignature?: string\n\tstart: ISODate\n\tend: ISODate\n\ttype?: string\n}\n\nexport type TypeChanel = {\n\tuserId: number\n\tpublicId: string\n\tsignature: string\n\tstart: Date\n\tend: Date\n}\n\nexport type TypeChannelManagerParams = {\n\tb24: TypeB24\n\tgetPublicListMethod: string\n}\n\nexport type TypePullClientSession = {\n\tmid: null | string\n\ttag: null | string\n\ttime: null | number\n\thistory: any\n\tlastMessageIds: string[]\n\tmessageCount: number\n}\n\nexport type TypeSessionEvent = {\n\tmid: string\n\ttag?: string\n\ttime?: number\n\ttext: Record<string, any> | TypePullClientMessageBody\n}\n\nexport type TypePullClientParams = {\n\tb24: TypeB24\n\tskipCheckRevision?: boolean\n\trestApplication?: string\n\tsiteId?: string\n\n\tguestMode?: boolean\n\tguestUserId?: number\n\n\tuserId?: number\n\n\tserverEnabled?: boolean\n\tconfigGetMethod?: string\n\tgetPublicListMethod?: string\n\tskipStorageInit?: boolean\n\tconfigTimestamp?: number\n}\n\nexport type TypePullClientConfig = {\n\t/**\n\t * @fix this\n\t */\n\tclientId: null\n\tapi: {\n\t\trevision_mobile: number\n\t\trevision_web: number\n\t}\n\tchannels: {\n\t\tprivate?: TypePublicIdDescriptor\n\t\tshared?: TypePublicIdDescriptor\n\t}\n\tpublicChannels: Record<string, TypePublicIdDescriptor>\n\tserver: {\n\t\ttimeShift: number\n\t\tconfig_timestamp: number\n\t\tlong_polling: string\n\t\tlong_pooling_secure: string\n\t\tmode: string\n\t\tpublish: string\n\t\tpublish_enabled: boolean\n\t\tpublish_secure: string\n\t\tserver_enabled: boolean\n\t\tversion: number\n\t\twebsocket: string\n\t\twebsocket_enabled: boolean\n\t\twebsocket_secure: string\n\t}\n\tjwt: null | string\n\texp: number\n}\n\nexport type TypePullClientMessageBatch = {\n\tuserList?: number[]\n\tchannelList?: (\n\t\t| string\n\t\t| {\n\t\t\t\tpublicId: string\n\t\t\t\tsignature: string\n\t\t  }\n\t)[]\n\tbody: TypePullClientMessageBody\n\texpiry?: number\n}\n","/**\n * Interface defining the structure and methods of a Result object.\n */\nexport interface IResult {\n\t/**\n\t * Indicates whether the operation resulted in success (no errors).\n\t */\n\tisSuccess: boolean\n\n\t/**\n\t * Sets the data associated with the result.\n\t *\n\t * @param data The data to be stored in the result.\n\t * @returns The current Result object for chaining methods.\n\t */\n\tsetData: (data: any) => IResult\n\n\t/**\n\t * Retrieves the data associated with the result.\n\t *\n\t * @returns The data stored in the result, if any.\n\t */\n\tgetData: () => any\n\n\t/**\n\t * Adds an error message or Error object to the result.\n\t *\n\t * @param error The error message or Error object to be added.\n\t * @returns The current Result object for chaining methods.\n\t */\n\taddError: (error: Error | string) => IResult\n\n\t/**\n\t * Adds multiple errors to the result in a single call.\n\t *\n\t * @param errors An array of errors or strings that will be converted to errors.\n\t * @returns The current Result object for chaining methods.\n\t */\n\taddErrors: (errors: (Error | string)[]) => IResult\n\n\t/**\n\t * Retrieves an iterator for the errors collected in the result.\n\t *\n\t * @returns An iterator over the stored Error objects.\n\t */\n\tgetErrors: () => IterableIterator<Error>\n\n\t/**\n\t * Retrieves an array of error messages from the collected errors.\n\t *\n\t * @returns An array of strings representing the error messages.\n\t */\n\tgetErrorMessages: () => string[]\n\n\t/**\n\t * Converts the Result object to a string.\n\t *\n\t * @returns {string} Returns a string representation of the result operation\n\t */\n\ttoString: () => string\n}\n\n/**\n * A class representing an operation result with success/failure status, data, and errors.\n * Similar to \\Bitrix\\Main\\Result from Bitrix Framework.\n * @link https://dev.1c-bitrix.ru/api_d7/bitrix/main/result/index.php\n */\nexport class Result implements IResult {\n\tprivate _errorCollection: Set<Error>\n\tprotected _data: any\n\n\tconstructor() {\n\t\tthis._errorCollection = new Set()\n\t\tthis._data = null\n\t}\n\n\t/**\n\t * Getter for the `isSuccess` property.\n\t * Checks if the `_errorCollection` is empty to determine success.\n\t *\n\t * @returns Whether the operation resulted in success (no errors).\n\t */\n\tget isSuccess(): boolean {\n\t\treturn this._errorCollection.size === 0\n\t}\n\n\t/**\n\t * Sets the data associated with the result.\n\t *\n\t * @param data The data to be stored in the result.\n\t * @returns The current Result object for chaining methods.\n\t */\n\tsetData(data: any): Result {\n\t\tthis._data = data\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Retrieves the data associated with the result.\n\t *\n\t * @returns The data stored in the result, if any.\n\t */\n\tgetData(): any {\n\t\treturn this._data\n\t}\n\n\t/**\n\t * Adds an error message or Error object to the result.\n\t *\n\t * @param error The error message or Error object to be added.\n\t * @returns The current Result object for chaining methods.\n\t */\n\taddError(error: Error | string): Result {\n\t\tif (error instanceof Error) {\n\t\t\tthis._errorCollection.add(error)\n\t\t} else {\n\t\t\tthis._errorCollection.add(new Error(error.toString()))\n\t\t}\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Adds multiple errors to the result in a single call.\n\t *\n\t * @param errors An array of errors or strings that will be converted to errors.\n\t * @returns The current Result object for chaining methods.\n\t */\n\taddErrors(errors: (Error | string)[]): Result {\n\t\tfor (const error of errors) {\n\t\t\tif (error instanceof Error) {\n\t\t\t\tthis._errorCollection.add(error)\n\t\t\t} else {\n\t\t\t\tthis._errorCollection.add(new Error(error.toString()))\n\t\t\t}\n\t\t}\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Retrieves an iterator for the errors collected in the result.\n\t * @returns An iterator over the stored Error objects.\n\t */\n\tgetErrors(): IterableIterator<Error> {\n\t\treturn this._errorCollection.values()\n\t}\n\n\t/**\n\t * Retrieves an array of error messages from the collected errors.\n\t *\n\t * @returns An array of strings representing the error messages. Each string\n\t *          contains the message of a corresponding error object.\n\t */\n\tgetErrorMessages(): string[] {\n\t\treturn [...this.getErrors()].map((error: Error) => error.message)\n\t}\n\n\t/**\n\t * Converts the Result object to a string.\n\t *\n\t * @returns {string} Returns a string representation of the result operation\n\t */\n\ttoString(): string {\n\t\tif (this.isSuccess) {\n\t\t\treturn `Result (success): data: ${JSON.stringify(this._data)}`\n\t\t}\n\n\t\treturn `Result (failure): errors: ${this.getErrorMessages().join(', ')}`\n\t}\n}\n","export type AnswerError = {\n\terror: string\n\terrorDescription: string\n}\n\nexport type AjaxErrorParams = {\n\tstatus: number\n\tanswerError: AnswerError\n\tcause?: Error\n}\n\n/**\n * Error requesting RestApi\n */\nexport class AjaxError extends Error {\n\toverride cause: null | Error\n\tprivate _status: number\n\tprivate _answerError: AnswerError\n\n\tconstructor(params: AjaxErrorParams) {\n\t\tconst message = `${params.answerError.error}${\n\t\t\tparams.answerError.errorDescription\n\t\t\t\t? ': ' + params.answerError.errorDescription\n\t\t\t\t: ''\n\t\t}`\n\n\t\tsuper(message)\n\t\tthis.cause = params.cause || null\n\t\tthis.name = this.constructor.name\n\n\t\tthis._status = params.status\n\t\tthis._answerError = params.answerError\n\t}\n\n\tget answerError(): AnswerError {\n\t\treturn this._answerError\n\t}\n\n\tget status(): number {\n\t\treturn this._status\n\t}\n\n\tset status(status: number) {\n\t\tthis._status = status\n\t}\n\n\toverride toString(): string {\n\t\treturn `${this.answerError.error}${\n\t\t\tthis.answerError.errorDescription\n\t\t\t\t? ': ' + this.answerError.errorDescription\n\t\t\t\t: ''\n\t\t} (${this.status})`\n\t}\n}\n","import Type from '../../tools/type'\nimport Text from '../../tools/text'\nimport { Result, type IResult } from '../result'\nimport { AjaxError } from './ajax-error'\nimport type { NumberString } from '../../types/common'\nimport type { GetPayload, Payload } from '../../types/payloads'\nimport type { TypeHttp } from '../../types/http'\n\nexport type AjaxQuery = {\n\tmethod: string\n\tparams: object\n\tstart: number\n}\n\nexport type AjaxResultParams = {\n\terror?: string | { error: string; error_description: string }\n\terror_description?: string\n\tresult: any\n\tnext?: NumberString\n\ttotal?: NumberString\n}\n\n/**\n * Result of request to Rest Api\n */\nexport class AjaxResult extends Result implements IResult {\n\tprivate readonly _status: number\n\tprivate readonly _query: AjaxQuery\n\tprotected override _data: AjaxResultParams\n\n\tconstructor(answer: AjaxResultParams, query: AjaxQuery, status: number) {\n\t\tsuper()\n\n\t\tthis._data = answer\n\t\tthis._query = structuredClone(query)\n\t\tthis._status = status\n\n\t\tif (typeof this._data.error !== 'undefined') {\n\t\t\tconst error =\n\t\t\t\ttypeof this._data.error === 'string' ? this._data : this._data.error\n\n\t\t\tthis.addError(\n\t\t\t\tnew AjaxError({\n\t\t\t\t\tstatus: this._status,\n\t\t\t\t\tanswerError: {\n\t\t\t\t\t\terror: (error.error as string) || '',\n\t\t\t\t\t\terrorDescription: error.error_description || '',\n\t\t\t\t\t},\n\t\t\t\t})\n\t\t\t)\n\t\t}\n\t}\n\n\t// @ts-ignore\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\toverride setData(data: any): Result {\n\t\tthrow new Error('AjaxResult not support setData()')\n\t}\n\n\toverride getData(): Payload<unknown> {\n\t\treturn this._data as GetPayload<unknown>\n\t}\n\n\tisMore(): boolean {\n\t\treturn Type.isNumber(this._data?.next as any)\n\t}\n\n\tgetTotal(): number {\n\t\treturn Text.toInteger(this._data?.total as any)\n\t}\n\n\tgetStatus(): number {\n\t\treturn this._status\n\t}\n\n\tgetQuery(): AjaxQuery {\n\t\treturn this._query\n\t}\n\n\tasync getNext(http: TypeHttp): Promise<false | AjaxResult> {\n\t\tif (this.isMore() && this.isSuccess) {\n\t\t\tthis._query.start = Number.parseInt(this._data?.next as any)\n\n\t\t\treturn http.call(\n\t\t\t\tthis._query.method,\n\t\t\t\tthis._query.params,\n\t\t\t\tthis._query.start\n\t\t\t)\n\t\t}\n\n\t\treturn Promise.resolve(false)\n\t}\n}\n","import { LoggerBrowser, LoggerType } from '../../logger/browser'\nimport {\n\tRestrictionManagerParamsBase,\n\ttype TypeRestrictionManagerParams,\n} from '../../types/http'\n\n/**\n * @link https://apidocs.bitrix24.com/limits.html\n *\n * It is important to know that the intensity is tracked separately for each Bitrix24 account.\n * In other words, if your application uses REST too intensively on one account and hits the limits, it will not affect the application's operation on another account.\n * This means that users on different accounts can use your solutions with varying intensity, allowing you to make the application logic quite flexible.\n *\n * On the other hand, Bitrix24 only considers the IP address from which the REST request is made.\n * In other words, if your server hosts several applications that all work with the same Bitrix24, the request intensity limit will be shared among all applications.\n * Keep this feature in mind when designing.\n */\nexport default class RestrictionManager {\n\t#params: TypeRestrictionManagerParams\n\t#lastDecrement: number\n\t#currentAmount: number\n\n\tprivate _logger: null | LoggerBrowser = null\n\n\tconstructor() {\n\t\tthis.#params = RestrictionManagerParamsBase\n\n\t\tthis.#currentAmount = 0\n\t\tthis.#lastDecrement = 0\n\t}\n\n\tsetLogger(logger: LoggerBrowser): void {\n\t\tthis._logger = logger\n\t}\n\n\tgetLogger(): LoggerBrowser {\n\t\tif (null === this._logger) {\n\t\t\tthis._logger = LoggerBrowser.build(`NullLogger`)\n\n\t\t\tthis._logger.setConfig({\n\t\t\t\t[LoggerType.desktop]: false,\n\t\t\t\t[LoggerType.log]: false,\n\t\t\t\t[LoggerType.info]: false,\n\t\t\t\t[LoggerType.warn]: false,\n\t\t\t\t[LoggerType.error]: true,\n\t\t\t\t[LoggerType.trace]: false,\n\t\t\t})\n\t\t}\n\n\t\treturn this._logger\n\t}\n\n\tget params(): TypeRestrictionManagerParams {\n\t\treturn { ...this.#params }\n\t}\n\n\tset params(params: TypeRestrictionManagerParams) {\n\t\tthis.#params = params\n\n\t\tthis.getLogger().log(`new restriction manager params`, params)\n\t}\n\n\tcheck(hash: string = ''): Promise<null> {\n\t\treturn new Promise((resolve) => {\n\t\t\tthis.#decrementStorage()\n\n\t\t\tif (this.#checkStorage()) {\n\t\t\t\tthis.getLogger().log(\n\t\t\t\t\t`>> no sleep >>> ${hash}`,\n\t\t\t\t\tthis.#getStorageStatus()\n\t\t\t\t)\n\t\t\t\tthis.#incrementStorage()\n\n\t\t\t\treturn resolve(null)\n\t\t\t} else {\n\t\t\t\t// eslint-disable-next-line\n\t\t\t\tconst sleep = (callback: Function) => {\n\t\t\t\t\tthis.getLogger().info(\n\t\t\t\t\t\t`>> go sleep >>> ${hash}`,\n\t\t\t\t\t\tthis.#getStorageStatus()\n\t\t\t\t\t)\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tcallback()\n\t\t\t\t\t}, this.#params.sleep)\n\t\t\t\t}\n\n\t\t\t\tconst wait = () => {\n\t\t\t\t\tthis.#decrementStorage()\n\t\t\t\t\tif (this.#checkStorage()) {\n\t\t\t\t\t\tthis.getLogger().info(\n\t\t\t\t\t\t\t`<< stop sleep <<< ${hash}`,\n\t\t\t\t\t\t\tthis.#getStorageStatus()\n\t\t\t\t\t\t)\n\t\t\t\t\t\tthis.#incrementStorage()\n\t\t\t\t\t\treturn resolve(null)\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsleep(wait)\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tsleep(wait)\n\t\t\t}\n\t\t})\n\t}\n\n\t#getStorageStatus() {\n\t\treturn `${this.#currentAmount.toFixed(4)} from ${this.#params.amount}`\n\t}\n\n\t#decrementStorage(): void {\n\t\tif (this.#lastDecrement > 0) {\n\t\t\tthis.#currentAmount -=\n\t\t\t\t(Date.now() - this.#lastDecrement) * this.#params.speed\n\n\t\t\tif (this.#currentAmount < 0) {\n\t\t\t\tthis.#currentAmount = 0\n\t\t\t}\n\t\t}\n\n\t\tthis.#lastDecrement = Date.now()\n\t}\n\n\t#incrementStorage(): void {\n\t\tthis.#currentAmount++\n\t}\n\n\t#checkStorage(): boolean {\n\t\treturn this.#currentAmount < this.#params.amount\n\t}\n}\n","import { type IRequestIdGenerator } from '../../types/http'\nimport Text from '../../tools/text'\n\nconst DEFAULT_REQUEST_ID_HEADER_FIELD_NAME = 'X-Request-ID'\nconst DEFAULT_QUERY_STRING_PARAMETER_NAME = 'bx24_request_id'\nconst DEFAULT_QUERY_STRING_SDK_PARAMETER_NAME = 'bx24_sdk_ver'\n\nexport default class DefaultRequestIdGenerator implements IRequestIdGenerator {\n\tpublic getQueryStringParameterName(): string {\n\t\treturn DEFAULT_QUERY_STRING_PARAMETER_NAME\n\t}\n\n\tpublic getQueryStringSdkParameterName(): string {\n\t\treturn DEFAULT_QUERY_STRING_SDK_PARAMETER_NAME\n\t}\n\n\tprivate generate(): string {\n\t\treturn Text.getUuidRfc4122()\n\t}\n\n\tpublic getRequestId(): string {\n\t\treturn this.generate()\n\t}\n\n\tpublic getHeaderFieldName(): string {\n\t\treturn DEFAULT_REQUEST_ID_HEADER_FIELD_NAME\n\t}\n}\n","import { LoggerBrowser, LoggerType } from '../../logger/browser'\nimport type { TypeHttp, TypeRestrictionManagerParams } from '../../types/http'\nimport { default as RestrictionManager } from './restriction-manager'\nimport { default as RequestIdGenerator } from './request-id-generator'\nimport { Result } from '../result'\nimport { AjaxError, type AjaxErrorParams } from './ajax-error'\nimport { AjaxResult } from './ajax-result'\nimport Type from '../../tools/type'\nimport type { AjaxQuery, AjaxResultParams } from './ajax-result'\nimport type {\n\tAuthActions,\n\tAuthData,\n\tTypeDescriptionError,\n} from '../../types/auth'\nimport type { BatchPayload } from '../../types/payloads'\n\nimport axios, { type AxiosInstance, AxiosError } from 'axios'\nimport * as qs from 'qs-esm'\n\ntype AjaxResponse = {\n\tstatus: number\n\tpayload: AjaxResultParams\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst BITRIX24_OAUTH_SERVER_URL = 'https://oauth.bitrix.info'\n\n/**\n * Class for working with RestApi requests via http\n *\n * @link https://dev.1c-bitrix.ru/rest_help/\n */\nexport default class Http implements TypeHttp {\n\t#clientAxios: AxiosInstance\n\t#authActions: AuthActions\n\t#restrictionManager: RestrictionManager\n\t#requestIdGenerator: RequestIdGenerator\n\tprivate _logger: null | LoggerBrowser = null\n\tprivate _loggerSystem: null | LoggerBrowser = null\n\n\t#logTag: string = ''\n\t#isClientSideWarning: boolean = false\n\t#clientSideWarningMessage: string = ''\n\n\tconstructor(\n\t\tbaseURL: string,\n\t\tauthActions: AuthActions,\n\t\toptions?: null | object\n\t) {\n\t\t/**\n\t\t * @memo can be added on the server side\n\t\t */\n\t\t/*/\n\t\t\theaders: {\n\t\t\t\t'User-Agent': '__SDK_USER_AGENT__-v-__SDK_VERSION__',\n\t\t\t\t'X-BITRIX24-JS-SDK-VERSION': '__SDK_VERSION__',\n\t\t\t},\n\t\t//*/\n\t\tthis.#clientAxios = axios.create({\n\t\t\tbaseURL: baseURL,\n\t\t\t...options,\n\t\t})\n\n\t\tthis.#authActions = authActions\n\t\tthis.#restrictionManager = new RestrictionManager()\n\t\tthis.#requestIdGenerator = new RequestIdGenerator()\n\t}\n\t\n\t// region Logger ////\n\tsetLogger(logger: LoggerBrowser): void {\n\t\tthis._logger = logger\n\t\tthis.#restrictionManager.setLogger(this.getLogger())\n\t}\n\n\tgetLogger(): LoggerBrowser {\n\t\tif (null === this._logger) {\n\t\t\tthis._logger = LoggerBrowser.build(`NullLogger`)\n\n\t\t\tthis._logger.setConfig({\n\t\t\t\t[LoggerType.desktop]: false,\n\t\t\t\t[LoggerType.log]: false,\n\t\t\t\t[LoggerType.info]: false,\n\t\t\t\t[LoggerType.warn]: false,\n\t\t\t\t[LoggerType.error]: true,\n\t\t\t\t[LoggerType.trace]: false,\n\t\t\t})\n\t\t}\n\n\t\treturn this._logger\n\t}\n\t\n\tgetSystemLogger(): LoggerBrowser {\n\t\tif (null === this._loggerSystem) {\n\t\t\tthis._loggerSystem = LoggerBrowser.build(`SystemLogger`)\n\n\t\t\tthis._loggerSystem.setConfig({\n\t\t\t\t[LoggerType.desktop]: false,\n\t\t\t\t[LoggerType.log]: false,\n\t\t\t\t[LoggerType.info]: true,\n\t\t\t\t[LoggerType.warn]: true,\n\t\t\t\t[LoggerType.error]: true,\n\t\t\t\t[LoggerType.trace]: false,\n\t\t\t})\n\t\t}\n\n\t\treturn this._loggerSystem\n\t}\n\t// endregion ////\n\t\n\t// region RestrictionManager ////\n\tsetRestrictionManagerParams(params: TypeRestrictionManagerParams): void {\n\t\tthis.#restrictionManager.params = params\n\t}\n\n\tgetRestrictionManagerParams(): TypeRestrictionManagerParams {\n\t\treturn this.#restrictionManager.params\n\t}\n\t// endregion ////\n\t\n\t// region LogTag ////\n\tsetLogTag(logTag: string): void {\n\t\tthis.#logTag = logTag\n\t}\n\n\tclearLogTag(): void {\n\t\tthis.#logTag = ''\n\t}\n\t// endregion ////\n\t\n\t// region Actions Call ////\n\tasync batch(\n\t\tcalls: any[] | object,\n\t\tisHaltOnError: boolean = true\n\t): Promise<Result> {\n\t\tconst isArrayMode = Array.isArray(calls)\n\t\tconst cmd: any = isArrayMode ? [] : {}\n\t\tlet cnt = 0\n\n\t\tconst processRow = (row: any, index: string | number) => {\n\t\t\tlet method = null\n\t\t\tlet params = null\n\n\t\t\tif (Array.isArray(row)) {\n\t\t\t\tmethod = row[0]\n\t\t\t\tparams = row[1]\n\t\t\t} else if (row.method) {\n\t\t\t\tmethod = row.method\n\t\t\t\tparams = row.params\n\t\t\t}\n\n\t\t\tif (method) {\n\t\t\t\tcnt++\n\n\t\t\t\tconst data = method + '?' + qs.stringify(params)\n\t\t\t\tif (isArrayMode || Array.isArray(cmd)) {\n\t\t\t\t\tcmd.push(data)\n\t\t\t\t} else {\n\t\t\t\t\tcmd[index] = data\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (isArrayMode) {\n\t\t\tfor (const [index, item] of calls.entries()) processRow(item, index)\n\t\t} else {\n\t\t\tfor (const [index, item] of Object.entries(calls)) processRow(item, index)\n\t\t}\n\n\t\tif (cnt < 1) {\n\t\t\treturn Promise.resolve(new Result())\n\t\t}\n\n\t\treturn this.call('batch', {\n\t\t\thalt: isHaltOnError ? 1 : 0,\n\t\t\tcmd: cmd,\n\t\t}).then((response: AjaxResult) => {\n\t\t\tconst responseResult = (response.getData() as BatchPayload<unknown>)\n\t\t\t\t.result\n\t\t\tconst results: any = isArrayMode ? [] : {}\n\n\t\t\tconst processResponse = (row: string, index: string | number) => {\n\t\t\t\tif (\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\ttypeof responseResult.result[index] !== 'undefined' ||\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\ttypeof responseResult.result_error[index] !== 'undefined'\n\t\t\t\t) {\n\t\t\t\t\tconst q = row.split('?')\n\n\t\t\t\t\tconst data = new AjaxResult(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\tresult: Type.isUndefined(responseResult.result[index])\n\t\t\t\t\t\t\t\t? // @ts-ignore\n\t\t\t\t\t\t\t\t\t{}\n\t\t\t\t\t\t\t\t: // @ts-ignore\n\t\t\t\t\t\t\t\t\tresponseResult.result[index],\n\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\terror: responseResult?.result_error[index] || undefined,\n\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\ttotal: responseResult.result_total[index],\n\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\tnext: responseResult.result_next[index],\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tmethod: q[0] || '',\n\t\t\t\t\t\t\tparams: qs.parse(q[1] || ''),\n\t\t\t\t\t\t\tstart: 0,\n\t\t\t\t\t\t} as AjaxQuery,\n\t\t\t\t\t\tresponse.getStatus()\n\t\t\t\t\t)\n\n\t\t\t\t\tif (isArrayMode || Array.isArray(results)) {\n\t\t\t\t\t\tresults.push(data)\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresults[index] = data\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (Array.isArray(cmd)) {\n\t\t\t\tfor (const [index, item] of cmd.entries()) processResponse(item, index)\n\t\t\t} else {\n\t\t\t\tfor (const [index, item] of Object.entries(cmd))\n\t\t\t\t\tprocessResponse(item as string, index)\n\t\t\t}\n\n\t\t\tlet dataResult\n\n\t\t\tconst initError = (result: AjaxResult): AjaxError => {\n\t\t\t\treturn new AjaxError({\n\t\t\t\t\tstatus: 0,\n\t\t\t\t\tanswerError: {\n\t\t\t\t\t\terror: result.getErrorMessages().join('; '),\n\t\t\t\t\t\terrorDescription: `batch ${result.getQuery().method}: ${qs.stringify(result.getQuery().params, { encode: false })}`,\n\t\t\t\t\t},\n\t\t\t\t\tcause: result.getErrors().next().value,\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tconst result = new Result()\n\n\t\t\tif (isArrayMode || Array.isArray(results)) {\n\t\t\t\tdataResult = []\n\n\t\t\t\tfor (const data of results as AjaxResult[]) {\n\t\t\t\t\tif (data.getStatus() !== 200 || !data.isSuccess) {\n\t\t\t\t\t\tconst error = initError(data)\n\n\t\t\t\t\t\tif (!isHaltOnError && !data.isSuccess) {\n\t\t\t\t\t\t\tresult.addError(error)\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn Promise.reject(error)\n\t\t\t\t\t}\n\n\t\t\t\t\tdataResult.push(data.getData().result)\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdataResult = {}\n\n\t\t\t\tfor (const key of Object.keys(results)) {\n\t\t\t\t\tconst data: AjaxResult = results[key]\n\n\t\t\t\t\tif (data.getStatus() !== 200 || !data.isSuccess) {\n\t\t\t\t\t\tconst error = initError(data)\n\n\t\t\t\t\t\tif (!isHaltOnError && !data.isSuccess) {\n\t\t\t\t\t\t\tresult.addError(error)\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn Promise.reject(error)\n\t\t\t\t\t}\n\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tdataResult[key] = data.getData().result\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tresult.setData(dataResult)\n\n\t\t\treturn Promise.resolve(result)\n\t\t})\n\t}\n\n\t/**\n\t * Calling the RestApi function\n\t *\n\t * If we get a problem with authorization, we make one attempt to update the access token\n\t *\n\t * @param method\n\t * @param params\n\t * @param start\n\t */\n\tasync call(\n\t\tmethod: string,\n\t\tparams: object,\n\t\tstart: number = 0\n\t): Promise<AjaxResult> {\n\t\tlet authData = this.#authActions.getAuthData()\n\t\tif (authData === false) {\n\t\t\tauthData = await this.#authActions.refreshAuth()\n\t\t}\n\n\t\tawait this.#restrictionManager.check()\n\t\t\n\t\tif(\n\t\t\tthis.#isClientSideWarning\n\t\t\t&& !this.isServerSide()\n\t\t\t&& Type.isStringFilled(this.#clientSideWarningMessage)\n\t\t)\n\t\t{\n\t\t\tthis.getSystemLogger().warn(this.#clientSideWarningMessage)\n\t\t}\n\t\t\n\t\treturn this.#clientAxios\n\t\t\t.post(\n\t\t\t\tthis.#prepareMethod(method),\n\t\t\t\tthis.#prepareParams(authData, params, start)\n\t\t\t)\n\t\t\t.then(\n\t\t\t\t(response: {\n\t\t\t\t\tdata: AjaxResultParams\n\t\t\t\t\tstatus: any\n\t\t\t\t}): Promise<AjaxResponse> => {\n\t\t\t\t\tconst payload = response.data as AjaxResultParams\n\t\t\t\t\treturn Promise.resolve({\n\t\t\t\t\t\tstatus: response.status,\n\t\t\t\t\t\tpayload: payload,\n\t\t\t\t\t} as AjaxResponse)\n\t\t\t\t},\n\t\t\t\tasync (error_: AxiosError) => {\n\t\t\t\t\tlet answerError = {\n\t\t\t\t\t\terror: error_?.code || 0,\n\t\t\t\t\t\terrorDescription: error_?.message || '',\n\t\t\t\t\t}\n\n\t\t\t\t\tif (\n\t\t\t\t\t\terror_ instanceof AxiosError &&\n\t\t\t\t\t\terror_.response &&\n\t\t\t\t\t\terror_.response.data &&\n\t\t\t\t\t\t!Type.isUndefined((error_.response.data as TypeDescriptionError).error)\n\t\t\t\t\t)\n\t\t\t\t\t{\n\t\t\t\t\t\tconst response = error_.response.data as {\n\t\t\t\t\t\t\terror: string\n\t\t\t\t\t\t\terror_description: string\n\t\t\t\t\t\t} as TypeDescriptionError\n\t\t\t\t\t\t\n\t\t\t\t\t\tanswerError = {\n\t\t\t\t\t\t\terror: response.error,\n\t\t\t\t\t\t\terrorDescription: response.error_description,\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tconst problemError: AjaxError = new AjaxError({\n\t\t\t\t\t\tstatus: error_.response?.status || 0,\n\t\t\t\t\t\tanswerError,\n\t\t\t\t\t\tcause: error_,\n\t\t\t\t\t} as AjaxErrorParams)\n\n\t\t\t\t\t/**\n\t\t\t\t\t * Is response status === 401 -> refresh Auth?\n\t\t\t\t\t */\n\t\t\t\t\tif (\n\t\t\t\t\t\tproblemError.status === 401 &&\n\t\t\t\t\t\t['expired_token', 'invalid_token'].includes(\n\t\t\t\t\t\t\tproblemError.answerError.error\n\t\t\t\t\t\t)\n\t\t\t\t\t) {\n\t\t\t\t\t\tthis.getLogger().info(\n\t\t\t\t\t\t\t`refreshAuth >> ${problemError.answerError.error} >>>`\n\t\t\t\t\t\t)\n\n\t\t\t\t\t\tauthData = await this.#authActions.refreshAuth()\n\t\t\t\t\t\tawait this.#restrictionManager.check()\n\n\t\t\t\t\t\treturn this.#clientAxios\n\t\t\t\t\t\t\t.post(\n\t\t\t\t\t\t\t\tthis.#prepareMethod(method),\n\t\t\t\t\t\t\t\tthis.#prepareParams(authData, params, start)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t.then(\n\t\t\t\t\t\t\t\tasync (response: {\n\t\t\t\t\t\t\t\t\tdata: AjaxResultParams\n\t\t\t\t\t\t\t\t\tstatus: any\n\t\t\t\t\t\t\t\t}): Promise<AjaxResponse> => {\n\t\t\t\t\t\t\t\t\tconst payload = response.data as AjaxResultParams\n\t\t\t\t\t\t\t\t\treturn Promise.resolve({\n\t\t\t\t\t\t\t\t\t\tstatus: response.status,\n\t\t\t\t\t\t\t\t\t\tpayload: payload,\n\t\t\t\t\t\t\t\t\t} as AjaxResponse)\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tasync (error__: AxiosError) => {\n\t\t\t\t\t\t\t\t\tlet answerError = {\n\t\t\t\t\t\t\t\t\t\terror: error__?.code || 0,\n\t\t\t\t\t\t\t\t\t\terrorDescription: error__?.message || '',\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\terror__ instanceof AxiosError &&\n\t\t\t\t\t\t\t\t\t\terror__.response &&\n\t\t\t\t\t\t\t\t\t\terror__.response.data\n\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\tconst response = error__.response.data as {\n\t\t\t\t\t\t\t\t\t\t\terror: string\n\t\t\t\t\t\t\t\t\t\t\terror_description: string\n\t\t\t\t\t\t\t\t\t\t} as TypeDescriptionError\n\n\t\t\t\t\t\t\t\t\t\tanswerError = {\n\t\t\t\t\t\t\t\t\t\t\terror: response.error,\n\t\t\t\t\t\t\t\t\t\t\terrorDescription: response.error_description,\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tconst problemError: AjaxError = new AjaxError({\n\t\t\t\t\t\t\t\t\t\tstatus: error__.response?.status || 0,\n\t\t\t\t\t\t\t\t\t\tanswerError,\n\t\t\t\t\t\t\t\t\t\tcause: error__,\n\t\t\t\t\t\t\t\t\t} as AjaxErrorParams)\n\n\t\t\t\t\t\t\t\t\treturn Promise.reject(problemError)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t)\n\t\t\t\t\t}\n\n\t\t\t\t\treturn Promise.reject(problemError)\n\t\t\t\t}\n\t\t\t)\n\t\t\t.then((response: AjaxResponse): Promise<AjaxResult> => {\n\t\t\t\tconst result = new AjaxResult(\n\t\t\t\t\tresponse.payload,\n\t\t\t\t\t{\n\t\t\t\t\t\tmethod,\n\t\t\t\t\t\tparams,\n\t\t\t\t\t\tstart,\n\t\t\t\t\t} as AjaxQuery,\n\t\t\t\t\tresponse.status\n\t\t\t\t)\n\n\t\t\t\treturn Promise.resolve(result)\n\t\t\t})\n\t}\n\t// endregion ////\n\t\n\t// region Prepare ////\n\t/**\n\t * Processes function parameters and adds authorization\n\t *\n\t * @param authData\n\t * @param params\n\t * @param start\n\t *\n\t * @private\n\t */\n\t#prepareParams(authData: AuthData, params: any, start: number = 0): object {\n\t\tconst result = Object.assign({}, params)\n\n\t\tif (this.#logTag.length > 0) {\n\t\t\tresult.logTag = this.#logTag\n\t\t}\n\n\t\tresult[this.#requestIdGenerator.getQueryStringParameterName()] =\n\t\t\tthis.#requestIdGenerator.getRequestId()\n\t\tresult[this.#requestIdGenerator.getQueryStringSdkParameterName()] =\n\t\t\t'__SDK_VERSION__'\n\n\t\tif (!!result.data && !!result.data.start) {\n\t\t\tdelete result.data.start\n\t\t}\n\n\t\t/**\n\t\t * @memo we skip auth for hook\n\t\t */\n\t\tif (authData.refresh_token !== 'hook') {\n\t\t\tresult.auth = authData.access_token\n\t\t}\n\n\t\tresult.start = start\n\n\t\treturn result\n\t}\n\n\t/**\n\t * Makes the function name safe and adds JSON format\n\t *\n\t * @param method\n\t * @private\n\t */\n\t#prepareMethod(method: string): string {\n\t\treturn `${encodeURIComponent(method)}.json`\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setClientSideWarning(\n\t\tvalue: boolean,\n\t\tmessage: string\n\t): void\n\t{\n\t\tthis.#isClientSideWarning = value\n\t\tthis.#clientSideWarningMessage = message\n\t}\n\t// endregion ////\n\t\n\t// region Tools ////\n\t/**\n\t * Tests whether the code is executed on the client side\n\t * @return {boolean}\n\t * @protected\n\t */\n\tprotected isServerSide(): boolean\n\t{\n\t\treturn typeof window === 'undefined'\n\t}\n\t// endregion ////\n}\n","import { LoggerBrowser, LoggerType } from '../logger/browser'\nimport { Result } from './result'\nimport { AjaxResult } from './http/ajax-result'\nimport Type from './../tools/type'\nimport type { TypeB24 } from '../types/b24'\nimport type { TypeHttp } from '../types/http'\nimport type { ListPayload } from '../types/payloads'\nimport type { AuthActions } from '../types/auth'\n\nexport abstract class AbstractB24 implements TypeB24 {\n\tstatic readonly batchSize = 50\n\n\tprotected _isInit: boolean = false\n\tprotected _http: null | TypeHttp = null\n\tprotected _logger: null | LoggerBrowser = null\n\n\t// region Init ////\n\tprotected constructor() {\n\t\tthis._isInit = false\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tget isInit(): boolean {\n\t\treturn this._isInit\n\t}\n\n\tasync init(): Promise<void> {\n\t\tthis._isInit = true\n\t\treturn\n\t}\n\n\tdestroy(): void {}\n\n\tpublic setLogger(logger: LoggerBrowser): void {\n\t\tthis._logger = logger\n\t\tthis.getHttpClient().setLogger(this.getLogger())\n\t}\n\n\tpublic getLogger(): LoggerBrowser {\n\t\tif (null === this._logger) {\n\t\t\tthis._logger = LoggerBrowser.build(`NullLogger`)\n\n\t\t\tthis._logger.setConfig({\n\t\t\t\t[LoggerType.desktop]: false,\n\t\t\t\t[LoggerType.log]: false,\n\t\t\t\t[LoggerType.info]: false,\n\t\t\t\t[LoggerType.warn]: false,\n\t\t\t\t[LoggerType.error]: true,\n\t\t\t\t[LoggerType.trace]: false,\n\t\t\t})\n\t\t}\n\n\t\treturn this._logger\n\t}\n\t// endregion ////\n\n\t// region Core ////\n\tabstract get auth(): AuthActions\n\n\t/**\n\t * @inheritDoc\n\t */\n\tabstract getTargetOrigin(): string\n\n\t/**\n\t * @inheritDoc\n\t */\n\tabstract getTargetOriginWithPath(): string\n\n\t/**\n\t * @inheritDoc\n\t */\n\tcallMethod(\n\t\tmethod: string,\n\t\tparams?: object,\n\t\tstart?: number\n\t): Promise<AjaxResult> {\n\t\treturn this.getHttpClient().call(method, params || {}, start || 0)\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tasync callListMethod(\n\t\tmethod: string,\n\t\tparams: object = {},\n\t\tprogress: null | ((progress: number) => void) = null,\n\t\tcustomKeyForResult: null | string = null\n\t): Promise<Result> {\n\t\tconst result = new Result()\n\n\t\tif (Type.isFunction(progress) && null !== progress) {\n\t\t\tprogress(0)\n\t\t}\n\n\t\treturn this.callMethod(method, params, 0).then(async (response) => {\n\t\t\tlet list: any[] = []\n\n\t\t\tlet resultData\n\t\t\tif (null === customKeyForResult) {\n\t\t\t\tresultData = (response.getData() as ListPayload<any>).result as []\n\t\t\t} else {\n\t\t\t\tresultData = (response.getData() as ListPayload<any>).result[\n\t\t\t\t\tcustomKeyForResult\n\t\t\t\t] as []\n\t\t\t}\n\n\t\t\tlist = [...list, ...resultData]\n\t\t\tif (response.isMore()) {\n\t\t\t\tlet responseLoop: false | AjaxResult = response\n\t\t\t\twhile (true) {\n\t\t\t\t\tresponseLoop = await responseLoop.getNext(this.getHttpClient())\n\n\t\t\t\t\tif (responseLoop === false) {\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\n\t\t\t\t\tlet resultData = undefined\n\t\t\t\t\tif (null === customKeyForResult) {\n\t\t\t\t\t\tresultData = (responseLoop.getData() as ListPayload<any>)\n\t\t\t\t\t\t\t.result as []\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresultData = (responseLoop.getData() as ListPayload<any>).result[\n\t\t\t\t\t\t\tcustomKeyForResult\n\t\t\t\t\t\t] as []\n\t\t\t\t\t}\n\n\t\t\t\t\tlist = [...list, ...resultData]\n\n\t\t\t\t\tif (progress) {\n\t\t\t\t\t\tconst total = responseLoop.getTotal()\n\t\t\t\t\t\tprogress(total > 0 ? Math.round((100 * list.length) / total) : 100)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tresult.setData(list)\n\t\t\tif (progress) {\n\t\t\t\tprogress(100)\n\t\t\t}\n\n\t\t\treturn result\n\t\t})\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tasync *fetchListMethod(\n\t\tmethod: string,\n\t\tparams: any = {},\n\t\tidKey: string = 'ID',\n\t\tcustomKeyForResult: null | string = null\n\t): AsyncGenerator<any[]> {\n\t\tparams.order = params.order || {}\n\t\tparams.filter = params.filter || {}\n\t\tparams.start = -1\n\n\t\tconst moreIdKey = `>${idKey}`\n\n\t\tparams.order[idKey] = 'ASC'\n\t\tparams.filter[moreIdKey] = 0\n\n\t\tdo {\n\t\t\tconst result = await this.callMethod(method, params, params.start)\n\t\t\tlet data = undefined\n\t\t\tif (!Type.isNull(customKeyForResult) && null !== customKeyForResult) {\n\t\t\t\tdata = result.getData().result[customKeyForResult] as []\n\t\t\t} else {\n\t\t\t\tdata = result.getData().result as []\n\t\t\t}\n\n\t\t\tif (data.length === 0) {\n\t\t\t\tbreak\n\t\t\t}\n\n\t\t\tyield data\n\n\t\t\tif (data.length < AbstractB24.batchSize) {\n\t\t\t\tbreak\n\t\t\t}\n\n\t\t\tconst value = data.at(-1)\n\t\t\tif (value && idKey in value) {\n\t\t\t\tparams.filter[moreIdKey] = value[idKey]\n\t\t\t}\n\t\t} while (true)\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tasync callBatch(\n\t\tcalls: Array<any> | object,\n\t\tisHaltOnError: boolean = true\n\t): Promise<Result> {\n\t\treturn this.getHttpClient().batch(calls, isHaltOnError)\n\t}\n\n\tchunkArray<T>(array: T[], chunkSize: number = 50): T[][] {\n\t\tconst result: T[][] = []\n\t\tfor (let i = 0; i < array.length; i += chunkSize) {\n\t\t\tconst chunk = array.slice(i, i + chunkSize)\n\t\t\tresult.push(chunk)\n\t\t}\n\t\treturn result\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tasync callBatchByChunk(\n\t\tcalls: Array<any>,\n\t\tisHaltOnError: boolean = true\n\t): Promise<Result> {\n\t\tconst result = new Result()\n\n\t\tconst data = []\n\t\tconst chunks = this.chunkArray(calls, AbstractB24.batchSize)\n\n\t\tfor (const chunkRequest of chunks) {\n\t\t\tconst response = await this.callBatch(chunkRequest, isHaltOnError)\n\t\t\tdata.push(...response.getData())\n\t\t}\n\n\t\treturn result.setData(data)\n\t}\n\t// endregion ////\n\n\t// region Tools ////\n\t/**\n\t * @inheritDoc\n\t */\n\tgetHttpClient(): TypeHttp {\n\t\tif (!this.isInit || null === this._http) {\n\t\t\tthrow new Error(`Http not init`)\n\t\t}\n\n\t\treturn this._http\n\t}\n\n\t/**\n\t * Returns settings for http connection\n\t * @protected\n\t */\n\tprotected _getHttpOptions(): null | object {\n\t\treturn null\n\t}\n\n\t/**\n\t * Generates an object not initialized error\n\t * @protected\n\t */\n\tprotected _ensureInitialized(): void {\n\t\tif (!this._isInit) {\n\t\t\tthrow new Error('B24 not initialized')\n\t\t}\n\t}\n\t// endregion ////\n}\n","/**\n * List of supported languages in B24.Cloud\n *\n * It is worth remembering that there will be 1-2 languages for the B24.Box\n */\nexport enum B24LangList {\n\ten = 'en',\n\tde = 'de',\n\tla = 'la',\n\n\tbr = 'br',\n\tfr = 'fr',\n\tit = 'it',\n\n\tpl = 'pl',\n\tru = 'ru',\n\tua = 'ua',\n\n\ttr = 'tr',\n\tsc = 'sc',\n\ttc = 'tc',\n\n\tja = 'ja',\n\tvn = 'vn',\n\tid = 'id',\n\n\tms = 'ms',\n\tth = 'th',\n\tar = 'ar',\n}\n","/**\n * Returns scroll info\n */\nconst useScrollSize = (): { scrollWidth: number; scrollHeight: number } => {\n\treturn {\n\t\tscrollWidth: Math.max(\n\t\t\tdocument.documentElement.scrollWidth,\n\t\t\tdocument.documentElement.offsetWidth\n\t\t),\n\t\tscrollHeight: Math.max(\n\t\t\tdocument.documentElement.scrollHeight,\n\t\t\tdocument.documentElement.offsetHeight\n\t\t),\n\t}\n}\n\nexport default useScrollSize\n","import Type from '../type'\n\nexport default class FormatterNumbers {\n\tprivate static isInternalConstructing: boolean = false\n\tprivate static instance: FormatterNumbers | null = null\n\tprivate _defLocale: null | string = null\n\tprivate constructor() {\n\t\tif (!FormatterNumbers.isInternalConstructing) {\n\t\t\tthrow new TypeError('FormatterNumber is not constructable')\n\t\t}\n\t\tFormatterNumbers.isInternalConstructing = false\n\t}\n\n\t/**\n\t * @return FormatterNumbers\n\t */\n\tstatic getInstance(): FormatterNumbers {\n\t\tif (!FormatterNumbers.instance) {\n\t\t\tFormatterNumbers.isInternalConstructing = true\n\t\t\tFormatterNumbers.instance = new FormatterNumbers()\n\t\t}\n\t\treturn FormatterNumbers.instance\n\t}\n\n\tsetDefLocale(locale: string) {\n\t\tthis._defLocale = locale\n\t}\n\n\tformat(value: number, locale?: string): string {\n\t\tlet formatter\n\t\tif (typeof locale === 'undefined' || !Type.isStringFilled(locale)) {\n\t\t\tlocale = Type.isStringFilled(this._defLocale)\n\t\t\t\t? this._defLocale || 'en'\n\t\t\t\t: (\n\t\t\t\t\ttypeof navigator === 'undefined'\n\t\t\t\t\t? 'en'\n\t\t\t\t\t: navigator?.language || 'en'\n\t\t\t\t)\n\t\t}\n\n\t\tif (Number.isInteger(value)) {\n\t\t\tformatter = new Intl.NumberFormat(locale, {\n\t\t\t\tminimumFractionDigits: 0,\n\t\t\t\tmaximumFractionDigits: 0,\n\t\t\t})\n\t\t} else {\n\t\t\tformatter = new Intl.NumberFormat(locale, {\n\t\t\t\tminimumFractionDigits: 2,\n\t\t\t\tmaximumFractionDigits: 2,\n\t\t\t})\n\t\t}\n\n\t\tlet result = formatter.format(value)\n\t\tif (locale.includes('ru')) {\n\t\t\tresult = result.replace(',', '.')\n\t\t}\n\n\t\treturn result\n\t}\n}\n","export class IbanSpecification {\n\t/**\n\t * the code of the country\n\t */\n\treadonly countryCode: string\n\n\t/**\n\t * the length of the IBAN\n\t */\n\treadonly length: number\n\n\t/**\n\t * the structure of the underlying BBAN (for validation and formatting)\n\t */\n\treadonly structure: string\n\n\t/**\n\t * an example valid IBAN\n\t */\n\treadonly example: string\n\n\tprivate _cachedRegex: null | RegExp = null\n\n\tconstructor(\n\t\tcountryCode: string,\n\t\tlength: number,\n\t\tstructure: string,\n\t\texample: string\n\t) {\n\t\tthis.countryCode = countryCode\n\t\tthis.length = length\n\t\tthis.structure = structure\n\t\tthis.example = example\n\t}\n\n\t/**\n\t * Check if the passed iban is valid, according to this specification.\n\t *\n\t * @param {String} iban the iban to validate\n\t * @returns {boolean} true if valid, false otherwise\n\t */\n\tisValid(iban: string): boolean {\n\t\treturn (\n\t\t\tthis.length === iban.length &&\n\t\t\tthis.countryCode === iban.slice(0, 2) &&\n\t\t\tthis._regex().test(iban.slice(4)) &&\n\t\t\tthis._iso7064Mod9710(this._iso13616Prepare(iban)) == 1\n\t\t)\n\t}\n\n\t/**\n\t * Convert the passed IBAN to a country-specific BBAN.\n\t *\n\t * @param iban the IBAN to convert\n\t * @param separator the separator to use between BBAN blocks\n\t * @returns {string} the BBAN\n\t */\n\ttoBBAN(iban: string, separator: string): string {\n\t\treturn (this._regex().exec(iban.slice(4) || '') || [])\n\t\t\t.slice(1)\n\t\t\t.join(separator)\n\t}\n\n\t/**\n\t * Convert the passed BBAN to an IBAN for this country specification.\n\t * Please note that <i>\"generation of the IBAN shall be the exclusive responsibility of the bank/branch servicing the account\"</i>.\n\t * This method implements the preferred algorithm described in http://en.wikipedia.org/wiki/International_Bank_Account_Number#Generating_IBAN_check_digits\n\t *\n\t * @param bban the BBAN to convert to IBAN\n\t * @returns {string} the IBAN\n\t */\n\tfromBBAN(bban: string): string {\n\t\tif (!this.isValidBBAN(bban)) {\n\t\t\tthrow new Error('Invalid BBAN')\n\t\t}\n\n\t\tconst remainder = this._iso7064Mod9710(\n\t\t\tthis._iso13616Prepare(this.countryCode + '00' + bban)\n\t\t)\n\n\t\tconst checkDigit = ('0' + (98 - remainder)).slice(-2)\n\n\t\treturn this.countryCode + checkDigit + bban\n\t}\n\n\t/**\n\t * Check of the passed BBAN is valid.\n\t * This function only checks the format of the BBAN (length and compliance with alphanumeric specifications) but does not\n\t * verify the check digit.\n\t *\n\t * @param bban the BBAN to validate\n\t * @returns {boolean} true if the passed bban is a valid BBAN, according to this specification, false otherwise\n\t */\n\tisValidBBAN(bban: string): boolean {\n\t\treturn this.length - 4 === bban.length && this._regex().test(bban)\n\t}\n\n\t/**\n\t * Lazy-loaded regex (parse the structure and construct the regular expression the first time we need it for validation)\n\t */\n\tprivate _regex(): RegExp {\n\t\tif (null === this._cachedRegex) {\n\t\t\tthis._cachedRegex = this._parseStructure(this.structure)\n\t\t}\n\n\t\treturn this._cachedRegex\n\t}\n\n\t/**\n\t * Parse the BBAN structure used to configure each IBAN Specification and returns a matching regular expression.\n\t * A structure is composed of blocks of three characters (one letter and two digits).\n\t * Each block represents\n\t * a logical group in the typical representation of the BBAN.\n\t * For each group, the letter indicates which characters\n\t * are allowed in this group, and the following 2-digits number tells the length of the group.\n\t *\n\t * @param {string} structure the structure to parse\n\t * @returns {RegExp}\n\t */\n\tprivate _parseStructure(structure: string): RegExp {\n\t\t// split in blocks of 3 chars\n\t\tconst regex = (structure.match(/(.{3})/g) || []).map(\n\t\t\t(block: string): string => {\n\t\t\t\t// parse each structure block (1-char + 2-digits)\n\t\t\t\tlet format\n\t\t\t\tconst pattern = block.slice(0, 1)\n\t\t\t\tconst repeats = Number.parseInt(block.slice(1), 10)\n\n\t\t\t\tswitch (pattern) {\n\t\t\t\t\tcase 'A':\n\t\t\t\t\t\tformat = '0-9A-Za-z'\n\t\t\t\t\t\tbreak\n\t\t\t\t\tcase 'B':\n\t\t\t\t\t\tformat = '0-9A-Z'\n\t\t\t\t\t\tbreak\n\t\t\t\t\tcase 'C':\n\t\t\t\t\t\tformat = 'A-Za-z'\n\t\t\t\t\t\tbreak\n\t\t\t\t\tcase 'F':\n\t\t\t\t\t\tformat = '0-9'\n\t\t\t\t\t\tbreak\n\t\t\t\t\tcase 'L':\n\t\t\t\t\t\tformat = 'a-z'\n\t\t\t\t\t\tbreak\n\t\t\t\t\tcase 'U':\n\t\t\t\t\t\tformat = 'A-Z'\n\t\t\t\t\t\tbreak\n\t\t\t\t\tcase 'W':\n\t\t\t\t\t\tformat = '0-9a-z'\n\t\t\t\t\t\tbreak\n\t\t\t\t}\n\n\t\t\t\treturn '([' + format + ']{' + repeats + '})'\n\t\t\t}\n\t\t)\n\n\t\treturn new RegExp('^' + regex.join('') + '$')\n\t}\n\n\t/**\n\t * Prepare an IBAN for mod 97 computation by moving the first 4 chars to the end and transforming the letters to\n\t * numbers (A = 10, B = 11, ..., Z = 35), as specified in ISO13616.\n\t *\n\t * @param {string} iban the IBAN\n\t * @returns {string} the prepared IBAN\n\t */\n\tprivate _iso13616Prepare(iban: string): string {\n\t\t// eslint-disable-next-line\n\t\tconst A = 'A'.charCodeAt(0)\n\t\t// eslint-disable-next-line\n\t\tconst Z = 'Z'.charCodeAt(0)\n\n\t\tiban = iban.toUpperCase()\n\t\t// eslint-disable-next-line\n\t\tiban = iban.substring(4) + iban.substring(0, 4)\n\t\treturn (\n\t\t\tiban\n\t\t\t\t// eslint-disable-next-line\n\t\t\t\t.split('')\n\t\t\t\t.map((n: string): string => {\n\t\t\t\t\t// eslint-disable-next-line\n\t\t\t\t\tconst code = n.charCodeAt(0)\n\t\t\t\t\tif (code >= A && code <= Z) {\n\t\t\t\t\t\t// A = 10, B = 11, ... Z = 35\n\t\t\t\t\t\treturn (code - A + 10).toString()\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn n\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.join('')\n\t\t)\n\t}\n\n\t/**\n\t * Calculates MOD 97 10 of the passed IBAN as specified in ISO7064.\n\t *\n\t * @param iban\n\t * @returns {number}\n\t */\n\tprivate _iso7064Mod9710(iban: string): number {\n\t\tlet remainder = iban\n\t\tlet block\n\n\t\twhile (remainder.length > 2) {\n\t\t\tblock = remainder.slice(0, 9)\n\t\t\tremainder =\n\t\t\t\t(Number.parseInt(block, 10) % 97) + remainder.slice(block.length)\n\t\t}\n\n\t\treturn Number.parseInt(remainder, 10) % 97\n\t}\n}\n\nexport class FormatterIban {\n\tprivate static isInternalConstructing: boolean = false\n\tprivate static instance: FormatterIban | null = null\n\n\tprivate _countries: Map<string, IbanSpecification>\n\n\t// region Init ////\n\tprivate constructor() {\n\t\tif (!FormatterIban.isInternalConstructing) {\n\t\t\tthrow new TypeError('FormatterIban is not constructable')\n\t\t}\n\t\tFormatterIban.isInternalConstructing = false\n\n\t\tthis._countries = new Map()\n\t}\n\n\t/**\n\t * @return FormatterIban\n\t */\n\tstatic getInstance(): FormatterIban {\n\t\tif (!FormatterIban.instance) {\n\t\t\tFormatterIban.isInternalConstructing = true\n\t\t\tFormatterIban.instance = new FormatterIban()\n\t\t}\n\n\t\treturn FormatterIban.instance\n\t}\n\n\taddSpecification(IBAN: IbanSpecification): void {\n\t\tthis._countries.set(IBAN.countryCode, IBAN)\n\t}\n\t// endregion ////\n\n\t// region IBAN ////\n\t/**\n\t * Check if an IBAN is valid.\n\t *\n\t * @param {String} iban the IBAN to validate.\n\t * @returns {boolean} true if the passed IBAN is valid, false otherwise\n\t */\n\tisValid(iban: string): boolean {\n\t\tif (!this._isString(iban)) {\n\t\t\treturn false\n\t\t}\n\n\t\tiban = this.electronicFormat(iban)\n\t\tconst countryCode = iban.slice(0, 2)\n\n\t\tif (!this._countries.has(countryCode)) {\n\t\t\tthrow new Error(`No country with code ${countryCode}`)\n\t\t}\n\n\t\tconst countryStructure = this._countries.get(countryCode)\n\n\t\treturn !!countryStructure && countryStructure.isValid(iban)\n\t}\n\n\tprintFormat(iban: string, separator?: string): string {\n\t\tif (typeof separator == 'undefined') {\n\t\t\tseparator = ' '\n\t\t}\n\n\t\tconst EVERY_FOUR_CHARS = /(.{4})(?!$)/g\n\n\t\treturn this.electronicFormat(iban).replace(\n\t\t\tEVERY_FOUR_CHARS,\n\t\t\t'$1' + separator\n\t\t)\n\t}\n\n\telectronicFormat(iban: string): string {\n\t\t// eslint-disable-next-line\n\t\tconst NON_ALPHANUM = /[^a-zA-Z0-9]/g\n\n\t\treturn iban.replace(NON_ALPHANUM, '').toUpperCase()\n\t}\n\t// endregion ////\n\n\t// region BBAN ////\n\t/**\n\t * Convert an IBAN to a BBAN.\n\t *\n\t * @param iban\n\t * @param {String} [separator] the separator to use between the blocks of the BBAN, defaults to ' '\n\t * @returns {string|*}\n\t */\n\ttoBBAN(iban: string, separator?: string): string {\n\t\tif (typeof separator == 'undefined') {\n\t\t\tseparator = ' '\n\t\t}\n\n\t\tiban = this.electronicFormat(iban)\n\n\t\tconst countryCode = iban.slice(0, 2)\n\t\tif (!this._countries.has(countryCode)) {\n\t\t\tthrow new Error(`No country with code ${countryCode}`)\n\t\t}\n\n\t\tconst countryStructure = this._countries.get(countryCode)\n\n\t\tif (!countryStructure) {\n\t\t\tthrow new Error(`No country with code ${countryCode}`)\n\t\t}\n\n\t\treturn countryStructure.toBBAN(iban, separator)\n\t}\n\n\t/**\n\t * Convert the passed BBAN to an IBAN for this country specification.\n\t * Please note that <i>\"generation of the IBAN shall be the exclusive responsibility of the bank/branch servicing the account\"</i>.\n\t * This method implements the preferred algorithm described in http://en.wikipedia.org/wiki/International_Bank_Account_Number#Generating_IBAN_check_digits\n\t *\n\t * @param countryCode the country of the BBAN\n\t * @param bban the BBAN to convert to IBAN\n\t * @returns {string} the IBAN\n\t */\n\tfromBBAN(countryCode: string, bban: string): string {\n\t\tif (!this._countries.has(countryCode)) {\n\t\t\tthrow new Error(`No country with code ${countryCode}`)\n\t\t}\n\n\t\tconst countryStructure = this._countries.get(countryCode)\n\n\t\tif (!countryStructure) {\n\t\t\tthrow new Error(`No country with code ${countryCode}`)\n\t\t}\n\n\t\treturn countryStructure.fromBBAN(this.electronicFormat(bban))\n\t}\n\n\t/**\n\t * Check the validity of the passed BBAN.\n\t *\n\t * @param countryCode the country of the BBAN\n\t * @param bban the BBAN to check the validity of\n\t */\n\tisValidBBAN(countryCode: string, bban: string): boolean {\n\t\tif (!this._isString(bban)) {\n\t\t\treturn false\n\t\t}\n\n\t\tif (!this._countries.has(countryCode)) {\n\t\t\tthrow new Error(`No country with code ${countryCode}`)\n\t\t}\n\n\t\tconst countryStructure = this._countries.get(countryCode)\n\n\t\treturn (\n\t\t\t!!countryStructure &&\n\t\t\tcountryStructure.isValidBBAN(this.electronicFormat(bban))\n\t\t)\n\t}\n\t// endregion ////\n\n\t// region Tools ////\n\tprivate _isString(value: any): boolean {\n\t\treturn typeof value == 'string' || value instanceof String\n\t}\n\t// endregion ////\n}\n","import FormatterNumbers from './formatters/numbers'\nimport { IbanSpecification, FormatterIban } from './formatters/iban'\n\nexport const useFormatter = () => {\n\tconst formatterNumber = FormatterNumbers.getInstance()\n\n\t// region Iban ////\n\tconst formatterIban = FormatterIban.getInstance()\n\n\t// region addSpecification ////\n\tformatterIban.addSpecification(\n\t\tnew IbanSpecification('AD', 24, 'F04F04A12', 'AD1200012030200359100100')\n\t)\n\tformatterIban.addSpecification(\n\t\tnew IbanSpecification('AE', 23, 'F03F16', 'AE070331234567890123456')\n\t)\n\tformatterIban.addSpecification(\n\t\tnew IbanSpecification('AL', 28, 'F08A16', 'AL47212110090000000235698741')\n\t)\n\tformatterIban.addSpecification(\n\t\tnew IbanSpecification('AT', 20, 'F05F11', 'AT611904300234573201')\n\t)\n\tformatterIban.addSpecification(\n\t\tnew IbanSpecification('AZ', 28, 'U04A20', 'AZ21NABZ00000000137010001944')\n\t)\n\tformatterIban.addSpecification(\n\t\tnew IbanSpecification('BA', 20, 'F03F03F08F02', 'BA391290079401028494')\n\t)\n\tformatterIban.addSpecification(\n\t\tnew IbanSpecification('BE', 16, 'F03F07F02', 'BE68539007547034')\n\t)\n\tformatterIban.addSpecification(\n\t\tnew IbanSpecification('BG', 22, 'U04F04F02A08', 'BG80BNBG96611020345678')\n\t)\n\tformatterIban.addSpecification(\n\t\tnew IbanSpecification('BH', 22, 'U04A14', 'BH67BMAG00001299123456')\n\t)\n\tformatterIban.addSpecification(\n\t\tnew IbanSpecification(\n\t\t\t'BR',\n\t\t\t29,\n\t\t\t'F08F05F10U01A01',\n\t\t\t'BR9700360305000010009795493P1'\n\t\t)\n\t)\n\tformatterIban.addSpecification(\n\t\tnew IbanSpecification('BY', 28, 'A04F04A16', 'BY13NBRB3600900000002Z00AB00')\n\t)\n\tformatterIban.addSpecification(\n\t\tnew IbanSpecification('CH', 21, 'F05A12', 'CH9300762011623852957')\n\t)\n\tformatterIban.addSpecification(\n\t\tnew IbanSpecification('CR', 22, 'F04F14', 'CR72012300000171549015')\n\t)\n\tformatterIban.addSpecification(\n\t\tnew IbanSpecification('CY', 28, 'F03F05A16', 'CY17002001280000001200527600')\n\t)\n\tformatterIban.addSpecification(\n\t\tnew IbanSpecification('CZ', 24, 'F04F06F10', 'CZ6508000000192000145399')\n\t)\n\tformatterIban.addSpecification(\n\t\tnew IbanSpecification('DE', 22, 'F08F10', 'DE89370400440532013000')\n\t)\n\tformatterIban.addSpecification(\n\t\tnew IbanSpecification('DK', 18, 'F04F09F01', 'DK5000400440116243')\n\t)\n\tformatterIban.addSpecification(\n\t\tnew IbanSpecification('DO', 28, 'U04F20', 'DO28BAGR00000001212453611324')\n\t)\n\tformatterIban.addSpecification(\n\t\tnew IbanSpecification('EE', 20, 'F02F02F11F01', 'EE382200221020145685')\n\t)\n\tformatterIban.addSpecification(\n\t\tnew IbanSpecification(\n\t\t\t'EG',\n\t\t\t29,\n\t\t\t'F04F04F17',\n\t\t\t'EG800002000156789012345180002'\n\t\t)\n\t)\n\tformatterIban.addSpecification(\n\t\tnew IbanSpecification(\n\t\t\t'ES',\n\t\t\t24,\n\t\t\t'F04F04F01F01F10',\n\t\t\t'ES9121000418450200051332'\n\t\t)\n\t)\n\tformatterIban.addSpecification(\n\t\tnew IbanSpecification('FI', 18, 'F06F07F01', 'FI2112345600000785')\n\t)\n\tformatterIban.addSpecification(\n\t\tnew IbanSpecification('FO', 18, 'F04F09F01', 'FO6264600001631634')\n\t)\n\tformatterIban.addSpecification(\n\t\tnew IbanSpecification(\n\t\t\t'FR',\n\t\t\t27,\n\t\t\t'F05F05A11F02',\n\t\t\t'FR1420041010050500013M02606'\n\t\t)\n\t)\n\tformatterIban.addSpecification(\n\t\tnew IbanSpecification('GB', 22, 'U04F06F08', 'GB29NWBK60161331926819')\n\t)\n\tformatterIban.addSpecification(\n\t\tnew IbanSpecification('GE', 22, 'U02F16', 'GE29NB0000000101904917')\n\t)\n\tformatterIban.addSpecification(\n\t\tnew IbanSpecification('GI', 23, 'U04A15', 'GI75NWBK000000007099453')\n\t)\n\tformatterIban.addSpecification(\n\t\tnew IbanSpecification('GL', 18, 'F04F09F01', 'GL8964710001000206')\n\t)\n\tformatterIban.addSpecification(\n\t\tnew IbanSpecification('GR', 27, 'F03F04A16', 'GR1601101250000000012300695')\n\t)\n\tformatterIban.addSpecification(\n\t\tnew IbanSpecification('GT', 28, 'A04A20', 'GT82TRAJ01020000001210029690')\n\t)\n\tformatterIban.addSpecification(\n\t\tnew IbanSpecification('HR', 21, 'F07F10', 'HR1210010051863000160')\n\t)\n\tformatterIban.addSpecification(\n\t\tnew IbanSpecification(\n\t\t\t'HU',\n\t\t\t28,\n\t\t\t'F03F04F01F15F01',\n\t\t\t'HU42117730161111101800000000'\n\t\t)\n\t)\n\tformatterIban.addSpecification(\n\t\tnew IbanSpecification('IE', 22, 'U04F06F08', 'IE29AIBK93115212345678')\n\t)\n\tformatterIban.addSpecification(\n\t\tnew IbanSpecification('IL', 23, 'F03F03F13', 'IL620108000000099999999')\n\t)\n\tformatterIban.addSpecification(\n\t\tnew IbanSpecification(\n\t\t\t'IS',\n\t\t\t26,\n\t\t\t'F04F02F06F10',\n\t\t\t'IS140159260076545510730339'\n\t\t)\n\t)\n\tformatterIban.addSpecification(\n\t\tnew IbanSpecification(\n\t\t\t'IT',\n\t\t\t27,\n\t\t\t'U01F05F05A12',\n\t\t\t'IT60X0542811101000000123456'\n\t\t)\n\t)\n\tformatterIban.addSpecification(\n\t\tnew IbanSpecification('IQ', 23, 'U04F03A12', 'IQ98NBIQ850123456789012')\n\t)\n\tformatterIban.addSpecification(\n\t\tnew IbanSpecification('JO', 30, 'A04F22', 'JO15AAAA1234567890123456789012')\n\t)\n\tformatterIban.addSpecification(\n\t\tnew IbanSpecification('KW', 30, 'U04A22', 'KW81CBKU0000000000001234560101')\n\t)\n\tformatterIban.addSpecification(\n\t\tnew IbanSpecification('KZ', 20, 'F03A13', 'KZ86125KZT5004100100')\n\t)\n\tformatterIban.addSpecification(\n\t\tnew IbanSpecification('LB', 28, 'F04A20', 'LB62099900000001001901229114')\n\t)\n\tformatterIban.addSpecification(\n\t\tnew IbanSpecification(\n\t\t\t'LC',\n\t\t\t32,\n\t\t\t'U04F24',\n\t\t\t'LC07HEMM000100010012001200013015'\n\t\t)\n\t)\n\tformatterIban.addSpecification(\n\t\tnew IbanSpecification('LI', 21, 'F05A12', 'LI21088100002324013AA')\n\t)\n\tformatterIban.addSpecification(\n\t\tnew IbanSpecification('LT', 20, 'F05F11', 'LT121000011101001000')\n\t)\n\tformatterIban.addSpecification(\n\t\tnew IbanSpecification('LU', 20, 'F03A13', 'LU280019400644750000')\n\t)\n\tformatterIban.addSpecification(\n\t\tnew IbanSpecification('LV', 21, 'U04A13', 'LV80BANK0000435195001')\n\t)\n\tformatterIban.addSpecification(\n\t\tnew IbanSpecification(\n\t\t\t'MC',\n\t\t\t27,\n\t\t\t'F05F05A11F02',\n\t\t\t'MC5811222000010123456789030'\n\t\t)\n\t)\n\tformatterIban.addSpecification(\n\t\tnew IbanSpecification('MD', 24, 'U02A18', 'MD24AG000225100013104168')\n\t)\n\tformatterIban.addSpecification(\n\t\tnew IbanSpecification('ME', 22, 'F03F13F02', 'ME25505000012345678951')\n\t)\n\tformatterIban.addSpecification(\n\t\tnew IbanSpecification('MK', 19, 'F03A10F02', 'MK07250120000058984')\n\t)\n\tformatterIban.addSpecification(\n\t\tnew IbanSpecification(\n\t\t\t'MR',\n\t\t\t27,\n\t\t\t'F05F05F11F02',\n\t\t\t'MR1300020001010000123456753'\n\t\t)\n\t)\n\tformatterIban.addSpecification(\n\t\tnew IbanSpecification(\n\t\t\t'MT',\n\t\t\t31,\n\t\t\t'U04F05A18',\n\t\t\t'MT84MALT011000012345MTLCAST001S'\n\t\t)\n\t)\n\tformatterIban.addSpecification(\n\t\tnew IbanSpecification(\n\t\t\t'MU',\n\t\t\t30,\n\t\t\t'U04F02F02F12F03U03',\n\t\t\t'MU17BOMM0101101030300200000MUR'\n\t\t)\n\t)\n\tformatterIban.addSpecification(\n\t\tnew IbanSpecification('NL', 18, 'U04F10', 'NL91ABNA0417164300')\n\t)\n\tformatterIban.addSpecification(\n\t\tnew IbanSpecification('NO', 15, 'F04F06F01', 'NO9386011117947')\n\t)\n\tformatterIban.addSpecification(\n\t\tnew IbanSpecification('PK', 24, 'U04A16', 'PK36SCBL0000001123456702')\n\t)\n\tformatterIban.addSpecification(\n\t\tnew IbanSpecification('PL', 28, 'F08F16', 'PL61109010140000071219812874')\n\t)\n\tformatterIban.addSpecification(\n\t\tnew IbanSpecification('PS', 29, 'U04A21', 'PS92PALS000000000400123456702')\n\t)\n\tformatterIban.addSpecification(\n\t\tnew IbanSpecification('PT', 25, 'F04F04F11F02', 'PT50000201231234567890154')\n\t)\n\tformatterIban.addSpecification(\n\t\tnew IbanSpecification('QA', 29, 'U04A21', 'QA30AAAA123456789012345678901')\n\t)\n\tformatterIban.addSpecification(\n\t\tnew IbanSpecification('RO', 24, 'U04A16', 'RO49AAAA1B31007593840000')\n\t)\n\tformatterIban.addSpecification(\n\t\tnew IbanSpecification('RS', 22, 'F03F13F02', 'RS35260005601001611379')\n\t)\n\tformatterIban.addSpecification(\n\t\tnew IbanSpecification('SA', 24, 'F02A18', 'SA0380000000608010167519')\n\t)\n\tformatterIban.addSpecification(\n\t\tnew IbanSpecification(\n\t\t\t'SC',\n\t\t\t31,\n\t\t\t'U04F04F16U03',\n\t\t\t'SC18SSCB11010000000000001497USD'\n\t\t)\n\t)\n\tformatterIban.addSpecification(\n\t\tnew IbanSpecification('SE', 24, 'F03F16F01', 'SE4550000000058398257466')\n\t)\n\tformatterIban.addSpecification(\n\t\tnew IbanSpecification('SI', 19, 'F05F08F02', 'SI56263300012039086')\n\t)\n\tformatterIban.addSpecification(\n\t\tnew IbanSpecification('SK', 24, 'F04F06F10', 'SK3112000000198742637541')\n\t)\n\tformatterIban.addSpecification(\n\t\tnew IbanSpecification(\n\t\t\t'SM',\n\t\t\t27,\n\t\t\t'U01F05F05A12',\n\t\t\t'SM86U0322509800000000270100'\n\t\t)\n\t)\n\tformatterIban.addSpecification(\n\t\tnew IbanSpecification('ST', 25, 'F08F11F02', 'ST68000100010051845310112')\n\t)\n\tformatterIban.addSpecification(\n\t\tnew IbanSpecification('SV', 28, 'U04F20', 'SV62CENR00000000000000700025')\n\t)\n\tformatterIban.addSpecification(\n\t\tnew IbanSpecification('TL', 23, 'F03F14F02', 'TL380080012345678910157')\n\t)\n\tformatterIban.addSpecification(\n\t\tnew IbanSpecification('TN', 24, 'F02F03F13F02', 'TN5910006035183598478831')\n\t)\n\tformatterIban.addSpecification(\n\t\tnew IbanSpecification('TR', 26, 'F05F01A16', 'TR330006100519786457841326')\n\t)\n\tformatterIban.addSpecification(\n\t\tnew IbanSpecification('UA', 29, 'F25', 'UA511234567890123456789012345')\n\t)\n\tformatterIban.addSpecification(\n\t\tnew IbanSpecification('VA', 22, 'F18', 'VA59001123000012345678')\n\t)\n\tformatterIban.addSpecification(\n\t\tnew IbanSpecification('VG', 24, 'U04F16', 'VG96VPVG0000012345678901')\n\t)\n\tformatterIban.addSpecification(\n\t\tnew IbanSpecification('XK', 20, 'F04F10F02', 'XK051212012345678906')\n\t)\n\n\t// The following countries are not included in the official IBAN registry but use the IBAN specification\n\t// Angola\n\tformatterIban.addSpecification(\n\t\tnew IbanSpecification('AO', 25, 'F21', 'AO69123456789012345678901')\n\t)\n\t// Burkina\n\tformatterIban.addSpecification(\n\t\tnew IbanSpecification('BF', 27, 'F23', 'BF2312345678901234567890123')\n\t)\n\t// Burundi\n\tformatterIban.addSpecification(\n\t\tnew IbanSpecification('BI', 16, 'F12', 'BI41123456789012')\n\t)\n\t// Benin\n\tformatterIban.addSpecification(\n\t\tnew IbanSpecification('BJ', 28, 'F24', 'BJ39123456789012345678901234')\n\t)\n\t// Ivory\n\tformatterIban.addSpecification(\n\t\tnew IbanSpecification('CI', 28, 'U02F22', 'CI70CI1234567890123456789012')\n\t)\n\t// Cameron\n\tformatterIban.addSpecification(\n\t\tnew IbanSpecification('CM', 27, 'F23', 'CM9012345678901234567890123')\n\t)\n\t// Cape Verde\n\tformatterIban.addSpecification(\n\t\tnew IbanSpecification('CV', 25, 'F21', 'CV30123456789012345678901')\n\t)\n\t// Algeria\n\tformatterIban.addSpecification(\n\t\tnew IbanSpecification('DZ', 24, 'F20', 'DZ8612345678901234567890')\n\t)\n\t// Iran\n\tformatterIban.addSpecification(\n\t\tnew IbanSpecification('IR', 26, 'F22', 'IR861234568790123456789012')\n\t)\n\t// Madagascar\n\tformatterIban.addSpecification(\n\t\tnew IbanSpecification('MG', 27, 'F23', 'MG1812345678901234567890123')\n\t)\n\t// Mali\n\tformatterIban.addSpecification(\n\t\tnew IbanSpecification('ML', 28, 'U01F23', 'ML15A12345678901234567890123')\n\t)\n\t// Mozambique\n\tformatterIban.addSpecification(\n\t\tnew IbanSpecification('MZ', 25, 'F21', 'MZ25123456789012345678901')\n\t)\n\t// Senegal\n\tformatterIban.addSpecification(\n\t\tnew IbanSpecification('SN', 28, 'U01F23', 'SN52A12345678901234567890123')\n\t)\n\n\t// The following are regional and administrative French Republic subdivision IBAN specification (same structure as FR, only country code vary)\n\tformatterIban.addSpecification(\n\t\tnew IbanSpecification(\n\t\t\t'GF',\n\t\t\t27,\n\t\t\t'F05F05A11F02',\n\t\t\t'GF121234512345123456789AB13'\n\t\t)\n\t)\n\tformatterIban.addSpecification(\n\t\tnew IbanSpecification(\n\t\t\t'GP',\n\t\t\t27,\n\t\t\t'F05F05A11F02',\n\t\t\t'GP791234512345123456789AB13'\n\t\t)\n\t)\n\tformatterIban.addSpecification(\n\t\tnew IbanSpecification(\n\t\t\t'MQ',\n\t\t\t27,\n\t\t\t'F05F05A11F02',\n\t\t\t'MQ221234512345123456789AB13'\n\t\t)\n\t)\n\tformatterIban.addSpecification(\n\t\tnew IbanSpecification(\n\t\t\t'RE',\n\t\t\t27,\n\t\t\t'F05F05A11F02',\n\t\t\t'RE131234512345123456789AB13'\n\t\t)\n\t)\n\tformatterIban.addSpecification(\n\t\tnew IbanSpecification(\n\t\t\t'PF',\n\t\t\t27,\n\t\t\t'F05F05A11F02',\n\t\t\t'PF281234512345123456789AB13'\n\t\t)\n\t)\n\tformatterIban.addSpecification(\n\t\tnew IbanSpecification(\n\t\t\t'TF',\n\t\t\t27,\n\t\t\t'F05F05A11F02',\n\t\t\t'TF891234512345123456789AB13'\n\t\t)\n\t)\n\tformatterIban.addSpecification(\n\t\tnew IbanSpecification(\n\t\t\t'YT',\n\t\t\t27,\n\t\t\t'F05F05A11F02',\n\t\t\t'YT021234512345123456789AB13'\n\t\t)\n\t)\n\tformatterIban.addSpecification(\n\t\tnew IbanSpecification(\n\t\t\t'NC',\n\t\t\t27,\n\t\t\t'F05F05A11F02',\n\t\t\t'NC551234512345123456789AB13'\n\t\t)\n\t)\n\tformatterIban.addSpecification(\n\t\tnew IbanSpecification(\n\t\t\t'BL',\n\t\t\t27,\n\t\t\t'F05F05A11F02',\n\t\t\t'BL391234512345123456789AB13'\n\t\t)\n\t)\n\tformatterIban.addSpecification(\n\t\tnew IbanSpecification(\n\t\t\t'MF',\n\t\t\t27,\n\t\t\t'F05F05A11F02',\n\t\t\t'MF551234512345123456789AB13'\n\t\t)\n\t)\n\tformatterIban.addSpecification(\n\t\tnew IbanSpecification(\n\t\t\t'PM',\n\t\t\t27,\n\t\t\t'F05F05A11F02',\n\t\t\t'PM071234512345123456789AB13'\n\t\t)\n\t)\n\tformatterIban.addSpecification(\n\t\tnew IbanSpecification(\n\t\t\t'WF',\n\t\t\t27,\n\t\t\t'F05F05A11F02',\n\t\t\t'WF621234512345123456789AB13'\n\t\t)\n\t)\n\t// endregion ////\n\t// endregion ////\n\n\treturn {\n\t\tformatterNumber,\n\t\tformatterIban,\n\t}\n}\n","import type { AuthActions, AuthData, B24HookParams } from '../types/auth'\n\n/**\n * Authorization Manager\n */\nexport class AuthHookManager implements AuthActions {\n\t#b24HookParams: B24HookParams\n\n\tconstructor(b24HookParams: B24HookParams) {\n\t\tthis.#b24HookParams = Object.freeze(Object.assign({}, b24HookParams))\n\t}\n\n\t/**\n\t * @see Http.#prepareParams\n\t */\n\tgetAuthData(): false | AuthData {\n\t\tconst domain = this.#b24HookParams.b24Url\n\t\t\t.replaceAll('https://', '')\n\t\t\t.replaceAll('http://', '')\n\t\t\t.replace(/:(80|443)$/, '')\n\n\t\treturn {\n\t\t\taccess_token: this.#b24HookParams.secret,\n\t\t\trefresh_token: 'hook',\n\t\t\texpires_in: 0,\n\t\t\tdomain: domain,\n\t\t\tmember_id: domain,\n\t\t}\n\t}\n\n\trefreshAuth(): Promise<AuthData> {\n\t\treturn Promise.resolve(this.getAuthData() as AuthData)\n\t}\n\n\tgetUniq(prefix: string): string {\n\t\tconst authData = this.getAuthData()\n\t\tif (authData === false) {\n\t\t\tthrow new Error('AuthData not init')\n\t\t}\n\t\treturn [prefix, authData.member_id].join('_')\n\t}\n\n\t/**\n\t * Get the account address BX24 ( https://name.bitrix24.com )\n\t */\n\tgetTargetOrigin(): string {\n\t\treturn `${this.#b24HookParams.b24Url}`\n\t}\n\n\t/**\n\t * Get the account address BX24 with Path ( https://name.bitrix24.com/rest/1/xxxxx )\n\t */\n\tgetTargetOriginWithPath(): string {\n\t\treturn `${this.#b24HookParams.b24Url}/rest/${this.#b24HookParams.userId}/${this.#b24HookParams.secret}`\n\t}\n\n\t/**\n\t * We believe that hooks are created only by the admin\n\t */\n\tget isAdmin(): boolean {\n\t\treturn true\n\t}\n}\n","import { LoggerBrowser } from '../logger/browser'\nimport { AbstractB24 } from '../core/abstract-b24'\nimport type { TypeB24 } from '../types/b24'\nimport Http from '../core/http/controller'\nimport { AuthHookManager } from './auth'\nimport type { AuthActions, B24HookParams } from '../types/auth'\n\n/**\n * B24.Hook Manager.\n *\n * @link https://dev.1c-bitrix.ru/learning/course/index.php?COURSE_ID=99&LESSON_ID=8581&LESSON_PATH=8771.8583.8581\n */\nexport class B24Hook extends AbstractB24 implements TypeB24 {\n\treadonly #authHookManager: AuthHookManager\n\n\t// region Init ////\n\tconstructor(b24HookParams: B24HookParams) {\n\t\tsuper()\n\n\t\tthis.#authHookManager = new AuthHookManager(b24HookParams)\n\n\t\tthis._http = new Http(\n\t\t\tthis.#authHookManager.getTargetOriginWithPath(),\n\t\t\tthis.#authHookManager,\n\t\t\tthis._getHttpOptions()\n\t\t)\n\t\tthis._http.setClientSideWarning(\n\t\t\ttrue,\n\t\t\t'It is not safe to use hook requests on the client side'\n\t\t)\n\t\t\n\t\tthis._isInit = true\n\t}\n\n\tpublic override setLogger(logger: LoggerBrowser): void {\n\t\tsuper.setLogger(logger)\n\t}\n\t// endregion ////\n\n\toverride get auth(): AuthActions {\n\t\treturn this.#authHookManager\n\t}\n\n\t// region Core ////\n\t/**\n\t * Disables warning about client-side query execution\n\t */\n\tpublic offClientSideWarning(): void\n\t{\n\t\tthis.getHttpClient().setClientSideWarning(false, '')\n\t}\n\t// endregion ////\n\n\t// region Get ////\n\t/**\n\t * Get the account address BX24 ( https://name.bitrix24.com )\n\t */\n\toverride getTargetOrigin(): string {\n\t\tthis._ensureInitialized()\n\t\treturn this.#authHookManager.getTargetOrigin()\n\t}\n\n\t/**\n\t * Get the account address BX24 with Path ( https://name.bitrix24.com/rest/1/xxxxx )\n\t */\n\toverride getTargetOriginWithPath(): string {\n\t\tthis._ensureInitialized()\n\t\treturn this.#authHookManager.getTargetOriginWithPath()\n\t}\n\t// endregion ////\n\n\t// region Tools ////\n\t// endregion ////\n}\n","/**\n * List of commands for the B24 parent window\n */\nexport enum MessageCommands {\n\tgetInitData = 'getInitData',\n\tsetInstallFinish = 'setInstallFinish',\n\tsetInstall = 'setInstall',\n\trefreshAuth = 'refreshAuth',\n\tsetAppOption = 'setAppOption',\n\tsetUserOption = 'setUserOption',\n\tresizeWindow = 'resizeWindow',\n\treloadWindow = 'reloadWindow',\n\tsetTitle = 'setTitle',\n\tsetScroll = 'setScroll',\n\topenApplication = 'openApplication',\n\tcloseApplication = 'closeApplication',\n\topenPath = 'openPath',\n\timCallTo = 'imCallTo',\n\timPhoneTo = 'imPhoneTo',\n\timOpenMessenger = 'imOpenMessenger',\n\timOpenHistory = 'imOpenHistory',\n\tselectUser = 'selectUser',\n\tselectAccess = 'selectAccess',\n\tselectCRM = 'selectCRM',\n\tshowAppForm = 'showAppForm',\n}\n","import { LoggerBrowser, LoggerType } from '../../logger/browser'\n\nimport { MessageCommands } from './commands'\nimport { AppFrame } from '../frame'\n\nimport Text from '../../tools/text'\n\ninterface PromiseHandlers {\n\tresolve: (value: any) => void\n\treject: (reason?: any) => void\n\ttimeoutId: any\n}\n\n/**\n * Parent Window Request Parameters\n * @prop isSafely auto completion mode Promise.resolve()\n * @prop safelyTime after what time (900 ms) should it be automatically resolved Promise\n */\nexport interface SendParams {\n\t[index: string]: any\n\n\tisSafely?: boolean\n\tsafelyTime?: number\n}\n\n/**\n * Parent Window Communication Manager at B24\n */\nexport class MessageManager {\n\t#appFrame: AppFrame\n\t#callbackPromises: Map<string, PromiseHandlers>\n\tprotected _logger: null | LoggerBrowser = null\n\tprivate runCallbackHandler: OmitThisParameter<(event: MessageEvent) => void>\n\n\tconstructor(appFrame: AppFrame) {\n\t\tthis.#appFrame = appFrame\n\n\t\tthis.#callbackPromises = new Map()\n\n\t\tthis.runCallbackHandler = this._runCallback.bind(this)\n\t}\n\n\tsetLogger(logger: LoggerBrowser): void {\n\t\tthis._logger = logger\n\t}\n\n\tgetLogger(): LoggerBrowser {\n\t\tif (null === this._logger) {\n\t\t\tthis._logger = LoggerBrowser.build(`NullLogger`)\n\n\t\t\tthis._logger.setConfig({\n\t\t\t\t[LoggerType.desktop]: false,\n\t\t\t\t[LoggerType.log]: false,\n\t\t\t\t[LoggerType.info]: false,\n\t\t\t\t[LoggerType.warn]: false,\n\t\t\t\t[LoggerType.error]: true,\n\t\t\t\t[LoggerType.trace]: false,\n\t\t\t})\n\t\t}\n\n\t\treturn this._logger\n\t}\n\n\t// region Events ////\n\t/**\n\t * Subscribe to the onMessage event of the parent window\n\t */\n\tsubscribe() {\n\t\twindow.addEventListener('message', this.runCallbackHandler)\n\t}\n\n\t/**\n\t * Unsubscribe from the onMessage event of the parent window\n\t */\n\tunsubscribe(): void {\n\t\twindow.removeEventListener('message', this.runCallbackHandler)\n\t}\n\t// endregion ////\n\n\t/**\n\t * Send message to parent window\n\t * The answer (if) we will get in _runCallback\n\t *\n\t * @param command\n\t * @param params\n\t */\n\tasync send(\n\t\tcommand: string | MessageCommands,\n\t\tparams: null | SendParams = null\n\t): Promise<any> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tlet cmd: string | object\n\t\t\tconst promiseHandler: PromiseHandlers = {\n\t\t\t\tresolve,\n\t\t\t\treject,\n\t\t\t\ttimeoutId: null,\n\t\t\t}\n\n\t\t\tconst keyPromise = this.#setCallbackPromise(promiseHandler)\n\n\t\t\tif (command.toString().includes(':')) {\n\t\t\t\tcmd = {\n\t\t\t\t\tmethod: command.toString(),\n\t\t\t\t\tparams: params ?? '',\n\t\t\t\t\tcallback: keyPromise,\n\t\t\t\t\tappSid: this.#appFrame.getAppSid(),\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t/**\n\t\t\t\t * @memo: delete it after rest 22.0.0\n\t\t\t\t */\n\t\t\t\tcmd = command.toString()\n\t\t\t\tconst listParams = [\n\t\t\t\t\tparams ? JSON.stringify(params) : null,\n\t\t\t\t\tkeyPromise,\n\t\t\t\t\tthis.#appFrame.getAppSid(),\n\t\t\t\t]\n\n\t\t\t\tcmd += ':' + listParams.filter(Boolean).join(':')\n\t\t\t}\n\n\t\t\tthis.getLogger().log(`send to ${this.#appFrame.getTargetOrigin()}`, {\n\t\t\t\tcmd,\n\t\t\t})\n\n\t\t\tparent.postMessage(cmd, this.#appFrame.getTargetOrigin())\n\n\t\t\tif (params?.isSafely) {\n\t\t\t\t// @ts-ignore\n\t\t\t\tthis.#callbackPromises.get(keyPromise).timeoutId = window.setTimeout(\n\t\t\t\t\t() => {\n\t\t\t\t\t\tif (this.#callbackPromises.has(keyPromise)) {\n\t\t\t\t\t\t\tthis.getLogger().warn(\n\t\t\t\t\t\t\t\t`Action ${command.toString()} stop by timeout`\n\t\t\t\t\t\t\t)\n\n\t\t\t\t\t\t\tthis.#callbackPromises.delete(keyPromise)\n\t\t\t\t\t\t\tresolve({ isSafely: true })\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tNumber.parseInt(String(params?.safelyTime || 900))\n\t\t\t\t)\n\t\t\t}\n\t\t})\n\t}\n\n\t/**\n\t * Fulfilling a promise based on messages from the parent window\n\t *\n\t * @param event\n\t * @private\n\t */\n\tpublic _runCallback(event: MessageEvent): void {\n\t\tif (event.origin !== this.#appFrame.getTargetOrigin()) {\n\t\t\treturn\n\t\t}\n\n\t\tif (event.data) {\n\t\t\tthis.getLogger().log(`get from ${event.origin}`, {\n\t\t\t\tdata: event.data,\n\t\t\t})\n\n\t\t\tconst tmp = event.data.split(':')\n\n\t\t\tconst cmd: { id: string; args: any } = {\n\t\t\t\tid: tmp[0],\n\t\t\t\targs: tmp.slice(1).join(':'),\n\t\t\t}\n\n\t\t\tif (cmd.args) {\n\t\t\t\tcmd.args = JSON.parse(cmd.args)\n\t\t\t}\n\n\t\t\tif (this.#callbackPromises.has(cmd.id)) {\n\t\t\t\tconst promise = this.#callbackPromises.get(cmd.id) as PromiseHandlers\n\t\t\t\tif (promise.timeoutId) {\n\t\t\t\t\tclearTimeout(promise.timeoutId)\n\t\t\t\t}\n\n\t\t\t\tthis.#callbackPromises.delete(cmd.id)\n\n\t\t\t\tpromise.resolve(cmd.args)\n\t\t\t\t// promise.reject(cmd.args) ////\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Storing a promise for a message from the parent window\n\t *\n\t * @param promiseHandler\n\t * @private\n\t *\n\t * @memo We don't use Symbol here, because we need to pass it to the parent and then find and restore it.\n\t */\n\t#setCallbackPromise(promiseHandler: PromiseHandlers): string {\n\t\tconst key = Text.getUniqId()\n\t\tthis.#callbackPromises.set(key, promiseHandler)\n\t\treturn key\n\t}\n}\n","import { B24LangList } from '../core/language/list'\nimport type { B24FrameQueryParams, MessageInitData } from '../types/auth'\n\n/**\n * Application Frame Data Manager\n */\nexport class AppFrame {\n\t#domain: string = ''\n\t#protocol: boolean = true\n\t#appSid: null | string = null\n\t#path: null | string = null\n\t#lang: null | string = null\n\n\tconstructor(queryParams: B24FrameQueryParams) {\n\t\tif (queryParams.DOMAIN) {\n\t\t\tthis.#domain = queryParams.DOMAIN\n\t\t\tthis.#domain = this.#domain.replace(/:(80|443)$/, '')\n\t\t}\n\n\t\tthis.#protocol = queryParams.PROTOCOL === true\n\n\t\tif (queryParams.LANG) {\n\t\t\tthis.#lang = queryParams.LANG\n\t\t}\n\n\t\tif (queryParams.APP_SID) {\n\t\t\tthis.#appSid = queryParams.APP_SID\n\t\t}\n\t}\n\n\t/**\n\t * Initializes the data received from the parent window message.\n\t * @param data\n\t */\n\tinitData(data: MessageInitData): AppFrame {\n\t\tif (!this.#domain) {\n\t\t\tthis.#domain = data.DOMAIN\n\t\t}\n\n\t\tif (!this.#path) {\n\t\t\tthis.#path = data.PATH\n\t\t}\n\n\t\tif (!this.#lang) {\n\t\t\tthis.#lang = data.LANG\n\t\t}\n\n\t\tthis.#protocol = Number.parseInt(data.PROTOCOL) === 1\n\t\tthis.#domain = this.#domain.replace(/:(80|443)$/, '')\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Returns the sid of the application relative to the parent window like this `9c33468728e1d2c8c97562475edfd96`\n\t */\n\tgetAppSid(): string {\n\t\tif (null === this.#appSid) {\n\t\t\tthrow new Error(`Not init appSid`)\n\t\t}\n\n\t\treturn this.#appSid\n\t}\n\n\t/**\n\t * Get the account address BX24 (https://name.bitrix24.com)\n\t */\n\tgetTargetOrigin(): string {\n\t\treturn `${this.#protocol ? 'https' : 'http'}://${this.#domain}`\n\t}\n\n\t/**\n\t * Get the account address BX24 with Path (https://name.bitrix24.com/rest)\n\t */\n\tgetTargetOriginWithPath(): string {\n\t\treturn this.getTargetOrigin() + (this.#path ?? '')\n\t}\n\n\t/**\n\t * Returns the localization of the B24 interface\n\t * @return {B24LangList} - default B24LangList.en\n\t *\n\t * @link https://apidocs.bitrix24.com/api-reference/bx24-js-sdk/additional-functions/bx24-get-lang.html\n\t */\n\tgetLang(): B24LangList {\n\t\treturn (this.#lang as B24LangList) || B24LangList.en\n\t}\n}\n","import { AppFrame } from './frame'\nimport { MessageManager, MessageCommands } from './message'\nimport type {\n\tAuthActions,\n\tAuthData,\n\tRefreshAuthData,\n\tMessageInitData,\n} from '../types/auth'\n\n/**\n * Authorization Manager\n */\nexport class AuthManager implements AuthActions {\n\t#accessToken: null | string = null\n\t#refreshId: null | string = null\n\t#authExpires: number = 0\n\t#memberId: null | string = null\n\n\t#isAdmin: boolean = false\n\n\t#appFrame: AppFrame\n\t#messageManager: MessageManager\n\n\tconstructor(appFrame: AppFrame, messageManager: MessageManager) {\n\t\tthis.#appFrame = appFrame\n\t\tthis.#messageManager = messageManager\n\t}\n\n\t/**\n\t * Initializes the data received from the parent window message.\n\t * @param data\n\t */\n\tinitData(data: MessageInitData): AuthManager {\n\t\tif (data.AUTH_ID) {\n\t\t\tthis.#accessToken = data.AUTH_ID\n\t\t\tthis.#refreshId = data.REFRESH_ID\n\t\t\tthis.#authExpires =\n\t\t\t\tDate.now() + Number.parseInt(data.AUTH_EXPIRES) * 1_000\n\n\t\t\tthis.#isAdmin = data.IS_ADMIN\n\t\t\tthis.#memberId = data.MEMBER_ID || ''\n\t\t}\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Returns authorization data\n\t *\n\t * @link https://apidocs.bitrix24.com/api-reference/bx24-js-sdk/system-functions/bx24-get-auth.html\n\t */\n\tgetAuthData(): false | AuthData {\n\t\treturn this.#authExpires > Date.now()\n\t\t\t? ({\n\t\t\t\t\taccess_token: this.#accessToken,\n\t\t\t\t\trefresh_token: this.#refreshId,\n\t\t\t\t\texpires_in: this.#authExpires,\n\t\t\t\t\tdomain: this.#appFrame.getTargetOrigin(),\n\t\t\t\t\tmember_id: this.#memberId,\n\t\t\t\t} as AuthData)\n\t\t\t: false\n\t}\n\n\t/**\n\t * Updates authorization data through the parent window\n\t *\n\t * @link https://apidocs.bitrix24.com/api-reference/bx24-js-sdk/system-functions/bx24-refresh-auth.html\n\t */\n\tasync refreshAuth(): Promise<AuthData> {\n\t\treturn this.#messageManager\n\t\t\t.send(MessageCommands.refreshAuth, {})\n\t\t\t.then((data: RefreshAuthData) => {\n\t\t\t\tthis.#accessToken = data.AUTH_ID\n\t\t\t\tthis.#refreshId = data.REFRESH_ID\n\t\t\t\tthis.#authExpires =\n\t\t\t\t\tDate.now() + Number.parseInt(data.AUTH_EXPIRES) * 1_000\n\n\t\t\t\treturn Promise.resolve(this.getAuthData() as AuthData)\n\t\t\t})\n\t}\n\n\tgetUniq(prefix: string): string {\n\t\treturn [prefix, this.#memberId || ''].join('_')\n\t}\n\n\t/**\n\t * Determines whether the current user has administrator rights\n\t *\n\t * @link https://apidocs.bitrix24.com/api-reference/bx24-js-sdk/additional-functions/bx24-is-admin.html\n\t */\n\tget isAdmin(): boolean {\n\t\treturn this.#isAdmin\n\t}\n}\n","import { MessageManager, MessageCommands } from './message'\nimport useScrollSize from '../tools/scroll-size'\n\n/**\n * Parent window manager\n *\n * @link https://apidocs.bitrix24.com/api-reference/bx24-js-sdk/additional-functions/\n */\nexport class ParentManager {\n\t#messageManager: MessageManager\n\n\tconstructor(messageManager: MessageManager) {\n\t\tthis.#messageManager = messageManager\n\t}\n\n\t/**\n\t * The method closes the open modal window with the application\n\t *\n\t * @return {Promise<void>}\n\t *\n\t * @link https://apidocs.bitrix24.com/api-reference/bx24-js-sdk/additional-functions/bx24-close-application.html\n\t */\n\tasync closeApplication(): Promise<void> {\n\t\treturn this.#messageManager.send(MessageCommands.closeApplication, {\n\t\t\t/**\n\t\t\t * @memo There is no point - everything will be closed, and timeout will not be able to do anything\n\t\t\t */\n\t\t\tisSafely: false,\n\t\t})\n\t}\n\n\t/**\n\t * Sets the size of the frame containing the application to the size of the frame's content.\n\t *\n\t * @return {Promise<void>}\n\t *\n\t * @link https://apidocs.bitrix24.com/api-reference/bx24-js-sdk/additional-functions/bx24-fit-window.html\n\t *\n\t * @memo in certain situations it may not be executed (placement of the main window after installing the application), in this case isSafely mode will work\n\t */\n\tasync fitWindow(): Promise<any> {\n\t\tconst width = '100%'\n\t\tconst height = this.getScrollSize().scrollHeight\n\n\t\treturn this.#messageManager.send(MessageCommands.resizeWindow, {\n\t\t\twidth,\n\t\t\theight,\n\t\t\tisSafely: true,\n\t\t})\n\t}\n\n\t/**\n\t * Sets the size of the frame containing the application to the size of the frame's content.\n\t *\n\t * @param {number} width\n\t * @param {number} height\n\t *\n\t * @return {Promise<void>}\n\t *\n\t * @link https://apidocs.bitrix24.com/api-reference/bx24-js-sdk/additional-functions/bx24-resize-window.html\n\t *\n\t * @memo in certain situations it may not be executed, in this case isSafely mode will be triggered\n\t */\n\tasync resizeWindow(width: number, height: number): Promise<void> {\n\t\tif (width > 0 && height > 0) {\n\t\t\treturn this.#messageManager.send(MessageCommands.resizeWindow, {\n\t\t\t\twidth,\n\t\t\t\theight,\n\t\t\t\tisSafely: true,\n\t\t\t})\n\t\t}\n\n\t\treturn Promise.reject(\n\t\t\tnew Error(`Wrong width:number = ${width} or height:number = ${height}`)\n\t\t)\n\t}\n\n\t/**\n\t * Automatically resize `document.body` of frame with application according to frame content dimensions\n\t * If you pass appNode, the height will be calculated relative to it\n\t *\n\t * @param {HTMLElement|null} appNode\n\t * @param {number} minHeight\n\t * @param {number} minWidth\n\t *\n\t * @return {Promise<void>}\n\t */\n\tasync resizeWindowAuto(\n\t\tappNode: null | HTMLElement = null,\n\t\tminHeight: number = 0,\n\t\tminWidth: number = 0\n\t): Promise<void> {\n\t\tconst body = document.body\n\t\t//const html = document.documentElement\n\n\t\tlet width = Math.max(\n\t\t\tbody.scrollWidth,\n\t\t\tbody.offsetWidth\n\n\t\t\t//html.clientWidth,\n\t\t\t//html.scrollWidth,\n\t\t\t//html.offsetWidth\n\t\t)\n\n\t\tif (minWidth > 0) {\n\t\t\twidth = Math.max(minWidth, width)\n\t\t}\n\n\t\tlet height = Math.max(\n\t\t\tbody.scrollHeight,\n\t\t\tbody.offsetHeight\n\n\t\t\t//html.clientHeight,\n\t\t\t//html.scrollHeight,\n\t\t\t//html.offsetHeight\n\t\t)\n\n\t\tif (appNode) {\n\t\t\theight = Math.max(appNode.scrollHeight, appNode.offsetHeight)\n\t\t}\n\n\t\tif (minHeight > 0) {\n\t\t\theight = Math.max(minHeight, height)\n\t\t}\n\n\t\treturn this.resizeWindow(width, height)\n\t}\n\n\t/**\n\t * This function returns the inner dimensions of the application frame\n\t *\n\t * @return {Promise<{scrollWidth: number; scrollHeight: number}>}\n\t *\n\t * @link https://apidocs.bitrix24.com/api-reference/bx24-js-sdk/additional-functions/bx24-get-scroll-size.html\n\t */\n\tgetScrollSize(): {\n\t\tscrollWidth: number\n\t\tscrollHeight: number\n\t} {\n\t\treturn useScrollSize()\n\t}\n\n\t/**\n\t * Scrolls the parent window\n\t *\n\t * @param {number} scroll should specify the vertical scrollbar position (0 - scroll to the very top)\n\t * @return {Promise<void>}\n\t *\n\t * @link https://apidocs.bitrix24.com/api-reference/bx24-js-sdk/additional-functions/bx24-scroll-parent-window.html\n\t */\n\tasync scrollParentWindow(scroll: number): Promise<void> {\n\t\tif (!Number.isInteger(scroll)) {\n\t\t\treturn Promise.reject(new Error('Wrong scroll number'))\n\t\t}\n\n\t\tif (scroll < 0) {\n\t\t\tscroll = 0\n\t\t}\n\n\t\treturn this.#messageManager.send(MessageCommands.setScroll, {\n\t\t\tscroll,\n\t\t\tisSafely: true,\n\t\t})\n\t}\n\n\t/**\n\t * Reload the page with the application (the whole page, not just the frame).\n\t *\n\t * @return {Promise<void>}\n\t *\n\t * @link https://apidocs.bitrix24.com/api-reference/bx24-js-sdk/additional-functions/bx24-reload-window.html\n\t */\n\tasync reloadWindow(): Promise<void> {\n\t\treturn this.#messageManager.send(MessageCommands.reloadWindow, {\n\t\t\tisSafely: true,\n\t\t})\n\t}\n\n\t/**\n\t * Set Page Title\n\t *\n\t * @param {string} title\n\t *\n\t * @return {Promise<void>}\n\t *\n\t * @link https://apidocs.bitrix24.com/api-reference/bx24-js-sdk/additional-functions/bx24-set-title.html\n\t */\n\tasync setTitle(title: string): Promise<void> {\n\t\treturn this.#messageManager.send(MessageCommands.setTitle, {\n\t\t\ttitle: title.toString(),\n\t\t\tisSafely: true,\n\t\t})\n\t}\n\n\t/**\n\t * Initiates a call via internal communication\n\t *\n\t * @param {number} userId The identifier of the account user\n\t * @param {boolean} isVideo true - video call, false - audio call. Optional parameter.\n\t *\n\t * @return {Promise<void>}\n\t *\n\t * @link https://apidocs.bitrix24.com/api-reference/bx24-js-sdk/additional-functions/bx24-im-call-to.html\n\t */\n\tasync imCallTo(userId: number, isVideo: boolean = true): Promise<void> {\n\t\treturn this.#messageManager.send(MessageCommands.imCallTo, {\n\t\t\tuserId,\n\t\t\tvideo: isVideo,\n\t\t\tisSafely: true,\n\t\t})\n\t}\n\n\t/**\n\t * Makes a call to the phone number\n\t *\n\t * @param {string} phone Phone number. The number can be in the format: `+44 20 1234 5678` or `x (xxx) xxx-xx-xx`\n\t *\n\t * @return {Promise<void>}\n\t *\n\t * @link https://apidocs.bitrix24.com/api-reference/bx24-js-sdk/additional-functions/bx24-im-phone-to.html\n\t */\n\tasync imPhoneTo(phone: string): Promise<void> {\n\t\treturn this.#messageManager.send(MessageCommands.imPhoneTo, {\n\t\t\tphone,\n\t\t\tisSafely: true,\n\t\t})\n\t}\n\n\t/**\n\t * Opens the messenger window\n\t * userId or chatXXX - chat, where XXX is the chat identifier, which can simply be a number.\n\t * sgXXX - group chat, where XXX is the social network group number (the chat must be enabled in this group).\n\t *\n\t * XXXX** - open line, where XXX is the code obtained via the Rest method imopenlines.network.join.\n\t *\n\t * If nothing is passed, the chat interface will open with the last opened dialog.\n\t *\n\t * @param {number|`chat${number}`|`sg${number}`|`imol|${number}`|undefined} dialogId\n\t *\n\t * @return {Promise<void>}\n\t *\n\t * @link https://apidocs.bitrix24.com/api-reference/bx24-js-sdk/additional-functions/bx24-im-open-messenger.html\n\t * @link https://dev.1c-bitrix.ru/learning/course/index.php?COURSE_ID=93&LESSON_ID=20152&LESSON_PATH=7657.7883.8025.20150.20152\n\t *\n\t */\n\tasync imOpenMessenger(\n\t\tdialogId:\n\t\t\t| number\n\t\t\t| `chat${number}`\n\t\t\t| `sg${number}`\n\t\t\t| `imol|${number}`\n\t\t\t| undefined\n\t): Promise<void> {\n\t\treturn this.#messageManager.send(MessageCommands.imOpenMessenger, {\n\t\t\tdialogId: dialogId,\n\t\t\tisSafely: true,\n\t\t})\n\t}\n\n\t/**\n\t * Opens the history window\n\t * Identifier of the dialog:\n\t *\n\t * userId or chatXXX - chat, where XXX is the chat identifier, which can simply be a number.\n\t * imol|XXXX - open line, where XXX is the session number of the open line.\n\t *\n\t * @param {number|`chat${number}`|`imol|${number}`} dialogId\n\t *\n\t * @return {Promise<void>}\n\t *\n\t * @link https://apidocs.bitrix24.com/api-reference/bx24-js-sdk/additional-functions/bx24-im-open-history.html\n\t */\n\tasync imOpenHistory(\n\t\tdialogId: number | `chat${number}` | `imol|${number}`\n\t): Promise<void> {\n\t\treturn this.#messageManager.send(MessageCommands.imOpenHistory, {\n\t\t\tdialogId: dialogId,\n\t\t\tisSafely: true,\n\t\t})\n\t}\n}\n","import { MessageManager, MessageCommands } from './message'\nimport type { MessageInitData } from '../types/auth'\n\n/**\n * Manager for working with application settings via communication with the parent window\n *\n * @link https://apidocs.bitrix24.com/api-reference/bx24-js-sdk/options/index.html\n */\nexport class OptionsManager {\n\t#messageManager: MessageManager\n\t#appOptions: null | Record<string, any> = null\n\t#userOptions: null | Record<string, any> = null\n\n\tconstructor(messageManager: MessageManager) {\n\t\tthis.#messageManager = messageManager\n\t}\n\n\t/**\n\t * Initializes the data received from the parent window message.\n\t * @param data\n\t */\n\tinitData(data: MessageInitData): OptionsManager {\n\t\tif (data.APP_OPTIONS) {\n\t\t\tthis.#appOptions = data.APP_OPTIONS as Record<string, any>\n\t\t}\n\n\t\tif (data.USER_OPTIONS) {\n\t\t\tthis.#userOptions = data.USER_OPTIONS as Record<string, any>\n\t\t}\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Getting application option\n\t *\n\t * @link https://apidocs.bitrix24.com/api-reference/bx24-js-sdk/options/bx24-app-option-get.html\n\t */\n\tappGet(option: string): any {\n\t\tif (this.#appOptions && !!this.#appOptions[option]) {\n\t\t\treturn this.#appOptions[option]\n\t\t}\n\n\t\tthrow new Error(`app.option.${option} not set`)\n\t}\n\n\t/**\n\t * Updates application data through the parent window\n\t *\n\t * @link https://apidocs.bitrix24.com/api-reference/bx24-js-sdk/options/bx24-app-option-set.html\n\t */\n\tasync appSet(option: string, value: any): Promise<void> {\n\t\tif (!this.#appOptions) {\n\t\t\tthis.#appOptions = []\n\t\t}\n\n\t\tthis.#appOptions[option] = value\n\n\t\treturn this.#sendParentMessage(\n\t\t\tMessageCommands.setAppOption,\n\t\t\toption,\n\t\t\tthis.#appOptions[option]\n\t\t)\n\t}\n\n\t/**\n\t * Getting user option\n\t *\n\t * @link https://apidocs.bitrix24.com/api-reference/bx24-js-sdk/options/bx24-user-option-get.html\n\t */\n\tuserGet(option: string): any {\n\t\tif (this.#userOptions && !!this.#userOptions[option]) {\n\t\t\treturn this.#userOptions[option]\n\t\t}\n\n\t\tthrow new Error(`user.option.${option} not set`)\n\t}\n\n\t/**\n\t * Updates user data through the parent window\n\t *\n\t * @link https://apidocs.bitrix24.com/api-reference/bx24-js-sdk/options/bx24-user-option-set.html\n\t */\n\tasync userSet(option: string, value: any): Promise<void> {\n\t\tif (!this.#appOptions) {\n\t\t\tthis.#appOptions = []\n\t\t}\n\n\t\tif (!this.#appOptions[option]) {\n\t\t\tthis.#appOptions[option] = null\n\t\t}\n\n\t\t// @ts-ignore\n\t\tthis.#userOptions[option] = value\n\n\t\treturn this.#sendParentMessage(\n\t\t\tMessageCommands.setUserOption,\n\t\t\toption,\n\t\t\t// @ts-ignore\n\t\t\tthis.#userOptions[option]\n\t\t)\n\t}\n\n\tasync #sendParentMessage(\n\t\tcommand: string,\n\t\toption: string,\n\t\tvalue: any\n\t): Promise<void> {\n\t\treturn this.#messageManager\n\t\t\t.send(command, {\n\t\t\t\tname: option,\n\t\t\t\tvalue: value,\n\t\t\t\tisSafely: true,\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\treturn Promise.resolve()\n\t\t\t})\n\t}\n}\n","import { MessageManager, MessageCommands } from './message'\nimport type { NumberString } from '../types/common'\n\nexport type SelectedUser = {\n\t/**\n\t * user identifier\n\t */\n\tid: NumberString\n\n\t/**\n\t * formatted username\n\t */\n\tname: string\n\n\tphoto: string\n\n\tposition: string\n\n\turl: string\n\n\t/**\n\t * The flag indicates that the selected user is a subordinate of the current user\n\t */\n\tsub: boolean\n\n\t/**\n\t * The flag indicates that the selected user is the manager of the current user\n\t */\n\tsup: boolean\n}\n\nexport type SelectedAccess = {\n\t/**\n\t * access permission identifier. Examples of identifiers:\n\t * - U1 — user with identifier 1\n\t * - IU1 — employees with identifier 1\n\t * - DR2 — all department and subdepartment employees with identifier 2\n\t * - D6 — all department employees with identifier 6\n\t * - G2 — group with identifier 2 (all visitors)\n\t * - SG4 — social network group with identifier 4\n\t * - AU — all authorized users\n\t * - CR — current user\n\t */\n\tid:\n\t\t| `AU`\n\t\t| `CR`\n\t\t| `U${number}`\n\t\t| `IU${number}`\n\t\t| `DR${number}`\n\t\t| `D${number}`\n\t\t| `G${number}`\n\t\t| `SG${number}`\n\n\t/**\n\t * name of the access permission\n\t */\n\tname: string\n}\n\nexport type SelectCRMParamsEntityType =\n\t| 'lead'\n\t| 'contact'\n\t| 'company'\n\t| 'deal'\n\t| 'quote'\n\nexport type SelectCRMParamsValue = {\n\tlead?: number[]\n\tcontact?: number[]\n\tcompany?: number[]\n\tdeal?: number[]\n\tquote?: number[]\n}\n\nexport type SelectCRMParams = {\n\t/**\n\t * Which types of objects to display in the dialog. Possible values:\n\t * - lead — Leads\n\t * - contact — Contacts\n\t * - company — Companies\n\t * - deal — Deals\n\t * - quote — Estimates\n\t */\n\tentityType: SelectCRMParamsEntityType[]\n\n\t/**\n\t * Whether multiple objects can be selected. Default is `false`\n\t */\n\tmultiple: boolean\n\n\t/**\n\t * Which objects to initially add to the selected in the dialog. Works only if `multiple = true`\n\t */\n\tvalue?: SelectCRMParamsValue\n}\n\nexport type SelectedCRMEntity = {\n\tid: string\n\ttype: SelectCRMParamsEntityType\n\tplace: string\n\ttitle: string\n\tdesc: string\n\turl: string\n}\n\nexport type SelectedCRM = {\n\tlead?: (SelectedCRMEntity & { id: `L_${number}` })[]\n\tcontact?: (SelectedCRMEntity & { id: `C_${number}`; image: string })[]\n\tcompany?: (SelectedCRMEntity & { id: `CO_${number}`; image: string })[]\n\tdeal?: (SelectedCRMEntity & { id: `D_${number}` })[]\n\tquote?: (SelectedCRMEntity & { id: `Q_${number}` })[]\n}\n\n/**\n * Select dialog manager\n *\n * @link https://apidocs.bitrix24.com/api-reference/bx24-js-sdk/system-dialogues/index.html\n */\nexport class DialogManager {\n\t#messageManager: MessageManager\n\n\tconstructor(messageManager: MessageManager) {\n\t\tthis.#messageManager = messageManager\n\t}\n\n\t/**\n\t * Method displays the standard single user selection dialog\n\t * It only shows company employees\n\t *\n\t * @return {Promise<null|SelectedUser>}\n\t *\n\t * @link https://apidocs.bitrix24.com/api-reference/bx24-js-sdk/system-dialogues/bx24-select-user.html\n\t */\n\tasync selectUser(): Promise<null | SelectedUser> {\n\t\treturn this.#messageManager.send(MessageCommands.selectUser, {\n\t\t\tmult: false,\n\t\t})\n\t}\n\n\t/**\n\t * Method displays the standard multiple user selection dialog\n\t * It only shows company employees\n\t *\n\t * @return {Promise<SelectedUser[]>}\n\t *\n\t * @link https://apidocs.bitrix24.com/api-reference/bx24-js-sdk/system-dialogues/bx24-select-users.html\n\t */\n\tasync selectUsers(): Promise<SelectedUser[]> {\n\t\treturn this.#messageManager.send(MessageCommands.selectUser, {\n\t\t\tmult: true,\n\t\t})\n\t}\n\n\t/**\n\t * @deprecated\n\t * Method displays a standard access permission selection dialog\n\t *\n\t * @param {string[]} blockedAccessPermissions\n\t * @return {Promise<SelectedAccess[]>}\n\t *\n\t * @link https://apidocs.bitrix24.com/api-reference/bx24-js-sdk/system-dialogues/bx24-select-access.html\n\t */\n\tasync selectAccess(\n\t\tblockedAccessPermissions: string[] = []\n\t): Promise<SelectedAccess[]> {\n\t\tconsole.warn(`@deprecated selectAccess`)\n\t\treturn this.#messageManager.send(MessageCommands.selectAccess, {\n\t\t\tvalue: blockedAccessPermissions,\n\t\t})\n\t}\n\n\t/**\n\t * @deprecated\n\t * Method invokes the system dialog for selecting a CRM entity\n\t *\n\t * @param {SelectCRMParams} params\n\t * @return {Promise<SelectedCRM>}\n\t *\n\t * @link https://apidocs.bitrix24.com/api-reference/bx24-js-sdk/system-dialogues/bx24-select-crm.html\n\t */\n\tasync selectCRM(params?: SelectCRMParams): Promise<SelectedCRM> {\n\t\tconsole.warn(`@deprecated selectCRM`)\n\t\treturn this.#messageManager.send(MessageCommands.selectCRM, {\n\t\t\tentityType: params?.entityType,\n\t\t\tmultiple: params?.multiple,\n\t\t\tvalue: params?.value,\n\t\t})\n\t}\n}\n","import { AppFrame } from './frame'\nimport { MessageManager, MessageCommands } from './message'\nimport type { StatusClose } from '../types/slider'\n\n/**\n * Sliders Manager\n */\nexport class SliderManager {\n\t#appFrame: AppFrame\n\t#messageManager: MessageManager\n\n\tconstructor(appFrame: AppFrame, messageManager: MessageManager) {\n\t\tthis.#appFrame = appFrame\n\t\tthis.#messageManager = messageManager\n\t}\n\n\t/**\n\t * Returns the URL relative to the domain name and path\n\t */\n\tgetUrl(path: string = '/'): URL {\n\t\treturn new URL(path, this.#appFrame.getTargetOrigin())\n\t}\n\n\t/**\n\t * Get the account address BX24\n\t */\n\tgetTargetOrigin(): string {\n\t\treturn this.#appFrame.getTargetOrigin()\n\t}\n\n\t/**\n\t * When the method is called, a pop-up window with the application frame will be opened.\n\t *\n\t * @link https://apidocs.bitrix24.com/api-reference/bx24-js-sdk/additional-functions/bx24-open-application.html\n\t */\n\tasync openSliderAppPage(params: any = {}): Promise<any> {\n\t\treturn this.#messageManager.send(MessageCommands.openApplication, params)\n\t}\n\n\t/**\n\t * The method closes the open modal window with the application\n\t *\n\t * @return {Promise<void>}\n\t *\n\t * @link https://apidocs.bitrix24.com/api-reference/bx24-js-sdk/additional-functions/bx24-close-application.html\n\t */\n\tasync closeSliderAppPage(): Promise<void> {\n\t\treturn this.#messageManager.send(MessageCommands.closeApplication, {\n\t\t\t/**\n\t\t\t * @memo There is no point - everything will be closed, and timeout will not be able to do anything\n\t\t\t */\n\t\t\tisSafely: false,\n\t\t})\n\t}\n\n\t/**\n\t * Defines the base path for width sampling.\n\t *\n\t * @param width\n\t * @private\n\t */\n\t#getBaseUrlByWidth(width: number = 1640): string {\n\t\tif (width > 0) {\n\t\t\t// region Init baseUrl by Width ////\n\t\t\tif (width > 1200 && width <= 1640) {\n\t\t\t\treturn '/crm/type/0/details/0/../../../../..'\n\t\t\t} else if (width > 950 && width <= 1200) {\n\t\t\t\treturn '/company/personal/user/0/groups/create/../../../../../..'\n\t\t\t} else if (width > 900 && width <= 950) {\n\t\t\t\treturn '/crm/company/requisite/0/../../../..'\n\t\t\t} else if (width <= 900) {\n\t\t\t\treturn '/workgroups/group/0/card/../../../..'\n\t\t\t} else {\n\t\t\t\t// 1640 /////\n\t\t\t\treturn '/crm/deal/../..'\n\t\t\t}\n\t\t\t// endregion ////\n\t\t} else {\n\t\t\treturn '/crm/deal/../..'\n\t\t}\n\t}\n\n\t/**\n\t * Opens the specified path inside the portal in the slider.\n\t * @param {URL} url\n\t * @param {number} width - Number in the range from 1640 to 1200, from 1200 to 950, from 950 to 900, from 900 ...\n\t * @return {Promise<StatusClose>}\n\t *\n\t * @link https://apidocs.bitrix24.com/api-reference/bx24-js-sdk/additional-functions/bx24-open-path.html\n\t * @memo /^\\/(crm\\/(deal|lead|contact|company|type)|marketplace|company\\/personal\\/user\\/[0-9]+|workgroups\\/group\\/[0-9]+)\\//\n\t */\n\tasync openPath(url: URL, width: number = 1640): Promise<StatusClose> {\n\t\tconst openSliderUrl = new URL(url)\n\t\topenSliderUrl.searchParams.set('IFRAME', 'Y')\n\t\topenSliderUrl.searchParams.set('IFRAME_TYPE', 'SIDE_SLIDER')\n\n\t\t/**\n\t\t * We are trying to open the slider\n\t\t */\n\t\treturn this.#messageManager\n\t\t\t.send(MessageCommands.openPath, {\n\t\t\t\tpath: [\n\t\t\t\t\tthis.#getBaseUrlByWidth(width),\n\t\t\t\t\topenSliderUrl.pathname,\n\t\t\t\t\topenSliderUrl.search,\n\t\t\t\t].join(''),\n\t\t\t})\n\t\t\t.then((response) => {\n\t\t\t\t/**\n\t\t\t\t * Error handling\n\t\t\t\t */\n\t\t\t\tif (response?.result === 'error') {\n\t\t\t\t\t/**\n\t\t\t\t\t * If the error is related to using a mobile device, we will open it in a new tab\n\t\t\t\t\t * Let's wait 5 minutes - and return the promise to open and not close\n\t\t\t\t\t */\n\t\t\t\t\tif (response?.errorCode === 'METHOD_NOT_SUPPORTED_ON_DEVICE') {\n\t\t\t\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\t\t\t\tconst windowObjectReference = window.open(url, '_blank')\n\t\t\t\t\t\t\tif (!windowObjectReference) {\n\t\t\t\t\t\t\t\treject(new Error('Error open window'))\n\t\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tlet iterator = 0\n\t\t\t\t\t\t\t// 5 min ////\n\t\t\t\t\t\t\tconst iteratorMax = 1_000 * 60 * 5\n\t\t\t\t\t\t\tconst waitCloseWindow = window.setInterval(() => {\n\t\t\t\t\t\t\t\titerator = iterator + 1\n\n\t\t\t\t\t\t\t\tif (windowObjectReference.closed) {\n\t\t\t\t\t\t\t\t\tclearInterval(waitCloseWindow)\n\t\t\t\t\t\t\t\t\tresolve({\n\t\t\t\t\t\t\t\t\t\tisOpenAtNewWindow: true,\n\t\t\t\t\t\t\t\t\t\tisClose: true,\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t} else if (iterator > iteratorMax) {\n\t\t\t\t\t\t\t\t\tclearInterval(waitCloseWindow)\n\t\t\t\t\t\t\t\t\tresolve({\n\t\t\t\t\t\t\t\t\t\tisOpenAtNewWindow: true,\n\t\t\t\t\t\t\t\t\t\tisClose: false,\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}, 1_000)\n\t\t\t\t\t\t})\n\t\t\t\t\t} else {\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t * If the error is different, we will return it.\n\t\t\t\t\t\t */\n\t\t\t\t\t\treturn Promise.reject(new Error(response?.errorCode))\n\t\t\t\t\t}\n\t\t\t\t} else if (response?.result === 'close') {\n\t\t\t\t\t/**\n\t\t\t\t\t * Processing a successful close\n\t\t\t\t\t */\n\t\t\t\t\treturn Promise.resolve({\n\t\t\t\t\t\tisOpenAtNewWindow: false,\n\t\t\t\t\t\tisClose: true,\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\treturn Promise.resolve({\n\t\t\t\t\tisOpenAtNewWindow: false,\n\t\t\t\t\tisClose: false,\n\t\t\t\t})\n\t\t\t})\n\t}\n\n\t/**\n\t * @deprecated\n\t * @param params\n\t */\n\tasync showAppForm(params: any): Promise<void> {\n\t\tconsole.warn(`@deprecated showAppForm`)\n\t\treturn this.#messageManager.send(MessageCommands.showAppForm, {\n\t\t\tparams: params,\n\t\t\tisSafely: true,\n\t\t})\n\t}\n}\n","import type { MessageInitData } from '../types/auth'\n\n/**\n * Placement Manager\n *\n * @see https://apidocs.bitrix24.com/api-reference/widgets/ui-interaction/index.html\n * @see https://dev.1c-bitrix.ru/learning/course/index.php?COURSE_ID=99&CHAPTER_ID=02535&LESSON_PATH=8771.5380.2535\n */\nexport class PlacementManager {\n\t#title: string = ''\n\t#options: object = {}\n\n\tconstructor() {}\n\n\t/**\n\t * Initializes the data received from the parent window message.\n\t * @param data\n\t */\n\tinitData(data: MessageInitData): PlacementManager {\n\t\tthis.#title = data.PLACEMENT || 'DEFAULT'\n\t\tconst options = data.PLACEMENT_OPTIONS\n\n\t\tthis.#options = Object.freeze(options)\n\n\t\treturn this\n\t}\n\n\tget title(): string {\n\t\treturn this.#title\n\t}\n\n\tget isDefault(): boolean {\n\t\treturn this.title === 'DEFAULT'\n\t}\n\n\tget options(): any {\n\t\treturn this.#options\n\t}\n\n\tget isSliderMode(): boolean {\n\t\treturn this.options?.IFRAME === 'Y'\n\t}\n}\n","import { LoggerBrowser } from '../logger/browser'\nimport { AbstractB24 } from '../core/abstract-b24'\nimport Http from '../core/http/controller'\nimport { AppFrame } from './frame'\nimport { MessageManager, MessageCommands } from './message'\nimport { B24LangList } from '../core/language/list'\nimport { AuthManager } from './auth'\nimport { ParentManager } from './parent'\nimport { OptionsManager } from './options'\nimport { DialogManager } from './dialog'\nimport { SliderManager } from './slider'\nimport { PlacementManager } from './placement'\nimport type { TypeB24 } from '../types/b24'\nimport type { AuthActions } from '../types/auth'\n\nimport type { MessageInitData, B24FrameQueryParams } from '../types/auth'\n/**\n * B24 Manager. Replacement api.bitrix24.com\n *\n * @link https://api.bitrix24.com/api/v1/\n * @see /bitrix/js/rest/applayout.js\n */\nexport class B24Frame extends AbstractB24 implements TypeB24 {\n\t#isInstallMode: boolean = false\n\t#isFirstRun: boolean = false\n\n\treadonly #appFrame: AppFrame\n\treadonly #messageManager: MessageManager\n\treadonly #authManager: AuthManager\n\treadonly #parentManager: ParentManager\n\treadonly #optionsManager: OptionsManager\n\treadonly #dialogManager: DialogManager\n\treadonly #sliderManager: SliderManager\n\treadonly #placementManager: PlacementManager\n\n\t// region Init ////\n\tconstructor(queryParams: B24FrameQueryParams) {\n\t\tsuper()\n\n\t\tthis.#appFrame = new AppFrame(queryParams)\n\n\t\tthis.#messageManager = new MessageManager(this.#appFrame)\n\t\tthis.#messageManager.subscribe()\n\n\t\tthis.#authManager = new AuthManager(this.#appFrame, this.#messageManager)\n\t\tthis.#parentManager = new ParentManager(this.#messageManager)\n\t\tthis.#optionsManager = new OptionsManager(this.#messageManager)\n\t\tthis.#dialogManager = new DialogManager(this.#messageManager)\n\t\tthis.#sliderManager = new SliderManager(\n\t\t\tthis.#appFrame,\n\t\t\tthis.#messageManager\n\t\t)\n\t\tthis.#placementManager = new PlacementManager()\n\n\t\tthis._isInit = false\n\t}\n\n\tpublic override setLogger(logger: LoggerBrowser): void {\n\t\tsuper.setLogger(logger)\n\t\tthis.#messageManager.setLogger(this.getLogger())\n\t}\n\n\tget isFirstRun(): boolean {\n\t\tthis._ensureInitialized()\n\t\treturn this.#isFirstRun\n\t}\n\n\tget isInstallMode(): boolean {\n\t\tthis._ensureInitialized()\n\t\treturn this.#isInstallMode\n\t}\n\n\tget parent(): ParentManager {\n\t\tthis._ensureInitialized()\n\t\treturn this.#parentManager\n\t}\n\n\toverride get auth(): AuthActions {\n\t\tthis._ensureInitialized()\n\t\treturn this.#authManager\n\t}\n\n\tget slider(): SliderManager {\n\t\tthis._ensureInitialized()\n\t\treturn this.#sliderManager\n\t}\n\n\tget placement(): PlacementManager {\n\t\tthis._ensureInitialized()\n\t\treturn this.#placementManager\n\t}\n\n\tget options(): OptionsManager {\n\t\tthis._ensureInitialized()\n\t\treturn this.#optionsManager\n\t}\n\n\tget dialog(): DialogManager {\n\t\tthis._ensureInitialized()\n\t\treturn this.#dialogManager\n\t}\n\n\toverride async init(): Promise<void> {\n\t\treturn this.#messageManager\n\t\t\t.send(MessageCommands.getInitData, {})\n\t\t\t.then((data: MessageInitData) => {\n\t\t\t\tthis.getLogger().log('init data:', data)\n\n\t\t\t\tthis.#appFrame.initData(data)\n\t\t\t\tthis.#authManager.initData(data)\n\t\t\t\tthis.#placementManager.initData(data)\n\t\t\t\tthis.#optionsManager.initData(data)\n\n\t\t\t\tthis.#isInstallMode = data.INSTALL\n\t\t\t\tthis.#isFirstRun = data.FIRST_RUN\n\n\t\t\t\tthis._http = new Http(\n\t\t\t\t\tthis.#appFrame.getTargetOriginWithPath(),\n\t\t\t\t\tthis.#authManager,\n\t\t\t\t\tthis._getHttpOptions()\n\t\t\t\t)\n\n\t\t\t\tthis._isInit = true\n\n\t\t\t\t/**\n\t\t\t\t * @memo Writes the fact of the 1st launch to `app_options`\n\t\t\t\t */\n\t\t\t\tif (this.#isFirstRun) {\n\t\t\t\t\treturn this.#messageManager.send(MessageCommands.setInstall, {\n\t\t\t\t\t\tinstall: true,\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\treturn Promise.resolve()\n\t\t\t})\n\t}\n\n\t/**\n\t * Destructor.\n\t * Removes an event subscription\n\t */\n\toverride destroy() {\n\t\tthis.#messageManager.unsubscribe()\n\t\tsuper.destroy()\n\t}\n\t// endregion ////\n\n\t// region Core ////\n\t/**\n\t * Signals that the installer or application setup has finished running.\n\t *\n\t * @link https://apidocs.bitrix24.com/api-reference/bx24-js-sdk/system-functions/bx24-install-finish.html\n\t */\n\tasync installFinish(): Promise<any> {\n\t\tif (!this.isInstallMode) {\n\t\t\treturn Promise.reject(\n\t\t\t\tnew Error(\n\t\t\t\t\t'Application was previously installed. You cannot call installFinish'\n\t\t\t\t)\n\t\t\t)\n\t\t}\n\n\t\treturn this.#messageManager.send(MessageCommands.setInstallFinish, {})\n\t}\n\t// endregion ////\n\n\t// region Get ////\n\t/**\n\t * Get the account address BX24 ( https://name.bitrix24.com )\n\t */\n\toverride getTargetOrigin(): string {\n\t\tthis._ensureInitialized()\n\t\treturn this.#appFrame.getTargetOrigin()\n\t}\n\n\t/**\n\t * Get the account address BX24 with Path ( https://name.bitrix24.com/rest )\n\t */\n\toverride getTargetOriginWithPath(): string {\n\t\tthis._ensureInitialized()\n\t\treturn this.#appFrame.getTargetOriginWithPath()\n\t}\n\n\t/**\n\t * Returns the sid of the application relative to the parent window like this `9c33468728e1d2c8c97562475edfd96`\n\t */\n\tgetAppSid(): string {\n\t\tthis._ensureInitialized()\n\t\treturn this.#appFrame.getAppSid()\n\t}\n\n\t/**\n\t * Returns the localization of the B24 interface\n\t *\n\t * @link https://apidocs.bitrix24.com/api-reference/bx24-js-sdk/additional-functions/bx24-get-lang.html\n\t */\n\tgetLang(): B24LangList {\n\t\tthis._ensureInitialized()\n\t\treturn this.#appFrame.getLang()\n\t}\n\t// endregion ////\n}\n","import { LoggerBrowser, LoggerType } from '../logger/browser'\nimport type { TypeB24 } from '../types/b24'\n\nexport class UnhandledMatchError extends Error {\n\tconstructor(value: string, ...args: any[]) {\n\t\tsuper(...args)\n\t\tthis.name = 'UnhandledMatchError'\n\t\tthis.message = `Unhandled match value of type ${value}`\n\t\tthis.stack = new Error('for stack').stack\n\t}\n}\n\nexport abstract class AbstractHelper {\n\tprotected _b24: TypeB24\n\tprotected _logger: null | LoggerBrowser = null\n\tprotected _data: any = null\n\n\t// region Init ////\n\tconstructor(b24: TypeB24) {\n\t\tthis._b24 = b24\n\t}\n\n\tsetLogger(logger: LoggerBrowser): void {\n\t\tthis._logger = logger\n\t}\n\n\tgetLogger(): LoggerBrowser {\n\t\tif (null === this._logger) {\n\t\t\tthis._logger = LoggerBrowser.build(`NullLogger`)\n\n\t\t\tthis._logger.setConfig({\n\t\t\t\t[LoggerType.desktop]: false,\n\t\t\t\t[LoggerType.log]: false,\n\t\t\t\t[LoggerType.info]: false,\n\t\t\t\t[LoggerType.warn]: false,\n\t\t\t\t[LoggerType.error]: true,\n\t\t\t\t[LoggerType.trace]: false,\n\t\t\t})\n\t\t}\n\n\t\treturn this._logger\n\t}\n\t// endregion ////\n\n\t/**\n\t * Initializes the data received\n\t * @param data\n\t */\n\tasync initData(data: any): Promise<void> {\n\t\tthis.getLogger().log(data)\n\t\treturn Promise.reject(new Error('Rewrite this function'))\n\t}\n\n\tabstract get data(): any\n}\n","import { AbstractHelper } from './abstract-helper'\nimport type { TypeUser } from '../types/b24-helper'\n\nexport class ProfileManager extends AbstractHelper {\n\tprotected override _data: null | TypeUser = null\n\n\t/**\n\t * @inheritDoc\n\t */\n\toverride async initData(data: TypeUser): Promise<void> {\n\t\tthis._data = data\n\t}\n\n\tget data(): TypeUser {\n\t\tif (null === this._data) {\n\t\t\tthrow new Error('ProfileManager.data not initialized')\n\t\t}\n\n\t\treturn this._data\n\t}\n}\n","import { AbstractHelper } from './abstract-helper'\nimport { StatusDescriptions, type TypeApp } from '../types/b24-helper'\n\nexport class AppManager extends AbstractHelper {\n\tprotected override _data: null | TypeApp = null\n\n\t/**\n\t * @inheritDoc\n\t */\n\toverride async initData(data: TypeApp): Promise<void> {\n\t\tthis._data = data\n\t}\n\n\tget data(): TypeApp {\n\t\tif (null === this._data) {\n\t\t\tthrow new Error('AppManager.data not initialized')\n\t\t}\n\n\t\treturn this._data\n\t}\n\n\tget statusCode(): string {\n\t\treturn (\n\t\t\tStatusDescriptions[this.data.status as keyof typeof StatusDescriptions] ||\n\t\t\t'Unknown status'\n\t\t)\n\t}\n}\n","import { AbstractHelper } from './abstract-helper'\nimport type { TypePayment } from '../types/b24-helper'\n\nexport class PaymentManager extends AbstractHelper {\n\tprotected override _data: null | TypePayment = null\n\n\t/**\n\t * @inheritDoc\n\t */\n\toverride async initData(data: TypePayment): Promise<void> {\n\t\tthis._data = data\n\t}\n\n\tget data(): TypePayment {\n\t\tif (null === this._data) {\n\t\t\tthrow new Error('PaymentManager.data not initialized')\n\t\t}\n\n\t\treturn this._data\n\t}\n}\n","import { AbstractHelper } from './abstract-helper'\nimport type { TypeLicense } from '../types/b24-helper'\nimport { RestrictionManagerParamsForEnterprise } from '../types/http'\n\nexport class LicenseManager extends AbstractHelper {\n\tprotected override _data: null | TypeLicense = null\n\n\t/**\n\t * @inheritDoc\n\t */\n\toverride async initData(data: TypeLicense): Promise<void> {\n\t\tthis._data = data\n\n\t\tthis.makeRestrictionManagerParams()\n\t}\n\n\tget data(): TypeLicense {\n\t\tif (null === this._data) {\n\t\t\tthrow new Error('LicenseManager.data not initialized')\n\t\t}\n\n\t\treturn this._data\n\t}\n\n\t/**\n\t * Set RestrictionManager params by license\n\t * @link https://apidocs.bitrix24.com/api-reference/common/system/app-info.html\n\t */\n\tmakeRestrictionManagerParams(): void {\n\t\tif (!this.data?.license) {\n\t\t\treturn\n\t\t}\n\n\t\tif (this.data.license.includes('ent')) {\n\t\t\tthis.getLogger().log(\n\t\t\t\t`LICENSE ${this.data.license} => up restriction manager params`,\n\t\t\t\tRestrictionManagerParamsForEnterprise\n\t\t\t)\n\n\t\t\tthis._b24\n\t\t\t\t.getHttpClient()\n\t\t\t\t.setRestrictionManagerParams(RestrictionManagerParamsForEnterprise)\n\t\t}\n\t}\n}\n","import { AbstractHelper, UnhandledMatchError } from './abstract-helper'\nimport type { BoolString, ISODate, NumberString } from '../types/common'\nimport type { Currency, CurrencyFormat } from '../types/b24-helper'\nimport Type from '../tools/type'\nimport Text from '../tools/text'\n\ntype CurrencyFormatInit = {\n\tDECIMALS: NumberString\n\tDEC_POINT: string\n\tFORMAT_STRING: string\n\tFULL_NAME: string\n\tHIDE_ZERO: BoolString\n\tTHOUSANDS_SEP?: string\n\tTHOUSANDS_VARIANT: string\n}\n\ntype CurrencyInit = {\n\tAMOUNT: NumberString\n\tAMOUNT_CNT: NumberString\n\tBASE: BoolString\n\tCURRENCY: string\n\tDATE_UPDATE: ISODate\n\tDECIMALS: NumberString\n\tDEC_POINT: string\n\tFORMAT_STRING: string\n\tFULL_NAME: string\n\tLID: string\n\tSORT: NumberString\n\tTHOUSANDS_SEP?: string\n\tLANG?: Record<string, CurrencyFormatInit>\n}\n\ntype CurrencyInitData = {\n\tcurrencyBase: string\n\tcurrencyList: CurrencyInit[]\n}\n\ntype CurrencyData = {\n\tcurrencyBase: string\n\tcurrencyList: Map<string, Currency>\n}\n\nexport class CurrencyManager extends AbstractHelper {\n\t/**\n\t * @inheritDoc\n\t */\n\toverride async initData(data: CurrencyInitData): Promise<void> {\n\t\tthis._data = {\n\t\t\tcurrencyBase: '?',\n\t\t\tcurrencyList: new Map(),\n\t\t} as CurrencyData\n\n\t\tthis.setBaseCurrency(data.currencyBase)\n\t\tthis.setCurrencyList(data.currencyList)\n\n\t\ttry {\n\t\t\tawait this.loadData()\n\t\t} catch (error) {\n\t\t\tif (error instanceof Error) {\n\t\t\t\tthrow error\n\t\t\t}\n\n\t\t\tconsole.error(error)\n\t\t\tthrow new Error('Failed to load data')\n\t\t}\n\t}\n\n\tasync loadData(): Promise<void> {\n\t\tconst batchRequest: {\n\t\t\tmethod: string\n\t\t\tparams: { id: string }\n\t\t}[] = this.currencyList.map((currencyCode) => {\n\t\t\treturn {\n\t\t\t\tmethod: 'crm.currency.get',\n\t\t\t\tparams: {\n\t\t\t\t\tid: currencyCode,\n\t\t\t\t},\n\t\t\t}\n\t\t})\n\n\t\tif (batchRequest.length === 0) {\n\t\t\treturn Promise.resolve()\n\t\t}\n\n\t\ttry {\n\t\t\tconst response = await this._b24.callBatchByChunk(batchRequest, true)\n\t\t\tconst data = response.getData()\n\n\t\t\t// eslint-disable-next-line unicorn/no-array-for-each\n\t\t\tdata.forEach((row: CurrencyInit) => {\n\t\t\t\tif (typeof row.LANG === 'undefined') {\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\tconst currencyCode = row.CURRENCY\n\t\t\t\tconst currency = this.data.currencyList.get(currencyCode)\n\t\t\t\tif (typeof currency === 'undefined') {\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\tfor (const [langCode, formatData] of Object.entries(row.LANG)) {\n\t\t\t\t\tcurrency.lang[langCode] = {\n\t\t\t\t\t\tdecimals: Number.parseInt(formatData.DECIMALS),\n\t\t\t\t\t\tdecPoint: formatData.DEC_POINT,\n\t\t\t\t\t\tformatString: formatData.FORMAT_STRING,\n\t\t\t\t\t\tfullName: formatData.FULL_NAME,\n\t\t\t\t\t\tisHideZero: formatData.HIDE_ZERO === 'Y',\n\t\t\t\t\t\tthousandsSep: formatData.THOUSANDS_SEP,\n\t\t\t\t\t\tthousandsVariant: formatData.THOUSANDS_VARIANT,\n\t\t\t\t\t} as CurrencyFormat\n\n\t\t\t\t\tswitch (currency.lang[langCode].thousandsVariant) {\n\t\t\t\t\t\tcase 'N':\n\t\t\t\t\t\t\tcurrency.lang[langCode].thousandsSep = ''\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\tcase 'D':\n\t\t\t\t\t\t\tcurrency.lang[langCode].thousandsSep = '.'\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\tcase 'C':\n\t\t\t\t\t\t\tcurrency.lang[langCode].thousandsSep = ','\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\tcase 'S':\n\t\t\t\t\t\t\tcurrency.lang[langCode].thousandsSep = ' '\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\tcase 'B':\n\t\t\t\t\t\t\tcurrency.lang[langCode].thousandsSep = '&nbsp;'\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t// case 'OWN': ////\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tif (!Type.isStringFilled(currency.lang[langCode].thousandsSep)) {\n\t\t\t\t\t\t\t\tcurrency.lang[langCode].thousandsSep = ' '\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t} catch (error) {\n\t\t\tconsole.error(error)\n\t\t}\n\t}\n\n\tget data(): CurrencyData {\n\t\tif (null === this._data) {\n\t\t\tthrow new Error('CurrencyManager.data not initialized')\n\t\t}\n\n\t\treturn this._data\n\t}\n\n\t// region BaseCurrency ////\n\tsetBaseCurrency(currencyBase: string) {\n\t\tthis._data.currencyBase = currencyBase\n\t}\n\n\tget baseCurrency(): string {\n\t\treturn this.data.currencyBase\n\t}\n\t// endregion ////\n\n\t// region CurrencyList ////\n\tsetCurrencyList(list: CurrencyInit[] = []) {\n\t\tthis.data.currencyList.clear()\n\n\t\tfor (const row of list) {\n\t\t\tthis.data.currencyList.set(row.CURRENCY, {\n\t\t\t\tamount: Number.parseFloat(row.CURRENCY),\n\t\t\t\tamountCnt: Number.parseInt(row.AMOUNT_CNT),\n\t\t\t\tisBase: row.BASE === 'Y',\n\t\t\t\tcurrencyCode: row.CURRENCY,\n\t\t\t\tdateUpdate: Text.toDateTime(row.DATE_UPDATE),\n\t\t\t\tdecimals: Number.parseInt(row.DECIMALS),\n\t\t\t\tdecPoint: row.DEC_POINT,\n\t\t\t\tformatString: row.FORMAT_STRING,\n\t\t\t\tfullName: row.FULL_NAME,\n\t\t\t\tlid: row.LID,\n\t\t\t\tsort: Number.parseInt(row.SORT),\n\t\t\t\tthousandsSep: row?.THOUSANDS_SEP || null,\n\t\t\t\tlang: {},\n\t\t\t} as Currency)\n\t\t}\n\t}\n\t// endregion ////\n\n\t// region Info ////\n\tgetCurrencyFullName(currencyCode: string, langCode: string): string {\n\t\tconst currency = this.data.currencyList.get(currencyCode)\n\t\tif (typeof currency === 'undefined') {\n\t\t\tthrow new UnhandledMatchError(currencyCode)\n\t\t}\n\n\t\tlet fullName = currency.fullName\n\n\t\tif (!(typeof langCode === 'undefined')) {\n\t\t\tconst langFormatter = currency.lang[langCode]\n\t\t\tif (!Type.isUndefined(langFormatter)) {\n\t\t\t\tfullName = langFormatter.fullName\n\t\t\t}\n\t\t}\n\n\t\treturn fullName\n\t}\n\n\tgetCurrencyLiteral(currencyCode: string, langCode?: string): string {\n\t\tconst currency = this.data.currencyList.get(currencyCode)\n\t\tif (typeof currency === 'undefined') {\n\t\t\tthrow new UnhandledMatchError(currencyCode)\n\t\t}\n\n\t\tlet formatString = currency.formatString\n\n\t\tif (!(typeof langCode === 'undefined')) {\n\t\t\tconst langFormatter = currency.lang[langCode]\n\t\t\tif (!Type.isUndefined(langFormatter)) {\n\t\t\t\tformatString = langFormatter.formatString\n\t\t\t}\n\t\t}\n\n\t\treturn (\n\t\t\tformatString\n\t\t\t\t.replaceAll('&#', '&%')\n\t\t\t\t.replaceAll('#', '')\n\t\t\t\t.replaceAll('&%', '&#')\n\t\t\t\t.trim() || ''\n\t\t)\n\t}\n\n\tget currencyList(): string[] {\n\t\treturn [...this.data.currencyList.keys()]\n\t}\n\t// endregion ////\n\n\t// region Format ////\n\tformat(value: number, currencyCode: string, langCode: string): string {\n\t\tconst currency = this.data.currencyList.get(currencyCode)\n\t\tif (typeof currency === 'undefined') {\n\t\t\tthrow new UnhandledMatchError(currencyCode)\n\t\t}\n\n\t\tconst options = {\n\t\t\tformatString: currency.formatString,\n\t\t\tdecimals: currency.decimals,\n\t\t\tdecPoint: currency.decPoint,\n\t\t\tthousandsSep: currency.thousandsSep,\n\t\t}\n\t\tif (!Type.isStringFilled(options.thousandsSep)) {\n\t\t\toptions.thousandsSep = ''\n\t\t}\n\n\t\tconst langFormatter = currency.lang[langCode]\n\t\tif (!Type.isUndefined(langFormatter)) {\n\t\t\toptions.formatString = langFormatter.formatString\n\t\t\toptions.decimals = langFormatter.decimals\n\t\t\toptions.decPoint = langFormatter.decPoint\n\t\t\toptions.thousandsSep = langFormatter.thousandsSep\n\t\t}\n\n\t\treturn (\n\t\t\toptions.formatString\n\t\t\t\t.replaceAll('&#', '&%')\n\t\t\t\t.replace(\n\t\t\t\t\t'#',\n\t\t\t\t\tText.numberFormat(\n\t\t\t\t\t\tvalue,\n\t\t\t\t\t\toptions.decimals,\n\t\t\t\t\t\toptions.decPoint,\n\t\t\t\t\t\toptions.thousandsSep\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t\t.replaceAll('&%', '&#') || ''\n\t\t)\n\t}\n\t// endregion ////\n}\n","import { DateTime } from 'luxon'\nimport { AbstractHelper } from './abstract-helper'\nimport type { TypeB24 } from '../types/b24'\nimport { Result } from '../core/result'\nimport { TypeOption } from '../types/b24-helper'\nimport Type from '../tools/type'\nimport Text from '../tools/text'\n\nexport class OptionsManager extends AbstractHelper {\n\tprotected override _data: Map<string, any>\n\tprotected _type: 'app' | 'user'\n\n\t// region static ////\n\tstatic getSupportTypes(): TypeOption[] {\n\t\treturn [\n\t\t\tTypeOption.NotSet,\n\t\t\tTypeOption.JsonArray,\n\t\t\tTypeOption.JsonObject,\n\t\t\tTypeOption.FloatVal,\n\t\t\tTypeOption.IntegerVal,\n\t\t\tTypeOption.BoolYN,\n\t\t\tTypeOption.StringVal,\n\t\t]\n\t}\n\n\tstatic prepareArrayList(list: any): any[] {\n\t\tif (Type.isArray(list)) {\n\t\t\treturn list\n\t\t}\n\n\t\tif (Type.isObject(list)) {\n\t\t\treturn Object.values(list)\n\t\t}\n\n\t\treturn []\n\t}\n\n\t// endregion ////\n\n\t// region Init ////\n\tconstructor(b24: TypeB24, type: 'app' | 'user') {\n\t\tsuper(b24)\n\t\tthis._type = type\n\t\tthis._data = new Map()\n\t}\n\n\tget data(): Map<string, any> {\n\t\treturn this._data\n\t}\n\n\treset() {\n\t\tthis.data.clear()\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\toverride async initData(data: any): Promise<void> {\n\t\tthis.reset()\n\n\t\tif (Type.isObject(data)) {\n\t\t\tfor (const [key, value] of Object.entries(data)) {\n\t\t\t\tthis.data.set(key, value)\n\t\t\t}\n\t\t}\n\t}\n\n\t// endregion ////\n\n\t// region Get ////\n\tgetJsonArray(key: string, defValue: any[] = []): any[] {\n\t\tif (!this.data.has(key)) {\n\t\t\treturn defValue\n\t\t}\n\n\t\tlet data = this.data.get(key)\n\n\t\ttry {\n\t\t\tdata = JSON.parse(data)\n\n\t\t\tif (!Type.isArray(data) && !Type.isObject(data)) {\n\t\t\t\tdata = defValue\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tthis.getLogger().error(error)\n\t\t\tdata = defValue\n\t\t}\n\n\t\treturn OptionsManager.prepareArrayList(data)\n\t}\n\n\tgetJsonObject(key: string, defValue: object = {}): object {\n\t\tif (!this.data.has(key)) {\n\t\t\treturn defValue\n\t\t}\n\n\t\tlet data = this.data.get(key)\n\n\t\ttry {\n\t\t\tdata = JSON.parse(data)\n\t\t} catch (error) {\n\t\t\tthis.getLogger().error(error)\n\t\t\tdata = defValue\n\t\t}\n\n\t\tif (!Type.isObject(data)) {\n\t\t\tdata = defValue\n\t\t}\n\n\t\treturn data\n\t}\n\n\tgetFloat(key: string, defValue: number = 0.0): number {\n\t\tif (!this.data.has(key)) {\n\t\t\treturn defValue\n\t\t}\n\n\t\treturn Text.toNumber(this.data.get(key))\n\t}\n\n\tgetInteger(key: string, defValue: number = 0): number {\n\t\tif (!this.data.has(key)) {\n\t\t\treturn defValue\n\t\t}\n\n\t\treturn Text.toInteger(this.data.get(key))\n\t}\n\n\tgetBoolYN(key: string, defValue: boolean = true): boolean {\n\t\tif (!this.data.has(key)) {\n\t\t\treturn defValue\n\t\t}\n\n\t\treturn Text.toBoolean(this.data.get(key))\n\t}\n\n\tgetBoolNY(key: string, defValue: boolean = false): boolean {\n\t\tif (!this.data.has(key)) {\n\t\t\treturn defValue\n\t\t}\n\n\t\treturn Text.toBoolean(this.data.get(key))\n\t}\n\n\tgetString(key: string, defValue: string = ''): string {\n\t\tif (!this.data.has(key)) {\n\t\t\treturn defValue\n\t\t}\n\n\t\treturn this.data.get(key).toString()\n\t}\n\n\tgetDate(key: string, defValue: null | DateTime = null): null | DateTime {\n\t\tif (!this.data.has(key)) {\n\t\t\treturn defValue\n\t\t}\n\n\t\ttry {\n\t\t\tconst result = Text.toDateTime(this.data.get(key).toString())\n\t\t\tif (result.isValid) {\n\t\t\t\treturn result\n\t\t\t} else {\n\t\t\t\treturn defValue\n\t\t\t}\n\t\t} catch {\n\t\t\treturn defValue\n\t\t}\n\t}\n\n\t// endregion ////\n\n\t// region Tools ////\n\tencode(value: any): string {\n\t\treturn JSON.stringify(value)\n\t}\n\n\tdecode(data: string, defaultValue: any): any {\n\t\ttry {\n\t\t\tif (data.length > 0) {\n\t\t\t\treturn JSON.parse(data)\n\t\t\t}\n\n\t\t\treturn defaultValue\n\t\t} catch (error) {\n\t\t\tthis.getLogger().warn(error, data)\n\t\t}\n\n\t\treturn defaultValue\n\t}\n\n\t// endregion ////\n\n\t// region Save ////\n\tprotected getMethodSave(): string {\n\t\tswitch (this._type) {\n\t\t\tcase 'app':\n\t\t\t\treturn 'app.option.set'\n\t\t\tcase 'user':\n\t\t\t\treturn 'user.option.set'\n\t\t}\n\t}\n\n\tpublic async save(\n\t\toptions: any,\n\t\toptionsPull?: {\n\t\t\tmoduleId: string\n\t\t\tcommand: string\n\t\t\tparams: any\n\t\t}\n\t): Promise<Result> {\n\t\tconst commands = []\n\t\tcommands.push({\n\t\t\tmethod: this.getMethodSave(),\n\t\t\tparams: {\n\t\t\t\toptions,\n\t\t\t},\n\t\t})\n\n\t\tif (Type.isObject(optionsPull)) {\n\t\t\tcommands.push({\n\t\t\t\tmethod: 'pull.application.event.add',\n\t\t\t\tparams: {\n\t\t\t\t\tCOMMAND: optionsPull?.command,\n\t\t\t\t\tPARAMS: optionsPull?.params,\n\t\t\t\t\tMODULE_ID: optionsPull?.moduleId,\n\t\t\t\t},\n\t\t\t})\n\t\t}\n\n\t\treturn this._b24.callBatch(commands, true)\n\t}\n\n\t// endregion ////\n}\n","import { LoggerBrowser, LoggerType } from '../logger/browser'\nimport Text from '../tools/text'\nimport type { StorageManagerParams, TypeStorageManager } from '../types/pull'\n\nexport class StorageManager implements TypeStorageManager {\n\tprivate _logger: null | LoggerBrowser = null\n\n\tprivate readonly userId: number\n\tprivate readonly siteId: string\n\n\tconstructor(params: StorageManagerParams = {}) {\n\t\tthis.userId = params.userId ? Text.toInteger(params.userId) : 0\n\t\tthis.siteId = params.siteId ?? 'none'\n\t}\n\n\tsetLogger(logger: LoggerBrowser): void {\n\t\tthis._logger = logger\n\t}\n\n\tgetLogger(): LoggerBrowser {\n\t\tif (null === this._logger) {\n\t\t\tthis._logger = LoggerBrowser.build(`NullLogger`)\n\n\t\t\tthis._logger.setConfig({\n\t\t\t\t[LoggerType.desktop]: false,\n\t\t\t\t[LoggerType.log]: false,\n\t\t\t\t[LoggerType.info]: false,\n\t\t\t\t[LoggerType.warn]: false,\n\t\t\t\t[LoggerType.error]: true,\n\t\t\t\t[LoggerType.trace]: false,\n\t\t\t})\n\t\t}\n\n\t\treturn this._logger\n\t}\n\n\tset(name: string, value: any): void {\n\t\tif (typeof window.localStorage === 'undefined') {\n\t\t\tthis.getLogger().error(new Error('undefined window.localStorage'))\n\t\t\treturn\n\t\t}\n\n\t\tif (typeof value !== 'string' && value) {\n\t\t\tvalue = JSON.stringify(value)\n\t\t}\n\n\t\twindow.localStorage.setItem(this._getKey(name), value)\n\t}\n\n\tget(name: string, defaultValue: any): any {\n\t\tif (typeof window.localStorage === 'undefined') {\n\t\t\treturn defaultValue || null\n\t\t}\n\n\t\tconst result = window.localStorage.getItem(this._getKey(name))\n\t\tif (result === null) {\n\t\t\treturn defaultValue || null\n\t\t}\n\n\t\treturn JSON.parse(result)\n\t}\n\n\tremove(name: string): void {\n\t\tif (typeof window.localStorage === 'undefined') {\n\t\t\tthis.getLogger().error(new Error('undefined window.localStorage'))\n\t\t\treturn\n\t\t}\n\n\t\treturn window.localStorage.removeItem(this._getKey(name))\n\t}\n\n\tprivate _getKey(name: string): string {\n\t\treturn `@bitrix24/b24jssdk-pull-${this.userId}-${this.siteId}-${name}`\n\t}\n\n\tcompareKey(eventKey: string, userKey: string): boolean {\n\t\treturn eventKey === this._getKey(userKey)\n\t}\n}\n","export class ErrorNotConnected extends Error {\n\tconstructor(message: string) {\n\t\tsuper(message)\n\t\tthis.name = 'ErrorNotConnected'\n\t}\n}\n\nexport class ErrorTimeout extends Error {\n\tconstructor(message: string) {\n\t\tsuper(message)\n\t\tthis.name = 'ErrorTimeout'\n\t}\n}\n","import { LoggerBrowser, LoggerType } from '../logger/browser'\nimport { ErrorNotConnected, ErrorTimeout } from './errors'\nimport Type from '../tools/type'\nimport Text from '../tools/text'\nimport {\n\ttype JsonRpcRequest,\n\tListRpcError,\n\ttype RpcRequest,\n\ttype TypeConnector,\n\ttype TypeJsonRpcConfig,\n\ttype TypePullClientMessageBatch,\n} from '../types/pull'\nimport type {\n\tRpcCommand,\n\tRpcCommandResult,\n\tTypeRpcResponseAwaiters,\n} from '../types/pull'\n\nconst JSON_RPC_VERSION = '2.0'\n\nexport class JsonRpc {\n\tprivate _logger: null | LoggerBrowser = null\n\n\tprivate _connector: TypeConnector\n\tprivate _idCounter: number = 0\n\n\tprivate _handlers: Record<string, (params: any) => RpcCommandResult> = {}\n\n\tprivate _rpcResponseAwaiters: Map<number, TypeRpcResponseAwaiters> = new Map()\n\n\tconstructor(options: TypeJsonRpcConfig) {\n\t\tthis._connector = options.connector\n\n\t\tif (Type.isPlainObject(options.handlers)) {\n\t\t\tfor (const method in options.handlers) {\n\t\t\t\tthis.handle(method, options.handlers[method])\n\t\t\t}\n\t\t}\n\t}\n\n\tsetLogger(logger: LoggerBrowser): void {\n\t\tthis._logger = logger\n\t}\n\n\tgetLogger(): LoggerBrowser {\n\t\tif (null === this._logger) {\n\t\t\tthis._logger = LoggerBrowser.build(`NullLogger`)\n\n\t\t\tthis._logger.setConfig({\n\t\t\t\t[LoggerType.desktop]: false,\n\t\t\t\t[LoggerType.log]: false,\n\t\t\t\t[LoggerType.info]: false,\n\t\t\t\t[LoggerType.warn]: false,\n\t\t\t\t[LoggerType.error]: true,\n\t\t\t\t[LoggerType.trace]: false,\n\t\t\t})\n\t\t}\n\n\t\treturn this._logger\n\t}\n\n\t/**\n\t * @param {string} method\n\t * @param {function} handler\n\t */\n\thandle(method: string, handler: (params: any) => RpcCommandResult) {\n\t\tthis._handlers[method] = handler\n\t}\n\n\t/**\n\t * Sends RPC command to the server.\n\t *\n\t * @param {string} method Method name\n\t * @param {object} params\n\t * @param {int} timeout\n\t * @returns {Promise}\n\t */\n\tasync executeOutgoingRpcCommand(\n\t\tmethod: string,\n\t\tparams: object,\n\t\ttimeout: number = 5\n\t): Promise<any> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst request = this.createRequest(method, params)\n\n\t\t\tif (!this._connector.send(JSON.stringify(request))) {\n\t\t\t\treject(new ErrorNotConnected('websocket is not connected'))\n\t\t\t}\n\n\t\t\tconst timeoutHandler = setTimeout(() => {\n\t\t\t\tthis._rpcResponseAwaiters.delete(request.id)\n\t\t\t\treject(new ErrorTimeout('no response'))\n\t\t\t}, timeout * 1_000)\n\n\t\t\tthis._rpcResponseAwaiters.set(request.id, {\n\t\t\t\tresolve,\n\t\t\t\treject,\n\t\t\t\ttimeout: timeoutHandler,\n\t\t\t} as TypeRpcResponseAwaiters)\n\t\t})\n\t}\n\n\t/**\n\t * Executes array or rpc commands.\n\t * Returns an array of promises, each promise will be resolved individually.\n\t *\n\t * @param {JsonRpcRequest[]} batch\n\t * @returns {Promise[]}\n\t */\n\tprivate executeOutgoingRpcBatch(batch: JsonRpcRequest[]): Promise<any>[] {\n\t\tconst requests: RpcRequest[] = []\n\t\tconst promises: Promise<any>[] = []\n\n\t\t// eslint-disable-next-line\n\t\tbatch.forEach(({ method, params, id }) => {\n\t\t\tconst request = this.createRequest(method, params, id)\n\t\t\trequests.push(request)\n\t\t\tpromises.push(\n\t\t\t\tnew Promise((resolve, reject) =>\n\t\t\t\t\tthis._rpcResponseAwaiters.set(request.id, {\n\t\t\t\t\t\tresolve,\n\t\t\t\t\t\treject,\n\t\t\t\t\t} as TypeRpcResponseAwaiters)\n\t\t\t\t)\n\t\t\t)\n\t\t})\n\n\t\tthis._connector.send(JSON.stringify(requests))\n\t\treturn promises\n\t}\n\n\tprivate processRpcResponse(response: RpcCommandResult): void {\n\t\tif (\n\t\t\t'id' in response &&\n\t\t\tthis._rpcResponseAwaiters.has(Number(response.id))\n\t\t) {\n\t\t\tconst awaiter = this._rpcResponseAwaiters.get(Number(response.id))\n\t\t\tif (awaiter) {\n\t\t\t\tif ('result' in response) {\n\t\t\t\t\tawaiter.resolve(response.result)\n\t\t\t\t} else if ('error' in response) {\n\t\t\t\t\tawaiter.reject(response?.error || 'error')\n\t\t\t\t} else {\n\t\t\t\t\tawaiter.reject('wrong response structure')\n\t\t\t\t}\n\n\t\t\t\tclearTimeout(awaiter.timeout)\n\t\t\t\tthis._rpcResponseAwaiters.delete(Number(response.id))\n\t\t\t}\n\n\t\t\treturn\n\t\t}\n\n\t\tthis.getLogger().error(\n\t\t\tnew Error(\n\t\t\t\t`${Text.getDateForLog()}: Pull: Received rpc response with unknown id`\n\t\t\t),\n\t\t\tresponse\n\t\t)\n\t}\n\n\tparseJsonRpcMessage(\n\t\tmessage: string\n\t): RpcCommandResult[] | RpcCommandResult | void {\n\t\tlet decoded\n\t\ttry {\n\t\t\tdecoded = JSON.parse(message)\n\t\t} catch (error) {\n\t\t\tthis.getLogger().error(\n\t\t\t\tnew Error(\n\t\t\t\t\t`${Text.getDateForLog()}: Pull: Could not decode json rpc message`\n\t\t\t\t),\n\t\t\t\terror\n\t\t\t)\n\n\t\t\treturn\n\t\t}\n\n\t\tif (Type.isArray(decoded)) {\n\t\t\treturn this.executeIncomingRpcBatch(decoded)\n\t\t} else if (Type.isJsonRpcRequest(decoded)) {\n\t\t\treturn this.executeIncomingRpcCommand(decoded)\n\t\t} else if (Type.isJsonRpcResponse(decoded)) {\n\t\t\treturn this.processRpcResponse(decoded)\n\t\t} else {\n\t\t\tthis.getLogger().error(\n\t\t\t\tnew Error(`${Text.getDateForLog()}: Pull: unknown rpc packet`),\n\t\t\t\tdecoded\n\t\t\t)\n\t\t}\n\t}\n\n\t/**\n\t * Executes RPC command, received from the server\n\t *\n\t * @param {string} method\n\t * @param {object} params\n\t * @returns {object}\n\t */\n\tprivate executeIncomingRpcCommand({\n\t\tmethod,\n\t\tparams,\n\t}: RpcCommand): RpcCommandResult {\n\t\tif (method in this._handlers) {\n\t\t\treturn this._handlers[method].call(this, params || {})\n\t\t}\n\n\t\treturn {\n\t\t\tjsonrpc: JSON_RPC_VERSION,\n\t\t\terror: ListRpcError.MethodNotFound,\n\t\t} as RpcCommandResult\n\t}\n\n\tprivate executeIncomingRpcBatch(batch: RpcCommand[]): RpcCommandResult[] {\n\t\tconst result: RpcCommandResult[] = []\n\n\t\tfor (const command of batch) {\n\t\t\tif ('jsonrpc' in command) {\n\t\t\t\tif ('method' in command) {\n\t\t\t\t\tconst commandResult = this.executeIncomingRpcCommand(command)\n\t\t\t\t\tif (commandResult) {\n\t\t\t\t\t\tcommandResult['jsonrpc'] = JSON_RPC_VERSION\n\t\t\t\t\t\tcommandResult['id'] = command['id']\n\n\t\t\t\t\t\tresult.push(commandResult)\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis.processRpcResponse(command)\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.getLogger().error(\n\t\t\t\t\tnew Error(\n\t\t\t\t\t\t`${Text.getDateForLog()}: Pull: unknown rpc command in batch`\n\t\t\t\t\t),\n\t\t\t\t\tcommand\n\t\t\t\t)\n\n\t\t\t\tresult.push({\n\t\t\t\t\tjsonrpc: JSON_RPC_VERSION,\n\t\t\t\t\terror: ListRpcError.InvalidRequest,\n\t\t\t\t} as RpcCommandResult)\n\t\t\t}\n\t\t}\n\n\t\treturn result\n\t}\n\n\tprivate nextId(): number {\n\t\treturn ++this._idCounter\n\t}\n\n\tpublic createPublishRequest(\n\t\tmessageBatch: TypePullClientMessageBatch[]\n\t): RpcRequest[] {\n\t\treturn messageBatch.map((message) => this.createRequest('publish', message))\n\t}\n\n\tprivate createRequest(method: string, params: any, id?: number): RpcRequest {\n\t\tif (!id) {\n\t\t\tid = this.nextId()\n\t\t}\n\n\t\treturn {\n\t\t\tjsonrpc: JSON_RPC_VERSION,\n\t\t\tmethod,\n\t\t\tparams,\n\t\t\tid,\n\t\t} as RpcRequest\n\t}\n}\n","import { LoggerBrowser, LoggerType } from '../logger/browser'\nimport Type from '../tools/type'\nimport Text from '../tools/text'\nimport { StorageManager } from './storage-manager'\nimport {\n\tLsKeys,\n\ttype SharedConfigCallbacks,\n\ttype SharedConfigParams,\n\ttype TypeStorageManager,\n} from '../types/pull'\n\nexport class SharedConfig {\n\tprivate _logger: null | LoggerBrowser = null\n\tprivate readonly _storage: TypeStorageManager\n\tprivate _ttl: number = 24 * 60 * 60\n\tprivate _callbacks: SharedConfigCallbacks\n\n\tconstructor(params: SharedConfigParams = {}) {\n\t\tparams = params || {}\n\t\tthis._storage = params.storage || new StorageManager()\n\n\t\tthis._callbacks = {\n\t\t\tonWebSocketBlockChanged: Type.isFunction(params.onWebSocketBlockChanged)\n\t\t\t\t? params.onWebSocketBlockChanged\n\t\t\t\t: () => {},\n\t\t} as SharedConfigCallbacks\n\n\t\tif (this._storage) {\n\t\t\twindow.addEventListener('storage', this.onLocalStorageSet.bind(this))\n\t\t}\n\t}\n\n\tsetLogger(logger: LoggerBrowser): void {\n\t\tthis._logger = logger\n\t}\n\n\tgetLogger(): LoggerBrowser {\n\t\tif (null === this._logger) {\n\t\t\tthis._logger = LoggerBrowser.build(`NullLogger`)\n\n\t\t\tthis._logger.setConfig({\n\t\t\t\t[LoggerType.desktop]: false,\n\t\t\t\t[LoggerType.log]: false,\n\t\t\t\t[LoggerType.info]: false,\n\t\t\t\t[LoggerType.warn]: false,\n\t\t\t\t[LoggerType.error]: true,\n\t\t\t\t[LoggerType.trace]: false,\n\t\t\t})\n\t\t}\n\n\t\treturn this._logger\n\t}\n\n\tprivate onLocalStorageSet(params: StorageEvent): void {\n\t\tif (\n\t\t\t(this._storage as StorageManager).compareKey(\n\t\t\t\tparams.key || '',\n\t\t\t\tLsKeys.WebsocketBlocked\n\t\t\t) &&\n\t\t\tparams.newValue !== params.oldValue\n\t\t) {\n\t\t\tthis._callbacks.onWebSocketBlockChanged({\n\t\t\t\tisWebSocketBlocked: this.isWebSocketBlocked(),\n\t\t\t})\n\t\t}\n\t}\n\n\tisWebSocketBlocked(): boolean {\n\t\tif (!this._storage) {\n\t\t\treturn false\n\t\t}\n\n\t\treturn this._storage.get(LsKeys.WebsocketBlocked, 0) > Date.now()\n\t}\n\n\tsetWebSocketBlocked(isWebSocketBlocked: boolean): boolean {\n\t\tif (!this._storage) {\n\t\t\treturn false\n\t\t}\n\n\t\ttry {\n\t\t\tthis._storage.set(\n\t\t\t\tLsKeys.WebsocketBlocked,\n\t\t\t\tisWebSocketBlocked ? Date.now() + this._ttl : 0\n\t\t\t)\n\t\t} catch (error) {\n\t\t\tthis.getLogger().error(\n\t\t\t\tnew Error(\n\t\t\t\t\t`${Text.getDateForLog()}: Pull: Could not save WS_blocked flag in local storage. Error: `\n\t\t\t\t),\n\t\t\t\terror\n\t\t\t)\n\n\t\t\treturn false\n\t\t}\n\n\t\treturn true\n\t}\n\n\tisLongPollingBlocked(): boolean {\n\t\tif (!this._storage) {\n\t\t\treturn false\n\t\t}\n\n\t\treturn this._storage.get(LsKeys.LongPollingBlocked, 0) > Date.now()\n\t}\n\n\tsetLongPollingBlocked(isLongPollingBlocked: boolean) {\n\t\tif (!this._storage) {\n\t\t\treturn false\n\t\t}\n\n\t\ttry {\n\t\t\tthis._storage.set(\n\t\t\t\tLsKeys.LongPollingBlocked,\n\t\t\t\tisLongPollingBlocked ? Date.now() + this._ttl : 0\n\t\t\t)\n\t\t} catch (error) {\n\t\t\tthis.getLogger().error(\n\t\t\t\tnew Error(\n\t\t\t\t\t`${Text.getDateForLog()}: Pull: Could not save LP_blocked flag in local storage. Error: `\n\t\t\t\t),\n\t\t\t\terror\n\t\t\t)\n\n\t\t\treturn false\n\t\t}\n\n\t\treturn true\n\t}\n\n\tisLoggingEnabled(): boolean {\n\t\tif (!this._storage) {\n\t\t\treturn false\n\t\t}\n\n\t\treturn this._storage.get(LsKeys.LoggingEnabled, 0) > this.getTimestamp()\n\t}\n\n\tsetLoggingEnabled(isLoggingEnabled: boolean): boolean {\n\t\tif (!this._storage) {\n\t\t\treturn false\n\t\t}\n\n\t\ttry {\n\t\t\tthis._storage.set(\n\t\t\t\tLsKeys.LoggingEnabled,\n\t\t\t\tisLoggingEnabled ? this.getTimestamp() + this._ttl : 0\n\t\t\t)\n\t\t} catch (error) {\n\t\t\tthis.getLogger().error(\n\t\t\t\tnew Error(`${Text.getDateForLog()}: LocalStorage error: `),\n\t\t\t\terror\n\t\t\t)\n\n\t\t\treturn false\n\t\t}\n\n\t\treturn true\n\t}\n\n\t// region Tools ////\n\tgetTimestamp(): number {\n\t\treturn Date.now()\n\t}\n\t// endregion ////\n}\n","import { LoggerBrowser, LoggerType } from '../logger/browser'\nimport { AjaxResult } from '../core/http/ajax-result'\nimport type {\n\tTypeChanel,\n\tTypeChannelManagerParams,\n\tTypePublicIdDescriptor,\n} from '../types/pull'\nimport type { TypeB24 } from '../types/b24'\nimport type { Payload } from '../types/payloads'\n\nexport class ChannelManager {\n\tprivate _logger: null | LoggerBrowser = null\n\tprivate _publicIds: Map<number, TypeChanel>\n\tprivate _restClient: TypeB24\n\tprivate _getPublicListMethod: string\n\n\tconstructor(params: TypeChannelManagerParams) {\n\t\tthis._publicIds = new Map()\n\n\t\tthis._restClient = params.b24\n\t\tthis._getPublicListMethod = params.getPublicListMethod\n\t}\n\n\tsetLogger(logger: LoggerBrowser): void {\n\t\tthis._logger = logger\n\t}\n\n\tgetLogger(): LoggerBrowser {\n\t\tif (null === this._logger) {\n\t\t\tthis._logger = LoggerBrowser.build(`NullLogger`)\n\n\t\t\tthis._logger.setConfig({\n\t\t\t\t[LoggerType.desktop]: false,\n\t\t\t\t[LoggerType.log]: false,\n\t\t\t\t[LoggerType.info]: false,\n\t\t\t\t[LoggerType.warn]: false,\n\t\t\t\t[LoggerType.error]: true,\n\t\t\t\t[LoggerType.trace]: false,\n\t\t\t})\n\t\t}\n\n\t\treturn this._logger\n\t}\n\n\t/**\n\t * @param {Array} users Array of user ids.\n\t * @return {Promise}\n\t */\n\tasync getPublicIds(users: number[]): Promise<Record<number, TypeChanel>> {\n\t\tconst now = new Date()\n\n\t\tconst result: Record<number, TypeChanel> = {}\n\t\tconst unknownUsers: number[] = []\n\n\t\tfor (const userId of users) {\n\t\t\tconst chanel = this._publicIds.get(userId)\n\n\t\t\tif (chanel && chanel.end > now) {\n\t\t\t\tresult[chanel.userId] = chanel\n\t\t\t} else {\n\t\t\t\tunknownUsers.push(userId)\n\t\t\t}\n\t\t}\n\n\t\tif (unknownUsers.length === 0) {\n\t\t\treturn Promise.resolve(result)\n\t\t}\n\n\t\t/**\n\t\t * @memo we not use Promise.reject()\n\t\t */\n\t\treturn new Promise((resolve) => {\n\t\t\tthis._restClient\n\t\t\t\t.callMethod(this._getPublicListMethod, {\n\t\t\t\t\tusers: unknownUsers,\n\t\t\t\t})\n\t\t\t\t.then((response: AjaxResult) => {\n\t\t\t\t\tconst data = (response.getData() as Payload<TypePublicIdDescriptor>)\n\t\t\t\t\t\t.result\n\n\t\t\t\t\t/**\n\t\t\t\t\t * @memo test this\n\t\t\t\t\t */\n\t\t\t\t\tthis.setPublicIds(Object.values(data))\n\n\t\t\t\t\tfor (const userId of unknownUsers) {\n\t\t\t\t\t\tconst chanel = this._publicIds.get(userId)\n\t\t\t\t\t\tif (chanel) {\n\t\t\t\t\t\t\tresult[chanel.userId] = chanel\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tresolve(result)\n\t\t\t\t})\n\t\t\t\t.catch((error: Error | string) => {\n\t\t\t\t\tthis.getLogger().error(error)\n\t\t\t\t\treturn resolve({})\n\t\t\t\t})\n\t\t})\n\t}\n\n\t/**\n\t * @param {TypePublicIdDescriptor[]} publicIds\n\t */\n\tpublic setPublicIds(publicIds: TypePublicIdDescriptor[]): void {\n\t\t// eslint-disable-next-line unicorn/no-array-for-each\n\t\tpublicIds.forEach((publicIdDescriptor: TypePublicIdDescriptor) => {\n\t\t\tconst userId = Number(publicIdDescriptor.user_id)\n\t\t\tthis._publicIds.set(userId, {\n\t\t\t\tuserId: userId,\n\t\t\t\tpublicId: publicIdDescriptor.public_id,\n\t\t\t\tsignature: publicIdDescriptor.signature,\n\t\t\t\tstart: new Date(publicIdDescriptor.start),\n\t\t\t\tend: new Date(publicIdDescriptor.end),\n\t\t\t} as TypeChanel)\n\t\t})\n\t}\n}\n","/*!\n * protobuf.js v6.8.6 (c) 2016, daniel wirtz\n * compiled mon, 26 feb 2018 11:35:34 utc\n * licensed under the bsd-3-clause license\n * see: https://github.com/dcodeio/protobuf.js for details\n *\n * Modify a list for integration with Bitrix Framework:\n * - removed integration with RequireJS and AMD package builders;\n */\n(function(undefined){\"use strict\";(function prelude(modules, cache, entries) {\n\n    // This is the prelude used to bundle protobuf.js for the browser. Wraps up the CommonJS\n    // sources through a conflict-free require shim and is again wrapped within an iife that\n    // provides a unified `global` and a minification-friendly `undefined` var plus a global\n    // \"use strict\" directive so that minification can remove the directives of each module.\n\n    function $require(name) {\n        var $module = cache[name];\n        if (!$module)\n            modules[name][0].call($module = cache[name] = { exports: {} }, $require, $module, $module.exports);\n        return $module.exports;\n    }\n\n    // Expose globally (__not__)\n    var protobuf = $require(entries[0]);\n\n    // Be nice to AMD\n    /*/\n    if (typeof define === \"function\" && define.amd)\n        define([\"long\"], function(Long) {\n            if (Long && Long.isLong) {\n                protobuf.util.Long = Long;\n                protobuf.configure();\n            }\n            return protobuf;\n        });\n    //*/\n\n    // Be nice to CommonJS\n    //*/\n    if (typeof module === \"object\" && module && module.exports)\n        module.exports = protobuf;\n    //*/\n\n})/* end of prelude */({1:[function(require,module,exports){\n\"use strict\";\nmodule.exports = asPromise;\n\n/**\n * Callback as used by {@link util.asPromise}.\n * @typedef asPromiseCallback\n * @type {function}\n * @param {Error|null} error Error, if any\n * @param {...*} params Additional arguments\n * @returns {undefined}\n */\n\n/**\n * Returns a promise from a node-style callback function.\n * @memberof util\n * @param {asPromiseCallback} fn Function to call\n * @param {*} ctx Function context\n * @param {...*} params Function arguments\n * @returns {Promise<*>} Promisified function\n */\nfunction asPromise(fn, ctx/*, varargs */) {\n    var params  = new Array(arguments.length - 1),\n        offset  = 0,\n        index   = 2,\n        pending = true;\n    while (index < arguments.length)\n        params[offset++] = arguments[index++];\n    return new Promise(function executor(resolve, reject) {\n        params[offset] = function callback(err/*, varargs */) {\n            if (pending) {\n                pending = false;\n                if (err)\n                    reject(err);\n                else {\n                    var params = new Array(arguments.length - 1),\n                        offset = 0;\n                    while (offset < params.length)\n                        params[offset++] = arguments[offset];\n                    resolve.apply(null, params);\n                }\n            }\n        };\n        try {\n            fn.apply(ctx || null, params);\n        } catch (err) {\n            if (pending) {\n                pending = false;\n                reject(err);\n            }\n        }\n    });\n}\n\n},{}],2:[function(require,module,exports){\n\"use strict\";\n\n/**\n * A minimal base64 implementation for number arrays.\n * @memberof util\n * @namespace\n */\nvar base64 = exports;\n\n/**\n * Calculates the byte length of a base64 encoded string.\n * @param {string} string Base64 encoded string\n * @returns {number} Byte length\n */\nbase64.length = function length(string) {\n    var p = string.length;\n    if (!p)\n        return 0;\n    var n = 0;\n    while (--p % 4 > 1 && string.charAt(p) === \"=\")\n        ++n;\n    return Math.ceil(string.length * 3) / 4 - n;\n};\n\n// Base64 encoding table\nvar b64 = new Array(64);\n\n// Base64 decoding table\nvar s64 = new Array(123);\n\n// 65..90, 97..122, 48..57, 43, 47\nfor (var i = 0; i < 64;)\n    s64[b64[i] = i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i - 59 | 43] = i++;\n\n/**\n * Encodes a buffer to a base64 encoded string.\n * @param {Uint8Array} buffer Source buffer\n * @param {number} start Source start\n * @param {number} end Source end\n * @returns {string} Base64 encoded string\n */\nbase64.encode = function encode(buffer, start, end) {\n    var parts = null,\n        chunk = [];\n    var i = 0, // output index\n        j = 0, // goto index\n        t;     // temporary\n    while (start < end) {\n        var b = buffer[start++];\n        switch (j) {\n            case 0:\n                chunk[i++] = b64[b >> 2];\n                t = (b & 3) << 4;\n                j = 1;\n                break;\n            case 1:\n                chunk[i++] = b64[t | b >> 4];\n                t = (b & 15) << 2;\n                j = 2;\n                break;\n            case 2:\n                chunk[i++] = b64[t | b >> 6];\n                chunk[i++] = b64[b & 63];\n                j = 0;\n                break;\n        }\n        if (i > 8191) {\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\n            i = 0;\n        }\n    }\n    if (j) {\n        chunk[i++] = b64[t];\n        chunk[i++] = 61;\n        if (j === 1)\n            chunk[i++] = 61;\n    }\n    if (parts) {\n        if (i)\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\n        return parts.join(\"\");\n    }\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\n};\n\nvar invalidEncoding = \"invalid encoding\";\n\n/**\n * Decodes a base64 encoded string to a buffer.\n * @param {string} string Source string\n * @param {Uint8Array} buffer Destination buffer\n * @param {number} offset Destination offset\n * @returns {number} Number of bytes written\n * @throws {Error} If encoding is invalid\n */\nbase64.decode = function decode(string, buffer, offset) {\n    var start = offset;\n    var j = 0, // goto index\n        t;     // temporary\n    for (var i = 0; i < string.length;) {\n        var c = string.charCodeAt(i++);\n        if (c === 61 && j > 1)\n            break;\n        if ((c = s64[c]) === undefined)\n            throw Error(invalidEncoding);\n        switch (j) {\n            case 0:\n                t = c;\n                j = 1;\n                break;\n            case 1:\n                buffer[offset++] = t << 2 | (c & 48) >> 4;\n                t = c;\n                j = 2;\n                break;\n            case 2:\n                buffer[offset++] = (t & 15) << 4 | (c & 60) >> 2;\n                t = c;\n                j = 3;\n                break;\n            case 3:\n                buffer[offset++] = (t & 3) << 6 | c;\n                j = 0;\n                break;\n        }\n    }\n    if (j === 1)\n        throw Error(invalidEncoding);\n    return offset - start;\n};\n\n/**\n * Tests if the specified string appears to be base64 encoded.\n * @param {string} string String to test\n * @returns {boolean} `true` if probably base64 encoded, otherwise false\n */\nbase64.test = function test(string) {\n    return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(string);\n};\n\n},{}],3:[function(require,module,exports){\n\"use strict\";\nmodule.exports = codegen;\n\n/**\n * Begins generating a function.\n * @memberof util\n * @param {string[]} functionParams Function parameter names\n * @param {string} [functionName] Function name if not anonymous\n * @returns {Codegen} Appender that appends code to the function's body\n */\nfunction codegen(functionParams, functionName) {\n\n    /* istanbul ignore if */\n    if (typeof functionParams === \"string\") {\n        functionName = functionParams;\n        functionParams = undefined;\n    }\n\n    var body = [];\n\n    /**\n     * Appends code to the function's body or finishes generation.\n     * @typedef Codegen\n     * @type {function}\n     * @param {string|Object.<string,*>} [formatStringOrScope] Format string or, to finish the function, an object of additional scope variables, if any\n     * @param {...*} [formatParams] Format parameters\n     * @returns {Codegen|Function} Itself or the generated function if finished\n     * @throws {Error} If format parameter counts do not match\n     */\n\n    function Codegen(formatStringOrScope) {\n        // note that explicit array handling below makes this ~50% faster\n\n        // finish the function\n        if (typeof formatStringOrScope !== \"string\") {\n            var source = toString();\n            if (codegen.verbose)\n                console.log(\"codegen: \" + source); // eslint-disable-line no-console\n            source = \"return \" + source;\n            if (formatStringOrScope) {\n                var scopeKeys   = Object.keys(formatStringOrScope),\n                    scopeParams = new Array(scopeKeys.length + 1),\n                    scopeValues = new Array(scopeKeys.length),\n                    scopeOffset = 0;\n                while (scopeOffset < scopeKeys.length) {\n                    scopeParams[scopeOffset] = scopeKeys[scopeOffset];\n                    scopeValues[scopeOffset] = formatStringOrScope[scopeKeys[scopeOffset++]];\n                }\n                scopeParams[scopeOffset] = source;\n                return Function.apply(null, scopeParams).apply(null, scopeValues); // eslint-disable-line no-new-func\n            }\n            return Function(source)(); // eslint-disable-line no-new-func\n        }\n\n        // otherwise append to body\n        var formatParams = new Array(arguments.length - 1),\n            formatOffset = 0;\n        while (formatOffset < formatParams.length)\n            formatParams[formatOffset] = arguments[++formatOffset];\n        formatOffset = 0;\n        formatStringOrScope = formatStringOrScope.replace(/%([%dfijs])/g, function replace($0, $1) {\n            var value = formatParams[formatOffset++];\n            switch ($1) {\n                case \"d\": case \"f\": return String(Number(value));\n                case \"i\": return String(Math.floor(value));\n                case \"j\": return JSON.stringify(value);\n                case \"s\": return String(value);\n            }\n            return \"%\";\n        });\n        if (formatOffset !== formatParams.length)\n            throw Error(\"parameter count mismatch\");\n        body.push(formatStringOrScope);\n        return Codegen;\n    }\n\n    function toString(functionNameOverride) {\n        return \"function \" + (functionNameOverride || functionName || \"\") + \"(\" + (functionParams && functionParams.join(\",\") || \"\") + \"){\\n  \" + body.join(\"\\n  \") + \"\\n}\";\n    }\n\n    Codegen.toString = toString;\n    return Codegen;\n}\n\n/**\n * Begins generating a function.\n * @memberof util\n * @function codegen\n * @param {string} [functionName] Function name if not anonymous\n * @returns {Codegen} Appender that appends code to the function's body\n * @variation 2\n */\n\n/**\n * When set to `true`, codegen will log generated code to console. Useful for debugging.\n * @name util.codegen.verbose\n * @type {boolean}\n */\ncodegen.verbose = false;\n\n},{}],4:[function(require,module,exports){\n\"use strict\";\nmodule.exports = EventEmitter;\n\n/**\n * Constructs a new event emitter instance.\n * @classdesc A minimal event emitter.\n * @memberof util\n * @constructor\n */\nfunction EventEmitter() {\n\n    /**\n     * Registered listeners.\n     * @type {Object.<string,*>}\n     * @private\n     */\n    this._listeners = {};\n}\n\n/**\n * Registers an event listener.\n * @param {string} evt Event name\n * @param {function} fn Listener\n * @param {*} [ctx] Listener context\n * @returns {util.EventEmitter} `this`\n */\nEventEmitter.prototype.on = function on(evt, fn, ctx) {\n    (this._listeners[evt] || (this._listeners[evt] = [])).push({\n        fn  : fn,\n        ctx : ctx || this\n    });\n    return this;\n};\n\n/**\n * Removes an event listener or any matching listeners if arguments are omitted.\n * @param {string} [evt] Event name. Removes all listeners if omitted.\n * @param {function} [fn] Listener to remove. Removes all listeners of `evt` if omitted.\n * @returns {util.EventEmitter} `this`\n */\nEventEmitter.prototype.off = function off(evt, fn) {\n    if (evt === undefined)\n        this._listeners = {};\n    else {\n        if (fn === undefined)\n            this._listeners[evt] = [];\n        else {\n            var listeners = this._listeners[evt];\n            for (var i = 0; i < listeners.length;)\n                if (listeners[i].fn === fn)\n                    listeners.splice(i, 1);\n                else\n                    ++i;\n        }\n    }\n    return this;\n};\n\n/**\n * Emits an event by calling its listeners with the specified arguments.\n * @param {string} evt Event name\n * @param {...*} args Arguments\n * @returns {util.EventEmitter} `this`\n */\nEventEmitter.prototype.emit = function emit(evt) {\n    var listeners = this._listeners[evt];\n    if (listeners) {\n        var args = [],\n            i = 1;\n        for (; i < arguments.length;)\n            args.push(arguments[i++]);\n        for (i = 0; i < listeners.length;)\n            listeners[i].fn.apply(listeners[i++].ctx, args);\n    }\n    return this;\n};\n\n},{}],5:[function(require,module,exports){\n\"use strict\";\nmodule.exports = fetch;\n\nvar asPromise = require(1),\n    inquire   = require(7);\n\nvar fs = inquire(\"fs\");\n\n/**\n * Node-style callback as used by {@link util.fetch}.\n * @typedef FetchCallback\n * @type {function}\n * @param {?Error} error Error, if any, otherwise `null`\n * @param {string} [contents] File contents, if there hasn't been an error\n * @returns {undefined}\n */\n\n/**\n * Options as used by {@link util.fetch}.\n * @typedef FetchOptions\n * @type {Object}\n * @property {boolean} [binary=false] Whether expecting a binary response\n * @property {boolean} [xhr=false] If `true`, forces the use of XMLHttpRequest\n */\n\n/**\n * Fetches the contents of a file.\n * @memberof util\n * @param {string} filename File path or url\n * @param {FetchOptions} options Fetch options\n * @param {FetchCallback} callback Callback function\n * @returns {undefined}\n */\nfunction fetch(filename, options, callback) {\n    if (typeof options === \"function\") {\n        callback = options;\n        options = {};\n    } else if (!options)\n        options = {};\n\n    if (!callback)\n        return asPromise(fetch, this, filename, options); // eslint-disable-line no-invalid-this\n\n    // if a node-like filesystem is present, try it first but fall back to XHR if nothing is found.\n    if (!options.xhr && fs && fs.readFile)\n        return fs.readFile(filename, function fetchReadFileCallback(err, contents) {\n            return err && typeof XMLHttpRequest !== \"undefined\"\n                ? fetch.xhr(filename, options, callback)\n                : err\n                ? callback(err)\n                : callback(null, options.binary ? contents : contents.toString(\"utf8\"));\n        });\n\n    // use the XHR version otherwise.\n    return fetch.xhr(filename, options, callback);\n}\n\n/**\n * Fetches the contents of a file.\n * @name util.fetch\n * @function\n * @param {string} path File path or url\n * @param {FetchCallback} callback Callback function\n * @returns {undefined}\n * @variation 2\n */\n\n/**\n * Fetches the contents of a file.\n * @name util.fetch\n * @function\n * @param {string} path File path or url\n * @param {FetchOptions} [options] Fetch options\n * @returns {Promise<string|Uint8Array>} Promise\n * @variation 3\n */\n\n/**/\nfetch.xhr = function fetch_xhr(filename, options, callback) {\n    var xhr = new XMLHttpRequest();\n    xhr.onreadystatechange /* works everywhere */ = function fetchOnReadyStateChange() {\n\n        if (xhr.readyState !== 4)\n            return undefined;\n\n        // local cors security errors return status 0 / empty string, too. afaik this cannot be\n        // reliably distinguished from an actually empty file for security reasons. feel free\n        // to send a pull request if you are aware of a solution.\n        if (xhr.status !== 0 && xhr.status !== 200)\n            return callback(Error(\"status \" + xhr.status));\n\n        // if binary data is expected, make sure that some sort of array is returned, even if\n        // ArrayBuffers are not supported. the binary string fallback, however, is unsafe.\n        if (options.binary) {\n            var buffer = xhr.response;\n            if (!buffer) {\n                buffer = [];\n                for (var i = 0; i < xhr.responseText.length; ++i)\n                    buffer.push(xhr.responseText.charCodeAt(i) & 255);\n            }\n            return callback(null, typeof Uint8Array !== \"undefined\" ? new Uint8Array(buffer) : buffer);\n        }\n        return callback(null, xhr.responseText);\n    };\n\n    if (options.binary) {\n        // ref: https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/Sending_and_Receiving_Binary_Data#Receiving_binary_data_in_older_browsers\n        if (\"overrideMimeType\" in xhr)\n            xhr.overrideMimeType(\"text/plain; charset=x-user-defined\");\n        xhr.responseType = \"arraybuffer\";\n    }\n\n    xhr.open(\"GET\", filename);\n    xhr.send();\n};\n\n},{\"1\":1,\"7\":7}],6:[function(require,module,exports){\n\"use strict\";\n\nmodule.exports = factory(factory);\n\n/**\n * Reads / writes floats / doubles from / to buffers.\n * @name util.float\n * @namespace\n */\n\n/**\n * Writes a 32 bit float to a buffer using little endian byte order.\n * @name util.float.writeFloatLE\n * @function\n * @param {number} val Value to write\n * @param {Uint8Array} buf Target buffer\n * @param {number} pos Target buffer offset\n * @returns {undefined}\n */\n\n/**\n * Writes a 32 bit float to a buffer using big endian byte order.\n * @name util.float.writeFloatBE\n * @function\n * @param {number} val Value to write\n * @param {Uint8Array} buf Target buffer\n * @param {number} pos Target buffer offset\n * @returns {undefined}\n */\n\n/**\n * Reads a 32 bit float from a buffer using little endian byte order.\n * @name util.float.readFloatLE\n * @function\n * @param {Uint8Array} buf Source buffer\n * @param {number} pos Source buffer offset\n * @returns {number} Value read\n */\n\n/**\n * Reads a 32 bit float from a buffer using big endian byte order.\n * @name util.float.readFloatBE\n * @function\n * @param {Uint8Array} buf Source buffer\n * @param {number} pos Source buffer offset\n * @returns {number} Value read\n */\n\n/**\n * Writes a 64 bit double to a buffer using little endian byte order.\n * @name util.float.writeDoubleLE\n * @function\n * @param {number} val Value to write\n * @param {Uint8Array} buf Target buffer\n * @param {number} pos Target buffer offset\n * @returns {undefined}\n */\n\n/**\n * Writes a 64 bit double to a buffer using big endian byte order.\n * @name util.float.writeDoubleBE\n * @function\n * @param {number} val Value to write\n * @param {Uint8Array} buf Target buffer\n * @param {number} pos Target buffer offset\n * @returns {undefined}\n */\n\n/**\n * Reads a 64 bit double from a buffer using little endian byte order.\n * @name util.float.readDoubleLE\n * @function\n * @param {Uint8Array} buf Source buffer\n * @param {number} pos Source buffer offset\n * @returns {number} Value read\n */\n\n/**\n * Reads a 64 bit double from a buffer using big endian byte order.\n * @name util.float.readDoubleBE\n * @function\n * @param {Uint8Array} buf Source buffer\n * @param {number} pos Source buffer offset\n * @returns {number} Value read\n */\n\n// Factory function for the purpose of node-based testing in modified global environments\nfunction factory(exports) {\n\n    // float: typed array\n    if (typeof Float32Array !== \"undefined\") (function() {\n\n        var f32 = new Float32Array([ -0 ]),\n            f8b = new Uint8Array(f32.buffer),\n            le  = f8b[3] === 128;\n\n        function writeFloat_f32_cpy(val, buf, pos) {\n            f32[0] = val;\n            buf[pos    ] = f8b[0];\n            buf[pos + 1] = f8b[1];\n            buf[pos + 2] = f8b[2];\n            buf[pos + 3] = f8b[3];\n        }\n\n        function writeFloat_f32_rev(val, buf, pos) {\n            f32[0] = val;\n            buf[pos    ] = f8b[3];\n            buf[pos + 1] = f8b[2];\n            buf[pos + 2] = f8b[1];\n            buf[pos + 3] = f8b[0];\n        }\n\n        /* istanbul ignore next */\n        exports.writeFloatLE = le ? writeFloat_f32_cpy : writeFloat_f32_rev;\n        /* istanbul ignore next */\n        exports.writeFloatBE = le ? writeFloat_f32_rev : writeFloat_f32_cpy;\n\n        function readFloat_f32_cpy(buf, pos) {\n            f8b[0] = buf[pos    ];\n            f8b[1] = buf[pos + 1];\n            f8b[2] = buf[pos + 2];\n            f8b[3] = buf[pos + 3];\n            return f32[0];\n        }\n\n        function readFloat_f32_rev(buf, pos) {\n            f8b[3] = buf[pos    ];\n            f8b[2] = buf[pos + 1];\n            f8b[1] = buf[pos + 2];\n            f8b[0] = buf[pos + 3];\n            return f32[0];\n        }\n\n        /* istanbul ignore next */\n        exports.readFloatLE = le ? readFloat_f32_cpy : readFloat_f32_rev;\n        /* istanbul ignore next */\n        exports.readFloatBE = le ? readFloat_f32_rev : readFloat_f32_cpy;\n\n    // float: ieee754\n    })(); else (function() {\n\n        function writeFloat_ieee754(writeUint, val, buf, pos) {\n            var sign = val < 0 ? 1 : 0;\n            if (sign)\n                val = -val;\n            if (val === 0)\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos);\n            else if (isNaN(val))\n                writeUint(2143289344, buf, pos);\n            else if (val > 3.4028234663852886e+38) // +-Infinity\n                writeUint((sign << 31 | 2139095040) >>> 0, buf, pos);\n            else if (val < 1.1754943508222875e-38) // denormal\n                writeUint((sign << 31 | Math.round(val / 1.401298464324817e-45)) >>> 0, buf, pos);\n            else {\n                var exponent = Math.floor(Math.log(val) / Math.LN2),\n                    mantissa = Math.round(val * Math.pow(2, -exponent) * 8388608) & 8388607;\n                writeUint((sign << 31 | exponent + 127 << 23 | mantissa) >>> 0, buf, pos);\n            }\n        }\n\n        exports.writeFloatLE = writeFloat_ieee754.bind(null, writeUintLE);\n        exports.writeFloatBE = writeFloat_ieee754.bind(null, writeUintBE);\n\n        function readFloat_ieee754(readUint, buf, pos) {\n            var uint = readUint(buf, pos),\n                sign = (uint >> 31) * 2 + 1,\n                exponent = uint >>> 23 & 255,\n                mantissa = uint & 8388607;\n            return exponent === 255\n                ? mantissa\n                ? NaN\n                : sign * Infinity\n                : exponent === 0 // denormal\n                ? sign * 1.401298464324817e-45 * mantissa\n                : sign * Math.pow(2, exponent - 150) * (mantissa + 8388608);\n        }\n\n        exports.readFloatLE = readFloat_ieee754.bind(null, readUintLE);\n        exports.readFloatBE = readFloat_ieee754.bind(null, readUintBE);\n\n    })();\n\n    // double: typed array\n    if (typeof Float64Array !== \"undefined\") (function() {\n\n        var f64 = new Float64Array([-0]),\n            f8b = new Uint8Array(f64.buffer),\n            le  = f8b[7] === 128;\n\n        function writeDouble_f64_cpy(val, buf, pos) {\n            f64[0] = val;\n            buf[pos    ] = f8b[0];\n            buf[pos + 1] = f8b[1];\n            buf[pos + 2] = f8b[2];\n            buf[pos + 3] = f8b[3];\n            buf[pos + 4] = f8b[4];\n            buf[pos + 5] = f8b[5];\n            buf[pos + 6] = f8b[6];\n            buf[pos + 7] = f8b[7];\n        }\n\n        function writeDouble_f64_rev(val, buf, pos) {\n            f64[0] = val;\n            buf[pos    ] = f8b[7];\n            buf[pos + 1] = f8b[6];\n            buf[pos + 2] = f8b[5];\n            buf[pos + 3] = f8b[4];\n            buf[pos + 4] = f8b[3];\n            buf[pos + 5] = f8b[2];\n            buf[pos + 6] = f8b[1];\n            buf[pos + 7] = f8b[0];\n        }\n\n        /* istanbul ignore next */\n        exports.writeDoubleLE = le ? writeDouble_f64_cpy : writeDouble_f64_rev;\n        /* istanbul ignore next */\n        exports.writeDoubleBE = le ? writeDouble_f64_rev : writeDouble_f64_cpy;\n\n        function readDouble_f64_cpy(buf, pos) {\n            f8b[0] = buf[pos    ];\n            f8b[1] = buf[pos + 1];\n            f8b[2] = buf[pos + 2];\n            f8b[3] = buf[pos + 3];\n            f8b[4] = buf[pos + 4];\n            f8b[5] = buf[pos + 5];\n            f8b[6] = buf[pos + 6];\n            f8b[7] = buf[pos + 7];\n            return f64[0];\n        }\n\n        function readDouble_f64_rev(buf, pos) {\n            f8b[7] = buf[pos    ];\n            f8b[6] = buf[pos + 1];\n            f8b[5] = buf[pos + 2];\n            f8b[4] = buf[pos + 3];\n            f8b[3] = buf[pos + 4];\n            f8b[2] = buf[pos + 5];\n            f8b[1] = buf[pos + 6];\n            f8b[0] = buf[pos + 7];\n            return f64[0];\n        }\n\n        /* istanbul ignore next */\n        exports.readDoubleLE = le ? readDouble_f64_cpy : readDouble_f64_rev;\n        /* istanbul ignore next */\n        exports.readDoubleBE = le ? readDouble_f64_rev : readDouble_f64_cpy;\n\n    // double: ieee754\n    })(); else (function() {\n\n        function writeDouble_ieee754(writeUint, off0, off1, val, buf, pos) {\n            var sign = val < 0 ? 1 : 0;\n            if (sign)\n                val = -val;\n            if (val === 0) {\n                writeUint(0, buf, pos + off0);\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos + off1);\n            } else if (isNaN(val)) {\n                writeUint(0, buf, pos + off0);\n                writeUint(2146959360, buf, pos + off1);\n            } else if (val > 1.7976931348623157e+308) { // +-Infinity\n                writeUint(0, buf, pos + off0);\n                writeUint((sign << 31 | 2146435072) >>> 0, buf, pos + off1);\n            } else {\n                var mantissa;\n                if (val < 2.2250738585072014e-308) { // denormal\n                    mantissa = val / 5e-324;\n                    writeUint(mantissa >>> 0, buf, pos + off0);\n                    writeUint((sign << 31 | mantissa / 4294967296) >>> 0, buf, pos + off1);\n                } else {\n                    var exponent = Math.floor(Math.log(val) / Math.LN2);\n                    if (exponent === 1024)\n                        exponent = 1023;\n                    mantissa = val * Math.pow(2, -exponent);\n                    writeUint(mantissa * 4503599627370496 >>> 0, buf, pos + off0);\n                    writeUint((sign << 31 | exponent + 1023 << 20 | mantissa * 1048576 & 1048575) >>> 0, buf, pos + off1);\n                }\n            }\n        }\n\n        exports.writeDoubleLE = writeDouble_ieee754.bind(null, writeUintLE, 0, 4);\n        exports.writeDoubleBE = writeDouble_ieee754.bind(null, writeUintBE, 4, 0);\n\n        function readDouble_ieee754(readUint, off0, off1, buf, pos) {\n            var lo = readUint(buf, pos + off0),\n                hi = readUint(buf, pos + off1);\n            var sign = (hi >> 31) * 2 + 1,\n                exponent = hi >>> 20 & 2047,\n                mantissa = 4294967296 * (hi & 1048575) + lo;\n            return exponent === 2047\n                ? mantissa\n                ? NaN\n                : sign * Infinity\n                : exponent === 0 // denormal\n                ? sign * 5e-324 * mantissa\n                : sign * Math.pow(2, exponent - 1075) * (mantissa + 4503599627370496);\n        }\n\n        exports.readDoubleLE = readDouble_ieee754.bind(null, readUintLE, 0, 4);\n        exports.readDoubleBE = readDouble_ieee754.bind(null, readUintBE, 4, 0);\n\n    })();\n\n    return exports;\n}\n\n// uint helpers\n\nfunction writeUintLE(val, buf, pos) {\n    buf[pos    ] =  val        & 255;\n    buf[pos + 1] =  val >>> 8  & 255;\n    buf[pos + 2] =  val >>> 16 & 255;\n    buf[pos + 3] =  val >>> 24;\n}\n\nfunction writeUintBE(val, buf, pos) {\n    buf[pos    ] =  val >>> 24;\n    buf[pos + 1] =  val >>> 16 & 255;\n    buf[pos + 2] =  val >>> 8  & 255;\n    buf[pos + 3] =  val        & 255;\n}\n\nfunction readUintLE(buf, pos) {\n    return (buf[pos    ]\n          | buf[pos + 1] << 8\n          | buf[pos + 2] << 16\n          | buf[pos + 3] << 24) >>> 0;\n}\n\nfunction readUintBE(buf, pos) {\n    return (buf[pos    ] << 24\n          | buf[pos + 1] << 16\n          | buf[pos + 2] << 8\n          | buf[pos + 3]) >>> 0;\n}\n\n},{}],7:[function(require,module,exports){\n\"use strict\";\nmodule.exports = inquire;\n\n/**\n * Requires a module only if available.\n * @memberof util\n * @param {string} moduleName Module to require\n * @returns {?Object} Required module if available and not empty, otherwise `null`\n */\nfunction inquire(moduleName) {\n    try {\n        /**\n         * @memo change by shevchik\n         *\n         * @see https://github.com/protobufjs/protobuf.js/issues/1754\n         */\n        // var mod = eval(\"quire\".replace(/^/,\"re\"))(moduleName); // eslint-disable-line no-eval ////\n        var mod = require(moduleName); // eslint-disable-line no-eval\n        if (mod && (mod.length || Object.keys(mod).length))\n            return mod;\n    } catch (e) {} // eslint-disable-line no-empty\n    return null;\n}\n\n},{}],8:[function(require,module,exports){\n\"use strict\";\n\n/**\n * A minimal path module to resolve Unix, Windows and URL paths alike.\n * @memberof util\n * @namespace\n */\nvar path = exports;\n\nvar isAbsolute =\n/**\n * Tests if the specified path is absolute.\n * @param {string} path Path to test\n * @returns {boolean} `true` if path is absolute\n */\npath.isAbsolute = function isAbsolute(path) {\n    return /^(?:\\/|\\w+:)/.test(path);\n};\n\nvar normalize =\n/**\n * Normalizes the specified path.\n * @param {string} path Path to normalize\n * @returns {string} Normalized path\n */\npath.normalize = function normalize(path) {\n    path = path.replace(/\\\\/g, \"/\")\n               .replace(/\\/{2,}/g, \"/\");\n    var parts    = path.split(\"/\"),\n        absolute = isAbsolute(path),\n        prefix   = \"\";\n    if (absolute)\n        prefix = parts.shift() + \"/\";\n    for (var i = 0; i < parts.length;) {\n        if (parts[i] === \"..\") {\n            if (i > 0 && parts[i - 1] !== \"..\")\n                parts.splice(--i, 2);\n            else if (absolute)\n                parts.splice(i, 1);\n            else\n                ++i;\n        } else if (parts[i] === \".\")\n            parts.splice(i, 1);\n        else\n            ++i;\n    }\n    return prefix + parts.join(\"/\");\n};\n\n/**\n * Resolves the specified include path against the specified origin path.\n * @param {string} originPath Path to the origin file\n * @param {string} includePath Include path relative to origin path\n * @param {boolean} [alreadyNormalized=false] `true` if both paths are already known to be normalized\n * @returns {string} Path to the include file\n */\npath.resolve = function resolve(originPath, includePath, alreadyNormalized) {\n    if (!alreadyNormalized)\n        includePath = normalize(includePath);\n    if (isAbsolute(includePath))\n        return includePath;\n    if (!alreadyNormalized)\n        originPath = normalize(originPath);\n    return (originPath = originPath.replace(/(?:\\/|^)[^/]+$/, \"\")).length ? normalize(originPath + \"/\" + includePath) : includePath;\n};\n\n},{}],9:[function(require,module,exports){\n\"use strict\";\nmodule.exports = pool;\n\n/**\n * An allocator as used by {@link util.pool}.\n * @typedef PoolAllocator\n * @type {function}\n * @param {number} size Buffer size\n * @returns {Uint8Array} Buffer\n */\n\n/**\n * A slicer as used by {@link util.pool}.\n * @typedef PoolSlicer\n * @type {function}\n * @param {number} start Start offset\n * @param {number} end End offset\n * @returns {Uint8Array} Buffer slice\n * @this {Uint8Array}\n */\n\n/**\n * A general purpose buffer pool.\n * @memberof util\n * @function\n * @param {PoolAllocator} alloc Allocator\n * @param {PoolSlicer} slice Slicer\n * @param {number} [size=8192] Slab size\n * @returns {PoolAllocator} Pooled allocator\n */\nfunction pool(alloc, slice, size) {\n    var SIZE   = size || 8192;\n    var MAX    = SIZE >>> 1;\n    var slab   = null;\n    var offset = SIZE;\n    return function pool_alloc(size) {\n        if (size < 1 || size > MAX)\n            return alloc(size);\n        if (offset + size > SIZE) {\n            slab = alloc(SIZE);\n            offset = 0;\n        }\n        var buf = slice.call(slab, offset, offset += size);\n        if (offset & 7) // align to 32 bit\n            offset = (offset | 7) + 1;\n        return buf;\n    };\n}\n\n},{}],10:[function(require,module,exports){\n\"use strict\";\n\n/**\n * A minimal UTF8 implementation for number arrays.\n * @memberof util\n * @namespace\n */\nvar utf8 = exports;\n\n/**\n * Calculates the UTF8 byte length of a string.\n * @param {string} string String\n * @returns {number} Byte length\n */\nutf8.length = function utf8_length(string) {\n    var len = 0,\n        c = 0;\n    for (var i = 0; i < string.length; ++i) {\n        c = string.charCodeAt(i);\n        if (c < 128)\n            len += 1;\n        else if (c < 2048)\n            len += 2;\n        else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {\n            ++i;\n            len += 4;\n        } else\n            len += 3;\n    }\n    return len;\n};\n\n/**\n * Reads UTF8 bytes as a string.\n * @param {Uint8Array} buffer Source buffer\n * @param {number} start Source start\n * @param {number} end Source end\n * @returns {string} String read\n */\nutf8.read = function utf8_read(buffer, start, end) {\n    var len = end - start;\n    if (len < 1)\n        return \"\";\n    var parts = null,\n        chunk = [],\n        i = 0, // char offset\n        t;     // temporary\n    while (start < end) {\n        t = buffer[start++];\n        if (t < 128)\n            chunk[i++] = t;\n        else if (t > 191 && t < 224)\n            chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;\n        else if (t > 239 && t < 365) {\n            t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;\n            chunk[i++] = 0xD800 + (t >> 10);\n            chunk[i++] = 0xDC00 + (t & 1023);\n        } else\n            chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;\n        if (i > 8191) {\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\n            i = 0;\n        }\n    }\n    if (parts) {\n        if (i)\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\n        return parts.join(\"\");\n    }\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\n};\n\n/**\n * Writes a string as UTF8 bytes.\n * @param {string} string Source string\n * @param {Uint8Array} buffer Destination buffer\n * @param {number} offset Destination offset\n * @returns {number} Bytes written\n */\nutf8.write = function utf8_write(string, buffer, offset) {\n    var start = offset,\n        c1, // character 1\n        c2; // character 2\n    for (var i = 0; i < string.length; ++i) {\n        c1 = string.charCodeAt(i);\n        if (c1 < 128) {\n            buffer[offset++] = c1;\n        } else if (c1 < 2048) {\n            buffer[offset++] = c1 >> 6       | 192;\n            buffer[offset++] = c1       & 63 | 128;\n        } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {\n            c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF);\n            ++i;\n            buffer[offset++] = c1 >> 18      | 240;\n            buffer[offset++] = c1 >> 12 & 63 | 128;\n            buffer[offset++] = c1 >> 6  & 63 | 128;\n            buffer[offset++] = c1       & 63 | 128;\n        } else {\n            buffer[offset++] = c1 >> 12      | 224;\n            buffer[offset++] = c1 >> 6  & 63 | 128;\n            buffer[offset++] = c1       & 63 | 128;\n        }\n    }\n    return offset - start;\n};\n\n},{}],11:[function(require,module,exports){\n\"use strict\";\nmodule.exports = common;\n\nvar commonRe = /\\/|\\./;\n\n/**\n * Provides common type definitions.\n * Can also be used to provide additional google types or your own custom types.\n * @param {string} name Short name as in `google/protobuf/[name].proto` or full file name\n * @param {Object.<string,*>} json JSON definition within `google.protobuf` if a short name, otherwise the file's root definition\n * @returns {undefined}\n * @property {INamespace} google/protobuf/any.proto Any\n * @property {INamespace} google/protobuf/duration.proto Duration\n * @property {INamespace} google/protobuf/empty.proto Empty\n * @property {INamespace} google/protobuf/field_mask.proto FieldMask\n * @property {INamespace} google/protobuf/struct.proto Struct, Value, NullValue and ListValue\n * @property {INamespace} google/protobuf/timestamp.proto Timestamp\n * @property {INamespace} google/protobuf/wrappers.proto Wrappers\n * @example\n * // manually provides descriptor.proto (assumes google/protobuf/ namespace and .proto extension)\n * protobuf.common(\"descriptor\", descriptorJson);\n *\n * // manually provides a custom definition (uses my.foo namespace)\n * protobuf.common(\"my/foo/bar.proto\", myFooBarJson);\n */\nfunction common(name, json) {\n    if (!commonRe.test(name)) {\n        name = \"google/protobuf/\" + name + \".proto\";\n        json = { nested: { google: { nested: { protobuf: { nested: json } } } } };\n    }\n    common[name] = json;\n}\n\n// Not provided because of limited use (feel free to discuss or to provide yourself):\n//\n// google/protobuf/descriptor.proto\n// google/protobuf/source_context.proto\n// google/protobuf/type.proto\n//\n// Stripped and pre-parsed versions of these non-bundled files are instead available as part of\n// the repository or package within the google/protobuf directory.\n\ncommon(\"any\", {\n\n    /**\n     * Properties of a google.protobuf.Any message.\n     * @interface IAny\n     * @type {Object}\n     * @property {string} [typeUrl]\n     * @property {Uint8Array} [bytes]\n     * @memberof common\n     */\n    Any: {\n        fields: {\n            type_url: {\n                type: \"string\",\n                id: 1\n            },\n            value: {\n                type: \"bytes\",\n                id: 2\n            }\n        }\n    }\n});\n\nvar timeType;\n\ncommon(\"duration\", {\n\n    /**\n     * Properties of a google.protobuf.Duration message.\n     * @interface IDuration\n     * @type {Object}\n     * @property {number|Long} [seconds]\n     * @property {number} [nanos]\n     * @memberof common\n     */\n    Duration: timeType = {\n        fields: {\n            seconds: {\n                type: \"int64\",\n                id: 1\n            },\n            nanos: {\n                type: \"int32\",\n                id: 2\n            }\n        }\n    }\n});\n\ncommon(\"timestamp\", {\n\n    /**\n     * Properties of a google.protobuf.Timestamp message.\n     * @interface ITimestamp\n     * @type {Object}\n     * @property {number|Long} [seconds]\n     * @property {number} [nanos]\n     * @memberof common\n     */\n    Timestamp: timeType\n});\n\ncommon(\"empty\", {\n\n    /**\n     * Properties of a google.protobuf.Empty message.\n     * @interface IEmpty\n     * @memberof common\n     */\n    Empty: {\n        fields: {}\n    }\n});\n\ncommon(\"struct\", {\n\n    /**\n     * Properties of a google.protobuf.Struct message.\n     * @interface IStruct\n     * @type {Object}\n     * @property {Object.<string,IValue>} [fields]\n     * @memberof common\n     */\n    Struct: {\n        fields: {\n            fields: {\n                keyType: \"string\",\n                type: \"Value\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.Value message.\n     * @interface IValue\n     * @type {Object}\n     * @property {string} [kind]\n     * @property {0} [nullValue]\n     * @property {number} [numberValue]\n     * @property {string} [stringValue]\n     * @property {boolean} [boolValue]\n     * @property {IStruct} [structValue]\n     * @property {IListValue} [listValue]\n     * @memberof common\n     */\n    Value: {\n        oneofs: {\n            kind: {\n                oneof: [\n                    \"nullValue\",\n                    \"numberValue\",\n                    \"stringValue\",\n                    \"boolValue\",\n                    \"structValue\",\n                    \"listValue\"\n                ]\n            }\n        },\n        fields: {\n            nullValue: {\n                type: \"NullValue\",\n                id: 1\n            },\n            numberValue: {\n                type: \"double\",\n                id: 2\n            },\n            stringValue: {\n                type: \"string\",\n                id: 3\n            },\n            boolValue: {\n                type: \"bool\",\n                id: 4\n            },\n            structValue: {\n                type: \"Struct\",\n                id: 5\n            },\n            listValue: {\n                type: \"ListValue\",\n                id: 6\n            }\n        }\n    },\n\n    NullValue: {\n        values: {\n            NULL_VALUE: 0\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.ListValue message.\n     * @interface IListValue\n     * @type {Object}\n     * @property {Array.<IValue>} [values]\n     * @memberof common\n     */\n    ListValue: {\n        fields: {\n            values: {\n                rule: \"repeated\",\n                type: \"Value\",\n                id: 1\n            }\n        }\n    }\n});\n\ncommon(\"wrappers\", {\n\n    /**\n     * Properties of a google.protobuf.DoubleValue message.\n     * @interface IDoubleValue\n     * @type {Object}\n     * @property {number} [value]\n     * @memberof common\n     */\n    DoubleValue: {\n        fields: {\n            value: {\n                type: \"double\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.FloatValue message.\n     * @interface IFloatValue\n     * @type {Object}\n     * @property {number} [value]\n     * @memberof common\n     */\n    FloatValue: {\n        fields: {\n            value: {\n                type: \"float\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.Int64Value message.\n     * @interface IInt64Value\n     * @type {Object}\n     * @property {number|Long} [value]\n     * @memberof common\n     */\n    Int64Value: {\n        fields: {\n            value: {\n                type: \"int64\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.UInt64Value message.\n     * @interface IUInt64Value\n     * @type {Object}\n     * @property {number|Long} [value]\n     * @memberof common\n     */\n    UInt64Value: {\n        fields: {\n            value: {\n                type: \"uint64\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.Int32Value message.\n     * @interface IInt32Value\n     * @type {Object}\n     * @property {number} [value]\n     * @memberof common\n     */\n    Int32Value: {\n        fields: {\n            value: {\n                type: \"int32\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.UInt32Value message.\n     * @interface IUInt32Value\n     * @type {Object}\n     * @property {number} [value]\n     * @memberof common\n     */\n    UInt32Value: {\n        fields: {\n            value: {\n                type: \"uint32\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.BoolValue message.\n     * @interface IBoolValue\n     * @type {Object}\n     * @property {boolean} [value]\n     * @memberof common\n     */\n    BoolValue: {\n        fields: {\n            value: {\n                type: \"bool\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.StringValue message.\n     * @interface IStringValue\n     * @type {Object}\n     * @property {string} [value]\n     * @memberof common\n     */\n    StringValue: {\n        fields: {\n            value: {\n                type: \"string\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.BytesValue message.\n     * @interface IBytesValue\n     * @type {Object}\n     * @property {Uint8Array} [value]\n     * @memberof common\n     */\n    BytesValue: {\n        fields: {\n            value: {\n                type: \"bytes\",\n                id: 1\n            }\n        }\n    }\n});\n\ncommon(\"field_mask\", {\n\n    /**\n     * Properties of a google.protobuf.FieldMask message.\n     * @interface IDoubleValue\n     * @type {Object}\n     * @property {number} [value]\n     * @memberof common\n     */\n    FieldMask: {\n        fields: {\n            paths: {\n                rule: \"repeated\",\n                type: \"string\",\n                id: 1\n            }\n        }\n    }\n});\n\n/**\n * Gets the root definition of the specified common proto file.\n *\n * Bundled definitions are:\n * - google/protobuf/any.proto\n * - google/protobuf/duration.proto\n * - google/protobuf/empty.proto\n * - google/protobuf/field_mask.proto\n * - google/protobuf/struct.proto\n * - google/protobuf/timestamp.proto\n * - google/protobuf/wrappers.proto\n *\n * @param {string} file Proto file name\n * @returns {INamespace|null} Root definition or `null` if not defined\n */\ncommon.get = function get(file) {\n    return common[file] || null;\n};\n\n},{}],12:[function(require,module,exports){\n\"use strict\";\n/**\n * Runtime message from/to plain object converters.\n * @namespace\n */\nvar converter = exports;\n\nvar Enum = require(15),\n    util = require(37);\n\n/**\n * Generates a partial value fromObject conveter.\n * @param {Codegen} gen Codegen instance\n * @param {Field} field Reflected field\n * @param {number} fieldIndex Field index\n * @param {string} prop Property reference\n * @returns {Codegen} Codegen instance\n * @ignore\n */\nfunction genValuePartial_fromObject(gen, field, fieldIndex, prop) {\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n    if (field.resolvedType) {\n        if (field.resolvedType instanceof Enum) { gen\n            (\"switch(d%s){\", prop);\n            for (var values = field.resolvedType.values, keys = Object.keys(values), i = 0; i < keys.length; ++i) {\n                if (field.repeated && values[keys[i]] === field.typeDefault) gen\n                (\"default:\");\n                gen\n                (\"case%j:\", keys[i])\n                (\"case %i:\", values[keys[i]])\n                    (\"m%s=%j\", prop, values[keys[i]])\n                    (\"break\");\n            } gen\n            (\"}\");\n        } else gen\n            (\"if(typeof d%s!==\\\"object\\\")\", prop)\n                (\"throw TypeError(%j)\", field.fullName + \": object expected\")\n            (\"m%s=types[%i].fromObject(d%s)\", prop, fieldIndex, prop);\n    } else {\n        var isUnsigned = false;\n        switch (field.type) {\n            case \"double\":\n            case \"float\": gen\n                (\"m%s=Number(d%s)\", prop, prop); // also catches \"NaN\", \"Infinity\"\n                break;\n            case \"uint32\":\n            case \"fixed32\": gen\n                (\"m%s=d%s>>>0\", prop, prop);\n                break;\n            case \"int32\":\n            case \"sint32\":\n            case \"sfixed32\": gen\n                (\"m%s=d%s|0\", prop, prop);\n                break;\n            case \"uint64\":\n                isUnsigned = true;\n                // eslint-disable-line no-fallthrough\n            case \"int64\":\n            case \"sint64\":\n            case \"fixed64\":\n            case \"sfixed64\": gen\n                (\"if(util.Long)\")\n                    (\"(m%s=util.Long.fromValue(d%s)).unsigned=%j\", prop, prop, isUnsigned)\n                (\"else if(typeof d%s===\\\"string\\\")\", prop)\n                    (\"m%s=parseInt(d%s,10)\", prop, prop)\n                (\"else if(typeof d%s===\\\"number\\\")\", prop)\n                    (\"m%s=d%s\", prop, prop)\n                (\"else if(typeof d%s===\\\"object\\\")\", prop)\n                    (\"m%s=new util.LongBits(d%s.low>>>0,d%s.high>>>0).toNumber(%s)\", prop, prop, prop, isUnsigned ? \"true\" : \"\");\n                break;\n            case \"bytes\": gen\n                (\"if(typeof d%s===\\\"string\\\")\", prop)\n                    (\"util.base64.decode(d%s,m%s=util.newBuffer(util.base64.length(d%s)),0)\", prop, prop, prop)\n                (\"else if(d%s.length)\", prop)\n                    (\"m%s=d%s\", prop, prop);\n                break;\n            case \"string\": gen\n                (\"m%s=String(d%s)\", prop, prop);\n                break;\n            case \"bool\": gen\n                (\"m%s=Boolean(d%s)\", prop, prop);\n                break;\n            /* default: gen\n                (\"m%s=d%s\", prop, prop);\n                break; */\n        }\n    }\n    return gen;\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n}\n\n/**\n * Generates a plain object to runtime message converter specific to the specified message type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nconverter.fromObject = function fromObject(mtype) {\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n    var fields = mtype.fieldsArray;\n    var gen = util.codegen([\"d\"], mtype.name + \"$fromObject\")\n    (\"if(d instanceof this.ctor)\")\n        (\"return d\");\n    if (!fields.length) return gen\n    (\"return new this.ctor\");\n    gen\n    (\"var m=new this.ctor\");\n    for (var i = 0; i < fields.length; ++i) {\n        var field  = fields[i].resolve(),\n            prop   = util.safeProp(field.name);\n\n        // Map fields\n        if (field.map) { gen\n    (\"if(d%s){\", prop)\n        (\"if(typeof d%s!==\\\"object\\\")\", prop)\n            (\"throw TypeError(%j)\", field.fullName + \": object expected\")\n        (\"m%s={}\", prop)\n        (\"for(var ks=Object.keys(d%s),i=0;i<ks.length;++i){\", prop);\n            genValuePartial_fromObject(gen, field, /* not sorted */ i, prop + \"[ks[i]]\")\n        (\"}\")\n    (\"}\");\n\n        // Repeated fields\n        } else if (field.repeated) { gen\n    (\"if(d%s){\", prop)\n        (\"if(!Array.isArray(d%s))\", prop)\n            (\"throw TypeError(%j)\", field.fullName + \": array expected\")\n        (\"m%s=[]\", prop)\n        (\"for(var i=0;i<d%s.length;++i){\", prop);\n            genValuePartial_fromObject(gen, field, /* not sorted */ i, prop + \"[i]\")\n        (\"}\")\n    (\"}\");\n\n        // Non-repeated fields\n        } else {\n            if (!(field.resolvedType instanceof Enum)) gen // no need to test for null/undefined if an enum (uses switch)\n    (\"if(d%s!=null){\", prop); // !== undefined && !== null\n        genValuePartial_fromObject(gen, field, /* not sorted */ i, prop);\n            if (!(field.resolvedType instanceof Enum)) gen\n    (\"}\");\n        }\n    } return gen\n    (\"return m\");\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n};\n\n/**\n * Generates a partial value toObject converter.\n * @param {Codegen} gen Codegen instance\n * @param {Field} field Reflected field\n * @param {number} fieldIndex Field index\n * @param {string} prop Property reference\n * @returns {Codegen} Codegen instance\n * @ignore\n */\nfunction genValuePartial_toObject(gen, field, fieldIndex, prop) {\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n    if (field.resolvedType) {\n        if (field.resolvedType instanceof Enum) gen\n            (\"d%s=o.enums===String?types[%i].values[m%s]:m%s\", prop, fieldIndex, prop, prop);\n        else gen\n            (\"d%s=types[%i].toObject(m%s,o)\", prop, fieldIndex, prop);\n    } else {\n        var isUnsigned = false;\n        switch (field.type) {\n            case \"double\":\n            case \"float\": gen\n            (\"d%s=o.json&&!isFinite(m%s)?String(m%s):m%s\", prop, prop, prop, prop);\n                break;\n            case \"uint64\":\n                isUnsigned = true;\n                // eslint-disable-line no-fallthrough\n            case \"int64\":\n            case \"sint64\":\n            case \"fixed64\":\n            case \"sfixed64\": gen\n            (\"if(typeof m%s===\\\"number\\\")\", prop)\n                (\"d%s=o.longs===String?String(m%s):m%s\", prop, prop, prop)\n            (\"else\") // Long-like\n                (\"d%s=o.longs===String?util.Long.prototype.toString.call(m%s):o.longs===Number?new util.LongBits(m%s.low>>>0,m%s.high>>>0).toNumber(%s):m%s\", prop, prop, prop, prop, isUnsigned ? \"true\": \"\", prop);\n                break;\n            case \"bytes\": gen\n            (\"d%s=o.bytes===String?util.base64.encode(m%s,0,m%s.length):o.bytes===Array?Array.prototype.slice.call(m%s):m%s\", prop, prop, prop, prop, prop);\n                break;\n            default: gen\n            (\"d%s=m%s\", prop, prop);\n                break;\n        }\n    }\n    return gen;\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n}\n\n/**\n * Generates a runtime message to plain object converter specific to the specified message type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nconverter.toObject = function toObject(mtype) {\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n    var fields = mtype.fieldsArray.slice().sort(util.compareFieldsById);\n    if (!fields.length)\n        return util.codegen()(\"return {}\");\n    var gen = util.codegen([\"m\", \"o\"], mtype.name + \"$toObject\")\n    (\"if(!o)\")\n        (\"o={}\")\n    (\"var d={}\");\n\n    var repeatedFields = [],\n        mapFields = [],\n        normalFields = [],\n        i = 0;\n    for (; i < fields.length; ++i)\n        if (!fields[i].partOf)\n            ( fields[i].resolve().repeated ? repeatedFields\n            : fields[i].map ? mapFields\n            : normalFields).push(fields[i]);\n\n    if (repeatedFields.length) { gen\n    (\"if(o.arrays||o.defaults){\");\n        for (i = 0; i < repeatedFields.length; ++i) gen\n        (\"d%s=[]\", util.safeProp(repeatedFields[i].name));\n        gen\n    (\"}\");\n    }\n\n    if (mapFields.length) { gen\n    (\"if(o.objects||o.defaults){\");\n        for (i = 0; i < mapFields.length; ++i) gen\n        (\"d%s={}\", util.safeProp(mapFields[i].name));\n        gen\n    (\"}\");\n    }\n\n    if (normalFields.length) { gen\n    (\"if(o.defaults){\");\n        for (i = 0; i < normalFields.length; ++i) {\n            var field = normalFields[i],\n                prop  = util.safeProp(field.name);\n            if (field.resolvedType instanceof Enum) gen\n        (\"d%s=o.enums===String?%j:%j\", prop, field.resolvedType.valuesById[field.typeDefault], field.typeDefault);\n            else if (field.long) gen\n        (\"if(util.Long){\")\n            (\"var n=new util.Long(%i,%i,%j)\", field.typeDefault.low, field.typeDefault.high, field.typeDefault.unsigned)\n            (\"d%s=o.longs===String?n.toString():o.longs===Number?n.toNumber():n\", prop)\n        (\"}else\")\n            (\"d%s=o.longs===String?%j:%i\", prop, field.typeDefault.toString(), field.typeDefault.toNumber());\n            else if (field.bytes) gen\n        (\"d%s=o.bytes===String?%j:%s\", prop, String.fromCharCode.apply(String, field.typeDefault), \"[\" + Array.prototype.slice.call(field.typeDefault).join(\",\") + \"]\");\n            else gen\n        (\"d%s=%j\", prop, field.typeDefault); // also messages (=null)\n        } gen\n    (\"}\");\n    }\n    var hasKs2 = false;\n    for (i = 0; i < fields.length; ++i) {\n        var field = fields[i],\n            index = mtype._fieldsArray.indexOf(field),\n            prop  = util.safeProp(field.name);\n        if (field.map) {\n            if (!hasKs2) { hasKs2 = true; gen\n    (\"var ks2\");\n            } gen\n    (\"if(m%s&&(ks2=Object.keys(m%s)).length){\", prop, prop)\n        (\"d%s={}\", prop)\n        (\"for(var j=0;j<ks2.length;++j){\");\n            genValuePartial_toObject(gen, field, /* sorted */ index, prop + \"[ks2[j]]\")\n        (\"}\");\n        } else if (field.repeated) { gen\n    (\"if(m%s&&m%s.length){\", prop, prop)\n        (\"d%s=[]\", prop)\n        (\"for(var j=0;j<m%s.length;++j){\", prop);\n            genValuePartial_toObject(gen, field, /* sorted */ index, prop + \"[j]\")\n        (\"}\");\n        } else { gen\n    (\"if(m%s!=null&&m.hasOwnProperty(%j)){\", prop, field.name); // !== undefined && !== null\n        genValuePartial_toObject(gen, field, /* sorted */ index, prop);\n        if (field.partOf) gen\n        (\"if(o.oneofs)\")\n            (\"d%s=%j\", util.safeProp(field.partOf.name), field.name);\n        }\n        gen\n    (\"}\");\n    }\n    return gen\n    (\"return d\");\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n};\n\n},{\"15\":15,\"37\":37}],13:[function(require,module,exports){\n\"use strict\";\nmodule.exports = decoder;\n\nvar Enum    = require(15),\n    types   = require(36),\n    util    = require(37);\n\nfunction missing(field) {\n    return \"missing required '\" + field.name + \"'\";\n}\n\n/**\n * Generates a decoder specific to the specified message type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nfunction decoder(mtype) {\n    /* eslint-disable no-unexpected-multiline */\n    var gen = util.codegen([\"r\", \"l\"], mtype.name + \"$decode\")\n    (\"if(!(r instanceof Reader))\")\n        (\"r=Reader.create(r)\")\n    (\"var c=l===undefined?r.len:r.pos+l,m=new this.ctor\" + (mtype.fieldsArray.filter(function(field) { return field.map; }).length ? \",k\" : \"\"))\n    (\"while(r.pos<c){\")\n        (\"var t=r.uint32()\");\n    if (mtype.group) gen\n        (\"if((t&7)===4)\")\n            (\"break\");\n    gen\n        (\"switch(t>>>3){\");\n\n    var i = 0;\n    for (; i < /* initializes */ mtype.fieldsArray.length; ++i) {\n        var field = mtype._fieldsArray[i].resolve(),\n            type  = field.resolvedType instanceof Enum ? \"int32\" : field.type,\n            ref   = \"m\" + util.safeProp(field.name); gen\n            (\"case %i:\", field.id);\n\n        // Map fields\n        if (field.map) { gen\n                (\"r.skip().pos++\") // assumes id 1 + key wireType\n                (\"if(%s===util.emptyObject)\", ref)\n                    (\"%s={}\", ref)\n                (\"k=r.%s()\", field.keyType)\n                (\"r.pos++\"); // assumes id 2 + value wireType\n            if (types.long[field.keyType] !== undefined) {\n                if (types.basic[type] === undefined) gen\n                (\"%s[typeof k===\\\"object\\\"?util.longToHash(k):k]=types[%i].decode(r,r.uint32())\", ref, i); // can't be groups\n                else gen\n                (\"%s[typeof k===\\\"object\\\"?util.longToHash(k):k]=r.%s()\", ref, type);\n            } else {\n                if (types.basic[type] === undefined) gen\n                (\"%s[k]=types[%i].decode(r,r.uint32())\", ref, i); // can't be groups\n                else gen\n                (\"%s[k]=r.%s()\", ref, type);\n            }\n\n        // Repeated fields\n        } else if (field.repeated) { gen\n\n                (\"if(!(%s&&%s.length))\", ref, ref)\n                    (\"%s=[]\", ref);\n\n            // Packable (always check for forward and backward compatiblity)\n            if (types.packed[type] !== undefined) gen\n                (\"if((t&7)===2){\")\n                    (\"var c2=r.uint32()+r.pos\")\n                    (\"while(r.pos<c2)\")\n                        (\"%s.push(r.%s())\", ref, type)\n                (\"}else\");\n\n            // Non-packed\n            if (types.basic[type] === undefined) gen(field.resolvedType.group\n                    ? \"%s.push(types[%i].decode(r))\"\n                    : \"%s.push(types[%i].decode(r,r.uint32()))\", ref, i);\n            else gen\n                    (\"%s.push(r.%s())\", ref, type);\n\n        // Non-repeated\n        } else if (types.basic[type] === undefined) gen(field.resolvedType.group\n                ? \"%s=types[%i].decode(r)\"\n                : \"%s=types[%i].decode(r,r.uint32())\", ref, i);\n        else gen\n                (\"%s=r.%s()\", ref, type);\n        gen\n                (\"break\");\n    // Unknown fields\n    } gen\n            (\"default:\")\n                (\"r.skipType(t&7)\")\n                (\"break\")\n\n        (\"}\")\n    (\"}\");\n\n    // Field presence\n    for (i = 0; i < mtype._fieldsArray.length; ++i) {\n        var rfield = mtype._fieldsArray[i];\n        if (rfield.required) gen\n    (\"if(!m.hasOwnProperty(%j))\", rfield.name)\n        (\"throw util.ProtocolError(%j,{instance:m})\", missing(rfield));\n    }\n\n    return gen\n    (\"return m\");\n    /* eslint-enable no-unexpected-multiline */\n}\n\n},{\"15\":15,\"36\":36,\"37\":37}],14:[function(require,module,exports){\n\"use strict\";\nmodule.exports = encoder;\n\nvar Enum     = require(15),\n    types    = require(36),\n    util     = require(37);\n\n/**\n * Generates a partial message type encoder.\n * @param {Codegen} gen Codegen instance\n * @param {Field} field Reflected field\n * @param {number} fieldIndex Field index\n * @param {string} ref Variable reference\n * @returns {Codegen} Codegen instance\n * @ignore\n */\nfunction genTypePartial(gen, field, fieldIndex, ref) {\n    return field.resolvedType.group\n        ? gen(\"types[%i].encode(%s,w.uint32(%i)).uint32(%i)\", fieldIndex, ref, (field.id << 3 | 3) >>> 0, (field.id << 3 | 4) >>> 0)\n        : gen(\"types[%i].encode(%s,w.uint32(%i).fork()).ldelim()\", fieldIndex, ref, (field.id << 3 | 2) >>> 0);\n}\n\n/**\n * Generates an encoder specific to the specified message type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nfunction encoder(mtype) {\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n    var gen = util.codegen([\"m\", \"w\"], mtype.name + \"$encode\")\n    (\"if(!w)\")\n        (\"w=Writer.create()\");\n\n    var i, ref;\n\n    // \"when a message is serialized its known fields should be written sequentially by field number\"\n    var fields = /* initializes */ mtype.fieldsArray.slice().sort(util.compareFieldsById);\n\n    for (var i = 0; i < fields.length; ++i) {\n        var field    = fields[i].resolve(),\n            index    = mtype._fieldsArray.indexOf(field),\n            type     = field.resolvedType instanceof Enum ? \"int32\" : field.type,\n            wireType = types.basic[type];\n            ref      = \"m\" + util.safeProp(field.name);\n\n        // Map fields\n        if (field.map) {\n            gen\n    (\"if(%s!=null&&m.hasOwnProperty(%j)){\", ref, field.name) // !== undefined && !== null\n        (\"for(var ks=Object.keys(%s),i=0;i<ks.length;++i){\", ref)\n            (\"w.uint32(%i).fork().uint32(%i).%s(ks[i])\", (field.id << 3 | 2) >>> 0, 8 | types.mapKey[field.keyType], field.keyType);\n            if (wireType === undefined) gen\n            (\"types[%i].encode(%s[ks[i]],w.uint32(18).fork()).ldelim().ldelim()\", index, ref); // can't be groups\n            else gen\n            (\".uint32(%i).%s(%s[ks[i]]).ldelim()\", 16 | wireType, type, ref);\n            gen\n        (\"}\")\n    (\"}\");\n\n            // Repeated fields\n        } else if (field.repeated) { gen\n    (\"if(%s!=null&&%s.length){\", ref, ref); // !== undefined && !== null\n\n            // Packed repeated\n            if (field.packed && types.packed[type] !== undefined) { gen\n\n        (\"w.uint32(%i).fork()\", (field.id << 3 | 2) >>> 0)\n        (\"for(var i=0;i<%s.length;++i)\", ref)\n            (\"w.%s(%s[i])\", type, ref)\n        (\"w.ldelim()\");\n\n            // Non-packed\n            } else { gen\n\n        (\"for(var i=0;i<%s.length;++i)\", ref);\n                if (wireType === undefined)\n            genTypePartial(gen, field, index, ref + \"[i]\");\n                else gen\n            (\"w.uint32(%i).%s(%s[i])\", (field.id << 3 | wireType) >>> 0, type, ref);\n\n            } gen\n    (\"}\");\n\n        // Non-repeated\n        } else {\n            if (field.optional) gen\n    (\"if(%s!=null&&m.hasOwnProperty(%j))\", ref, field.name); // !== undefined && !== null\n\n            if (wireType === undefined)\n        genTypePartial(gen, field, index, ref);\n            else gen\n        (\"w.uint32(%i).%s(%s)\", (field.id << 3 | wireType) >>> 0, type, ref);\n\n        }\n    }\n\n    return gen\n    (\"return w\");\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n}\n},{\"15\":15,\"36\":36,\"37\":37}],15:[function(require,module,exports){\n\"use strict\";\nmodule.exports = Enum;\n\n// extends ReflectionObject\nvar ReflectionObject = require(24);\n((Enum.prototype = Object.create(ReflectionObject.prototype)).constructor = Enum).className = \"Enum\";\n\nvar Namespace = require(23),\n    util = require(37);\n\n/**\n * Constructs a new enum instance.\n * @classdesc Reflected enum.\n * @extends ReflectionObject\n * @constructor\n * @param {string} name Unique name within its namespace\n * @param {Object.<string,number>} [values] Enum values as an object, by name\n * @param {Object.<string,*>} [options] Declared options\n * @param {string} [comment] The comment for this enum\n * @param {Object.<string,string>} [comments] The value comments for this enum\n */\nfunction Enum(name, values, options, comment, comments) {\n    ReflectionObject.call(this, name, options);\n\n    if (values && typeof values !== \"object\")\n        throw TypeError(\"values must be an object\");\n\n    /**\n     * Enum values by id.\n     * @type {Object.<number,string>}\n     */\n    this.valuesById = {};\n\n    /**\n     * Enum values by name.\n     * @type {Object.<string,number>}\n     */\n    this.values = Object.create(this.valuesById); // toJSON, marker\n\n    /**\n     * Enum comment text.\n     * @type {string|null}\n     */\n    this.comment = comment;\n\n    /**\n     * Value comment texts, if any.\n     * @type {Object.<string,string>}\n     */\n    this.comments = comments || {};\n\n    /**\n     * Reserved ranges, if any.\n     * @type {Array.<number[]|string>}\n     */\n    this.reserved = undefined; // toJSON\n\n    // Note that values inherit valuesById on their prototype which makes them a TypeScript-\n    // compatible enum. This is used by pbts to write actual enum definitions that work for\n    // static and reflection code alike instead of emitting generic object definitions.\n\n    if (values)\n        for (var keys = Object.keys(values), i = 0; i < keys.length; ++i)\n            if (typeof values[keys[i]] === \"number\") // use forward entries only\n                this.valuesById[ this.values[keys[i]] = values[keys[i]] ] = keys[i];\n}\n\n/**\n * Enum descriptor.\n * @interface IEnum\n * @property {Object.<string,number>} values Enum values\n * @property {Object.<string,*>} [options] Enum options\n */\n\n/**\n * Constructs an enum from an enum descriptor.\n * @param {string} name Enum name\n * @param {IEnum} json Enum descriptor\n * @returns {Enum} Created enum\n * @throws {TypeError} If arguments are invalid\n */\nEnum.fromJSON = function fromJSON(name, json) {\n    var enm = new Enum(name, json.values, json.options, json.comment, json.comments);\n    enm.reserved = json.reserved;\n    return enm;\n};\n\n/**\n * Converts this enum to an enum descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IEnum} Enum descriptor\n */\nEnum.prototype.toJSON = function toJSON(toJSONOptions) {\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"options\"  , this.options,\n        \"values\"   , this.values,\n        \"reserved\" , this.reserved && this.reserved.length ? this.reserved : undefined,\n        \"comment\"  , keepComments ? this.comment : undefined,\n        \"comments\" , keepComments ? this.comments : undefined\n    ]);\n};\n\n/**\n * Adds a value to this enum.\n * @param {string} name Value name\n * @param {number} id Value id\n * @param {string} [comment] Comment, if any\n * @returns {Enum} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If there is already a value with this name or id\n */\nEnum.prototype.add = function add(name, id, comment) {\n    // utilized by the parser but not by .fromJSON\n\n    if (!util.isString(name))\n        throw TypeError(\"name must be a string\");\n\n    if (!util.isInteger(id))\n        throw TypeError(\"id must be an integer\");\n\n    if (this.values[name] !== undefined)\n        throw Error(\"duplicate name '\" + name + \"' in \" + this);\n\n    if (this.isReservedId(id))\n        throw Error(\"id \" + id + \" is reserved in \" + this);\n\n    if (this.isReservedName(name))\n        throw Error(\"name '\" + name + \"' is reserved in \" + this);\n\n    if (this.valuesById[id] !== undefined) {\n        if (!(this.options && this.options.allow_alias))\n            throw Error(\"duplicate id \" + id + \" in \" + this);\n        this.values[name] = id;\n    } else\n        this.valuesById[this.values[name] = id] = name;\n\n    this.comments[name] = comment || null;\n    return this;\n};\n\n/**\n * Removes a value from this enum\n * @param {string} name Value name\n * @returns {Enum} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If `name` is not a name of this enum\n */\nEnum.prototype.remove = function remove(name) {\n\n    if (!util.isString(name))\n        throw TypeError(\"name must be a string\");\n\n    var val = this.values[name];\n    if (val == null)\n        throw Error(\"name '\" + name + \"' does not exist in \" + this);\n\n    delete this.valuesById[val];\n    delete this.values[name];\n    delete this.comments[name];\n\n    return this;\n};\n\n/**\n * Tests if the specified id is reserved.\n * @param {number} id Id to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nEnum.prototype.isReservedId = function isReservedId(id) {\n    return Namespace.isReservedId(this.reserved, id);\n};\n\n/**\n * Tests if the specified name is reserved.\n * @param {string} name Name to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nEnum.prototype.isReservedName = function isReservedName(name) {\n    return Namespace.isReservedName(this.reserved, name);\n};\n\n},{\"23\":23,\"24\":24,\"37\":37}],16:[function(require,module,exports){\n\"use strict\";\nmodule.exports = Field;\n\n// extends ReflectionObject\nvar ReflectionObject = require(24);\n((Field.prototype = Object.create(ReflectionObject.prototype)).constructor = Field).className = \"Field\";\n\nvar Enum  = require(15),\n    types = require(36),\n    util  = require(37);\n\nvar Type; // cyclic\n\nvar ruleRe = /^required|optional|repeated$/;\n\n/**\n * Constructs a new message field instance. Note that {@link MapField|map fields} have their own class.\n * @name Field\n * @classdesc Reflected message field.\n * @extends FieldBase\n * @constructor\n * @param {string} name Unique name within its namespace\n * @param {number} id Unique id within its namespace\n * @param {string} type Value type\n * @param {string|Object.<string,*>} [rule=\"optional\"] Field rule\n * @param {string|Object.<string,*>} [extend] Extended type if different from parent\n * @param {Object.<string,*>} [options] Declared options\n */\n\n/**\n * Constructs a field from a field descriptor.\n * @param {string} name Field name\n * @param {IField} json Field descriptor\n * @returns {Field} Created field\n * @throws {TypeError} If arguments are invalid\n */\nField.fromJSON = function fromJSON(name, json) {\n    return new Field(name, json.id, json.type, json.rule, json.extend, json.options, json.comment);\n};\n\n/**\n * Not an actual constructor. Use {@link Field} instead.\n * @classdesc Base class of all reflected message fields. This is not an actual class but here for the sake of having consistent type definitions.\n * @exports FieldBase\n * @extends ReflectionObject\n * @constructor\n * @param {string} name Unique name within its namespace\n * @param {number} id Unique id within its namespace\n * @param {string} type Value type\n * @param {string|Object.<string,*>} [rule=\"optional\"] Field rule\n * @param {string|Object.<string,*>} [extend] Extended type if different from parent\n * @param {Object.<string,*>} [options] Declared options\n * @param {string} [comment] Comment associated with this field\n */\nfunction Field(name, id, type, rule, extend, options, comment) {\n\n    if (util.isObject(rule)) {\n        comment = extend;\n        options = rule;\n        rule = extend = undefined;\n    } else if (util.isObject(extend)) {\n        comment = options;\n        options = extend;\n        extend = undefined;\n    }\n\n    ReflectionObject.call(this, name, options);\n\n    if (!util.isInteger(id) || id < 0)\n        throw TypeError(\"id must be a non-negative integer\");\n\n    if (!util.isString(type))\n        throw TypeError(\"type must be a string\");\n\n    if (rule !== undefined && !ruleRe.test(rule = rule.toString().toLowerCase()))\n        throw TypeError(\"rule must be a string rule\");\n\n    if (extend !== undefined && !util.isString(extend))\n        throw TypeError(\"extend must be a string\");\n\n    /**\n     * Field rule, if any.\n     * @type {string|undefined}\n     */\n    this.rule = rule && rule !== \"optional\" ? rule : undefined; // toJSON\n\n    /**\n     * Field type.\n     * @type {string}\n     */\n    this.type = type; // toJSON\n\n    /**\n     * Unique field id.\n     * @type {number}\n     */\n    this.id = id; // toJSON, marker\n\n    /**\n     * Extended type if different from parent.\n     * @type {string|undefined}\n     */\n    this.extend = extend || undefined; // toJSON\n\n    /**\n     * Whether this field is required.\n     * @type {boolean}\n     */\n    this.required = rule === \"required\";\n\n    /**\n     * Whether this field is optional.\n     * @type {boolean}\n     */\n    this.optional = !this.required;\n\n    /**\n     * Whether this field is repeated.\n     * @type {boolean}\n     */\n    this.repeated = rule === \"repeated\";\n\n    /**\n     * Whether this field is a map or not.\n     * @type {boolean}\n     */\n    this.map = false;\n\n    /**\n     * Message this field belongs to.\n     * @type {Type|null}\n     */\n    this.message = null;\n\n    /**\n     * OneOf this field belongs to, if any,\n     * @type {OneOf|null}\n     */\n    this.partOf = null;\n\n    /**\n     * The field type's default value.\n     * @type {*}\n     */\n    this.typeDefault = null;\n\n    /**\n     * The field's default value on prototypes.\n     * @type {*}\n     */\n    this.defaultValue = null;\n\n    /**\n     * Whether this field's value should be treated as a long.\n     * @type {boolean}\n     */\n    this.long = util.Long ? types.long[type] !== undefined : /* istanbul ignore next */ false;\n\n    /**\n     * Whether this field's value is a buffer.\n     * @type {boolean}\n     */\n    this.bytes = type === \"bytes\";\n\n    /**\n     * Resolved type if not a basic type.\n     * @type {Type|Enum|null}\n     */\n    this.resolvedType = null;\n\n    /**\n     * Sister-field within the extended type if a declaring extension field.\n     * @type {Field|null}\n     */\n    this.extensionField = null;\n\n    /**\n     * Sister-field within the declaring namespace if an extended field.\n     * @type {Field|null}\n     */\n    this.declaringField = null;\n\n    /**\n     * Internally remembers whether this field is packed.\n     * @type {boolean|null}\n     * @private\n     */\n    this._packed = null;\n\n    /**\n     * Comment for this field.\n     * @type {string|null}\n     */\n    this.comment = comment;\n}\n\n/**\n * Determines whether this field is packed. Only relevant when repeated and working with proto2.\n * @name Field#packed\n * @type {boolean}\n * @readonly\n */\nObject.defineProperty(Field.prototype, \"packed\", {\n    get: function() {\n        // defaults to packed=true if not explicity set to false\n        if (this._packed === null)\n            this._packed = this.getOption(\"packed\") !== false;\n        return this._packed;\n    }\n});\n\n/**\n * @override\n */\nField.prototype.setOption = function setOption(name, value, ifNotSet) {\n    if (name === \"packed\") // clear cached before setting\n        this._packed = null;\n    return ReflectionObject.prototype.setOption.call(this, name, value, ifNotSet);\n};\n\n/**\n * Field descriptor.\n * @interface IField\n * @property {string} [rule=\"optional\"] Field rule\n * @property {string} type Field type\n * @property {number} id Field id\n * @property {Object.<string,*>} [options] Field options\n */\n\n/**\n * Extension field descriptor.\n * @interface IExtensionField\n * @extends IField\n * @property {string} extend Extended type\n */\n\n/**\n * Converts this field to a field descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IField} Field descriptor\n */\nField.prototype.toJSON = function toJSON(toJSONOptions) {\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"rule\"    , this.rule !== \"optional\" && this.rule || undefined,\n        \"type\"    , this.type,\n        \"id\"      , this.id,\n        \"extend\"  , this.extend,\n        \"options\" , this.options,\n        \"comment\" , keepComments ? this.comment : undefined\n    ]);\n};\n\n/**\n * Resolves this field's type references.\n * @returns {Field} `this`\n * @throws {Error} If any reference cannot be resolved\n */\nField.prototype.resolve = function resolve() {\n\n    if (this.resolved)\n        return this;\n\n    if ((this.typeDefault = types.defaults[this.type]) === undefined) { // if not a basic type, resolve it\n        this.resolvedType = (this.declaringField ? this.declaringField.parent : this.parent).lookupTypeOrEnum(this.type);\n        if (this.resolvedType instanceof Type)\n            this.typeDefault = null;\n        else // instanceof Enum\n            this.typeDefault = this.resolvedType.values[Object.keys(this.resolvedType.values)[0]]; // first defined\n    }\n\n    // use explicitly set default value if present\n    if (this.options && this.options[\"default\"] != null) {\n        this.typeDefault = this.options[\"default\"];\n        if (this.resolvedType instanceof Enum && typeof this.typeDefault === \"string\")\n            this.typeDefault = this.resolvedType.values[this.typeDefault];\n    }\n\n    // remove unnecessary options\n    if (this.options) {\n        if (this.options.packed === true || this.options.packed !== undefined && this.resolvedType && !(this.resolvedType instanceof Enum))\n            delete this.options.packed;\n        if (!Object.keys(this.options).length)\n            this.options = undefined;\n    }\n\n    // convert to internal data type if necesssary\n    if (this.long) {\n        this.typeDefault = util.Long.fromNumber(this.typeDefault, this.type.charAt(0) === \"u\");\n\n        /* istanbul ignore else */\n        if (Object.freeze)\n            Object.freeze(this.typeDefault); // long instances are meant to be immutable anyway (i.e. use small int cache that even requires it)\n\n    } else if (this.bytes && typeof this.typeDefault === \"string\") {\n        var buf;\n        if (util.base64.test(this.typeDefault))\n            util.base64.decode(this.typeDefault, buf = util.newBuffer(util.base64.length(this.typeDefault)), 0);\n        else\n            util.utf8.write(this.typeDefault, buf = util.newBuffer(util.utf8.length(this.typeDefault)), 0);\n        this.typeDefault = buf;\n    }\n\n    // take special care of maps and repeated fields\n    if (this.map)\n        this.defaultValue = util.emptyObject;\n    else if (this.repeated)\n        this.defaultValue = util.emptyArray;\n    else\n        this.defaultValue = this.typeDefault;\n\n    // ensure proper value on prototype\n    if (this.parent instanceof Type)\n        this.parent.ctor.prototype[this.name] = this.defaultValue;\n\n    return ReflectionObject.prototype.resolve.call(this);\n};\n\n/**\n * Decorator function as returned by {@link Field.d} and {@link MapField.d} (TypeScript).\n * @typedef FieldDecorator\n * @type {function}\n * @param {Object} prototype Target prototype\n * @param {string} fieldName Field name\n * @returns {undefined}\n */\n\n/**\n * Field decorator (TypeScript).\n * @name Field.d\n * @function\n * @param {number} fieldId Field id\n * @param {\"double\"|\"float\"|\"int32\"|\"uint32\"|\"sint32\"|\"fixed32\"|\"sfixed32\"|\"int64\"|\"uint64\"|\"sint64\"|\"fixed64\"|\"sfixed64\"|\"string\"|\"bool\"|\"bytes\"|Object} fieldType Field type\n * @param {\"optional\"|\"required\"|\"repeated\"} [fieldRule=\"optional\"] Field rule\n * @param {T} [defaultValue] Default value\n * @returns {FieldDecorator} Decorator function\n * @template T extends number | number[] | Long | Long[] | string | string[] | boolean | boolean[] | Uint8Array | Uint8Array[] | Buffer | Buffer[]\n */\nField.d = function decorateField(fieldId, fieldType, fieldRule, defaultValue) {\n\n    // submessage: decorate the submessage and use its name as the type\n    if (typeof fieldType === \"function\")\n        fieldType = util.decorateType(fieldType).name;\n\n    // enum reference: create a reflected copy of the enum and keep reuseing it\n    else if (fieldType && typeof fieldType === \"object\")\n        fieldType = util.decorateEnum(fieldType).name;\n\n    return function fieldDecorator(prototype, fieldName) {\n        util.decorateType(prototype.constructor)\n            .add(new Field(fieldName, fieldId, fieldType, fieldRule, { \"default\": defaultValue }));\n    };\n};\n\n/**\n * Field decorator (TypeScript).\n * @name Field.d\n * @function\n * @param {number} fieldId Field id\n * @param {Constructor<T>|string} fieldType Field type\n * @param {\"optional\"|\"required\"|\"repeated\"} [fieldRule=\"optional\"] Field rule\n * @returns {FieldDecorator} Decorator function\n * @template T extends Message<T>\n * @variation 2\n */\n// like Field.d but without a default value\n\nField._configure = function configure(Type_) {\n    Type = Type_;\n};\n\n},{\"15\":15,\"24\":24,\"36\":36,\"37\":37}],17:[function(require,module,exports){\n\"use strict\";\nvar protobuf = module.exports = require(18);\n\nprotobuf.build = \"light\";\n\n/**\n * A node-style callback as used by {@link load} and {@link Root#load}.\n * @typedef LoadCallback\n * @type {function}\n * @param {Error|null} error Error, if any, otherwise `null`\n * @param {Root} [root] Root, if there hasn't been an error\n * @returns {undefined}\n */\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into a common root namespace and calls the callback.\n * @param {string|string[]} filename One or multiple files to load\n * @param {Root} root Root namespace, defaults to create a new one if omitted.\n * @param {LoadCallback} callback Callback function\n * @returns {undefined}\n * @see {@link Root#load}\n */\nfunction load(filename, root, callback) {\n    if (typeof root === \"function\") {\n        callback = root;\n        root = new protobuf.Root();\n    } else if (!root)\n        root = new protobuf.Root();\n    return root.load(filename, callback);\n}\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into a common root namespace and calls the callback.\n * @name load\n * @function\n * @param {string|string[]} filename One or multiple files to load\n * @param {LoadCallback} callback Callback function\n * @returns {undefined}\n * @see {@link Root#load}\n * @variation 2\n */\n// function load(filename:string, callback:LoadCallback):undefined\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into a common root namespace and returns a promise.\n * @name load\n * @function\n * @param {string|string[]} filename One or multiple files to load\n * @param {Root} [root] Root namespace, defaults to create a new one if omitted.\n * @returns {Promise<Root>} Promise\n * @see {@link Root#load}\n * @variation 3\n */\n// function load(filename:string, [root:Root]):Promise<Root>\n\nprotobuf.load = load;\n\n/**\n * Synchronously loads one or multiple .proto or preprocessed .json files into a common root namespace (node only).\n * @param {string|string[]} filename One or multiple files to load\n * @param {Root} [root] Root namespace, defaults to create a new one if omitted.\n * @returns {Root} Root namespace\n * @throws {Error} If synchronous fetching is not supported (i.e. in browsers) or if a file's syntax is invalid\n * @see {@link Root#loadSync}\n */\nfunction loadSync(filename, root) {\n    if (!root)\n        root = new protobuf.Root();\n    return root.loadSync(filename);\n}\n\nprotobuf.loadSync = loadSync;\n\n// Serialization\nprotobuf.encoder          = require(14);\nprotobuf.decoder          = require(13);\nprotobuf.verifier         = require(40);\nprotobuf.converter        = require(12);\n\n// Reflection\nprotobuf.ReflectionObject = require(24);\nprotobuf.Namespace        = require(23);\nprotobuf.Root             = require(29);\nprotobuf.Enum             = require(15);\nprotobuf.Type             = require(35);\nprotobuf.Field            = require(16);\nprotobuf.OneOf            = require(25);\nprotobuf.MapField         = require(20);\nprotobuf.Service          = require(33);\nprotobuf.Method           = require(22);\n\n// Runtime\nprotobuf.Message          = require(21);\nprotobuf.wrappers         = require(41);\n\n// Utility\nprotobuf.types            = require(36);\nprotobuf.util             = require(37);\n\n// Configure reflection\nprotobuf.ReflectionObject._configure(protobuf.Root);\nprotobuf.Namespace._configure(protobuf.Type, protobuf.Service);\nprotobuf.Root._configure(protobuf.Type);\nprotobuf.Field._configure(protobuf.Type);\n\n},{\"12\":12,\"13\":13,\"14\":14,\"15\":15,\"16\":16,\"18\":18,\"20\":20,\"21\":21,\"22\":22,\"23\":23,\"24\":24,\"25\":25,\"29\":29,\"33\":33,\"35\":35,\"36\":36,\"37\":37,\"40\":40,\"41\":41}],18:[function(require,module,exports){\n\"use strict\";\nvar protobuf = exports;\n\n/**\n * Build type, one of `\"full\"`, `\"light\"` or `\"minimal\"`.\n * @name build\n * @type {string}\n * @const\n */\nprotobuf.build = \"minimal\";\n\n// Serialization\nprotobuf.Writer       = require(42);\nprotobuf.BufferWriter = require(43);\nprotobuf.Reader       = require(27);\nprotobuf.BufferReader = require(28);\n\n// Utility\nprotobuf.util         = require(39);\nprotobuf.rpc          = require(31);\nprotobuf.roots        = require(30);\nprotobuf.configure    = configure;\n\n/* istanbul ignore next */\n/**\n * Reconfigures the library according to the environment.\n * @returns {undefined}\n */\nfunction configure() {\n    protobuf.Reader._configure(protobuf.BufferReader);\n    protobuf.util._configure();\n}\n\n// Configure serialization\nprotobuf.Writer._configure(protobuf.BufferWriter);\nconfigure();\n\n},{\"27\":27,\"28\":28,\"30\":30,\"31\":31,\"39\":39,\"42\":42,\"43\":43}],19:[function(require,module,exports){\n\"use strict\";\nvar protobuf = module.exports = require(17);\n\nprotobuf.build = \"full\";\n\n// Parser\nprotobuf.tokenize         = require(34);\nprotobuf.parse            = require(26);\nprotobuf.common           = require(11);\n\n// Configure parser\nprotobuf.Root._configure(protobuf.Type, protobuf.parse, protobuf.common);\n\n},{\"11\":11,\"17\":17,\"26\":26,\"34\":34}],20:[function(require,module,exports){\n\"use strict\";\nmodule.exports = MapField;\n\n// extends Field\nvar Field = require(16);\n((MapField.prototype = Object.create(Field.prototype)).constructor = MapField).className = \"MapField\";\n\nvar types   = require(36),\n    util    = require(37);\n\n/**\n * Constructs a new map field instance.\n * @classdesc Reflected map field.\n * @extends FieldBase\n * @constructor\n * @param {string} name Unique name within its namespace\n * @param {number} id Unique id within its namespace\n * @param {string} keyType Key type\n * @param {string} type Value type\n * @param {Object.<string,*>} [options] Declared options\n * @param {string} [comment] Comment associated with this field\n */\nfunction MapField(name, id, keyType, type, options, comment) {\n    Field.call(this, name, id, type, undefined, undefined, options, comment);\n\n    /* istanbul ignore if */\n    if (!util.isString(keyType))\n        throw TypeError(\"keyType must be a string\");\n\n    /**\n     * Key type.\n     * @type {string}\n     */\n    this.keyType = keyType; // toJSON, marker\n\n    /**\n     * Resolved key type if not a basic type.\n     * @type {ReflectionObject|null}\n     */\n    this.resolvedKeyType = null;\n\n    // Overrides Field#map\n    this.map = true;\n}\n\n/**\n * Map field descriptor.\n * @interface IMapField\n * @extends {IField}\n * @property {string} keyType Key type\n */\n\n/**\n * Extension map field descriptor.\n * @interface IExtensionMapField\n * @extends IMapField\n * @property {string} extend Extended type\n */\n\n/**\n * Constructs a map field from a map field descriptor.\n * @param {string} name Field name\n * @param {IMapField} json Map field descriptor\n * @returns {MapField} Created map field\n * @throws {TypeError} If arguments are invalid\n */\nMapField.fromJSON = function fromJSON(name, json) {\n    return new MapField(name, json.id, json.keyType, json.type, json.options, json.comment);\n};\n\n/**\n * Converts this map field to a map field descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IMapField} Map field descriptor\n */\nMapField.prototype.toJSON = function toJSON(toJSONOptions) {\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"keyType\" , this.keyType,\n        \"type\"    , this.type,\n        \"id\"      , this.id,\n        \"extend\"  , this.extend,\n        \"options\" , this.options,\n        \"comment\" , keepComments ? this.comment : undefined\n    ]);\n};\n\n/**\n * @override\n */\nMapField.prototype.resolve = function resolve() {\n    if (this.resolved)\n        return this;\n\n    // Besides a value type, map fields have a key type that may be \"any scalar type except for floating point types and bytes\"\n    if (types.mapKey[this.keyType] === undefined)\n        throw Error(\"invalid key type: \" + this.keyType);\n\n    return Field.prototype.resolve.call(this);\n};\n\n/**\n * Map field decorator (TypeScript).\n * @name MapField.d\n * @function\n * @param {number} fieldId Field id\n * @param {\"int32\"|\"uint32\"|\"sint32\"|\"fixed32\"|\"sfixed32\"|\"int64\"|\"uint64\"|\"sint64\"|\"fixed64\"|\"sfixed64\"|\"bool\"|\"string\"} fieldKeyType Field key type\n * @param {\"double\"|\"float\"|\"int32\"|\"uint32\"|\"sint32\"|\"fixed32\"|\"sfixed32\"|\"int64\"|\"uint64\"|\"sint64\"|\"fixed64\"|\"sfixed64\"|\"bool\"|\"string\"|\"bytes\"|Object|Constructor<{}>} fieldValueType Field value type\n * @returns {FieldDecorator} Decorator function\n * @template T extends { [key: string]: number | Long | string | boolean | Uint8Array | Buffer | number[] | Message<{}> }\n */\nMapField.d = function decorateMapField(fieldId, fieldKeyType, fieldValueType) {\n\n    // submessage value: decorate the submessage and use its name as the type\n    if (typeof fieldValueType === \"function\")\n        fieldValueType = util.decorateType(fieldValueType).name;\n\n    // enum reference value: create a reflected copy of the enum and keep reuseing it\n    else if (fieldValueType && typeof fieldValueType === \"object\")\n        fieldValueType = util.decorateEnum(fieldValueType).name;\n\n    return function mapFieldDecorator(prototype, fieldName) {\n        util.decorateType(prototype.constructor)\n            .add(new MapField(fieldName, fieldId, fieldKeyType, fieldValueType));\n    };\n};\n\n},{\"16\":16,\"36\":36,\"37\":37}],21:[function(require,module,exports){\n\"use strict\";\nmodule.exports = Message;\n\nvar util = require(39);\n\n/**\n * Constructs a new message instance.\n * @classdesc Abstract runtime message.\n * @constructor\n * @param {Properties<T>} [properties] Properties to set\n * @template T extends object\n */\nfunction Message(properties) {\n    // not used internally\n    if (properties)\n        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n            this[keys[i]] = properties[keys[i]];\n}\n\n/**\n * Reference to the reflected type.\n * @name Message.$type\n * @type {Type}\n * @readonly\n */\n\n/**\n * Reference to the reflected type.\n * @name Message#$type\n * @type {Type}\n * @readonly\n */\n\n/*eslint-disable valid-jsdoc*/\n\n/**\n * Creates a new message of this type using the specified properties.\n * @param {Object.<string,*>} [properties] Properties to set\n * @returns {Message<T>} Message instance\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.create = function create(properties) {\n    return this.$type.create(properties);\n};\n\n/**\n * Encodes a message of this type.\n * @param {T|Object.<string,*>} message Message to encode\n * @param {Writer} [writer] Writer to use\n * @returns {Writer} Writer\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.encode = function encode(message, writer) {\n    return this.$type.encode(message, writer);\n};\n\n/**\n * Encodes a message of this type preceeded by its length as a varint.\n * @param {T|Object.<string,*>} message Message to encode\n * @param {Writer} [writer] Writer to use\n * @returns {Writer} Writer\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.$type.encodeDelimited(message, writer);\n};\n\n/**\n * Decodes a message of this type.\n * @name Message.decode\n * @function\n * @param {Reader|Uint8Array} reader Reader or buffer to decode\n * @returns {T} Decoded message\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.decode = function decode(reader) {\n    return this.$type.decode(reader);\n};\n\n/**\n * Decodes a message of this type preceeded by its length as a varint.\n * @name Message.decodeDelimited\n * @function\n * @param {Reader|Uint8Array} reader Reader or buffer to decode\n * @returns {T} Decoded message\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.decodeDelimited = function decodeDelimited(reader) {\n    return this.$type.decodeDelimited(reader);\n};\n\n/**\n * Verifies a message of this type.\n * @name Message.verify\n * @function\n * @param {Object.<string,*>} message Plain object to verify\n * @returns {string|null} `null` if valid, otherwise the reason why it is not\n */\nMessage.verify = function verify(message) {\n    return this.$type.verify(message);\n};\n\n/**\n * Creates a new message of this type from a plain object. Also converts values to their respective internal types.\n * @param {Object.<string,*>} object Plain object\n * @returns {T} Message instance\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.fromObject = function fromObject(object) {\n    return this.$type.fromObject(object);\n};\n\n/**\n * Creates a plain object from a message of this type. Also converts values to other types if specified.\n * @param {T} message Message instance\n * @param {IConversionOptions} [options] Conversion options\n * @returns {Object.<string,*>} Plain object\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.toObject = function toObject(message, options) {\n    return this.$type.toObject(message, options);\n};\n\n/**\n * Converts this message to JSON.\n * @returns {Object.<string,*>} JSON object\n */\nMessage.prototype.toJSON = function toJSON() {\n    return this.$type.toObject(this, util.toJSONOptions);\n};\n\n/*eslint-enable valid-jsdoc*/\n},{\"39\":39}],22:[function(require,module,exports){\n\"use strict\";\nmodule.exports = Method;\n\n// extends ReflectionObject\nvar ReflectionObject = require(24);\n((Method.prototype = Object.create(ReflectionObject.prototype)).constructor = Method).className = \"Method\";\n\nvar util = require(37);\n\n/**\n * Constructs a new service method instance.\n * @classdesc Reflected service method.\n * @extends ReflectionObject\n * @constructor\n * @param {string} name Method name\n * @param {string|undefined} type Method type, usually `\"rpc\"`\n * @param {string} requestType Request message type\n * @param {string} responseType Response message type\n * @param {boolean|Object.<string,*>} [requestStream] Whether the request is streamed\n * @param {boolean|Object.<string,*>} [responseStream] Whether the response is streamed\n * @param {Object.<string,*>} [options] Declared options\n * @param {string} [comment] The comment for this method\n */\nfunction Method(name, type, requestType, responseType, requestStream, responseStream, options, comment) {\n\n    /* istanbul ignore next */\n    if (util.isObject(requestStream)) {\n        options = requestStream;\n        requestStream = responseStream = undefined;\n    } else if (util.isObject(responseStream)) {\n        options = responseStream;\n        responseStream = undefined;\n    }\n\n    /* istanbul ignore if */\n    if (!(type === undefined || util.isString(type)))\n        throw TypeError(\"type must be a string\");\n\n    /* istanbul ignore if */\n    if (!util.isString(requestType))\n        throw TypeError(\"requestType must be a string\");\n\n    /* istanbul ignore if */\n    if (!util.isString(responseType))\n        throw TypeError(\"responseType must be a string\");\n\n    ReflectionObject.call(this, name, options);\n\n    /**\n     * Method type.\n     * @type {string}\n     */\n    this.type = type || \"rpc\"; // toJSON\n\n    /**\n     * Request type.\n     * @type {string}\n     */\n    this.requestType = requestType; // toJSON, marker\n\n    /**\n     * Whether requests are streamed or not.\n     * @type {boolean|undefined}\n     */\n    this.requestStream = requestStream ? true : undefined; // toJSON\n\n    /**\n     * Response type.\n     * @type {string}\n     */\n    this.responseType = responseType; // toJSON\n\n    /**\n     * Whether responses are streamed or not.\n     * @type {boolean|undefined}\n     */\n    this.responseStream = responseStream ? true : undefined; // toJSON\n\n    /**\n     * Resolved request type.\n     * @type {Type|null}\n     */\n    this.resolvedRequestType = null;\n\n    /**\n     * Resolved response type.\n     * @type {Type|null}\n     */\n    this.resolvedResponseType = null;\n\n    /**\n     * Comment for this method\n     * @type {string|null}\n     */\n    this.comment = comment;\n}\n\n/**\n * Method descriptor.\n * @interface IMethod\n * @property {string} [type=\"rpc\"] Method type\n * @property {string} requestType Request type\n * @property {string} responseType Response type\n * @property {boolean} [requestStream=false] Whether requests are streamed\n * @property {boolean} [responseStream=false] Whether responses are streamed\n * @property {Object.<string,*>} [options] Method options\n */\n\n/**\n * Constructs a method from a method descriptor.\n * @param {string} name Method name\n * @param {IMethod} json Method descriptor\n * @returns {Method} Created method\n * @throws {TypeError} If arguments are invalid\n */\nMethod.fromJSON = function fromJSON(name, json) {\n    return new Method(name, json.type, json.requestType, json.responseType, json.requestStream, json.responseStream, json.options, json.comment);\n};\n\n/**\n * Converts this method to a method descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IMethod} Method descriptor\n */\nMethod.prototype.toJSON = function toJSON(toJSONOptions) {\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"type\"           , this.type !== \"rpc\" && /* istanbul ignore next */ this.type || undefined,\n        \"requestType\"    , this.requestType,\n        \"requestStream\"  , this.requestStream,\n        \"responseType\"   , this.responseType,\n        \"responseStream\" , this.responseStream,\n        \"options\"        , this.options,\n        \"comment\"        , keepComments ? this.comment : undefined\n    ]);\n};\n\n/**\n * @override\n */\nMethod.prototype.resolve = function resolve() {\n\n    /* istanbul ignore if */\n    if (this.resolved)\n        return this;\n\n    this.resolvedRequestType = this.parent.lookupType(this.requestType);\n    this.resolvedResponseType = this.parent.lookupType(this.responseType);\n\n    return ReflectionObject.prototype.resolve.call(this);\n};\n\n},{\"24\":24,\"37\":37}],23:[function(require,module,exports){\n\"use strict\";\nmodule.exports = Namespace;\n\n// extends ReflectionObject\nvar ReflectionObject = require(24);\n((Namespace.prototype = Object.create(ReflectionObject.prototype)).constructor = Namespace).className = \"Namespace\";\n\nvar Enum     = require(15),\n    Field    = require(16),\n    util     = require(37);\n\nvar Type,    // cyclic\n    Service; // \"\n\n/**\n * Constructs a new namespace instance.\n * @name Namespace\n * @classdesc Reflected namespace.\n * @extends NamespaceBase\n * @constructor\n * @param {string} name Namespace name\n * @param {Object.<string,*>} [options] Declared options\n */\n\n/**\n * Constructs a namespace from JSON.\n * @memberof Namespace\n * @function\n * @param {string} name Namespace name\n * @param {Object.<string,*>} json JSON object\n * @returns {Namespace} Created namespace\n * @throws {TypeError} If arguments are invalid\n */\nNamespace.fromJSON = function fromJSON(name, json) {\n    return new Namespace(name, json.options).addJSON(json.nested);\n};\n\n/**\n * Converts an array of reflection objects to JSON.\n * @memberof Namespace\n * @param {ReflectionObject[]} array Object array\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {Object.<string,*>|undefined} JSON object or `undefined` when array is empty\n */\nfunction arrayToJSON(array, toJSONOptions) {\n    if (!(array && array.length))\n        return undefined;\n    var obj = {};\n    for (var i = 0; i < array.length; ++i)\n        obj[array[i].name] = array[i].toJSON(toJSONOptions);\n    return obj;\n}\n\nNamespace.arrayToJSON = arrayToJSON;\n\n/**\n * Tests if the specified id is reserved.\n * @param {Array.<number[]|string>|undefined} reserved Array of reserved ranges and names\n * @param {number} id Id to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nNamespace.isReservedId = function isReservedId(reserved, id) {\n    if (reserved)\n        for (var i = 0; i < reserved.length; ++i)\n            if (typeof reserved[i] !== \"string\" && reserved[i][0] <= id && reserved[i][1] >= id)\n                return true;\n    return false;\n};\n\n/**\n * Tests if the specified name is reserved.\n * @param {Array.<number[]|string>|undefined} reserved Array of reserved ranges and names\n * @param {string} name Name to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nNamespace.isReservedName = function isReservedName(reserved, name) {\n    if (reserved)\n        for (var i = 0; i < reserved.length; ++i)\n            if (reserved[i] === name)\n                return true;\n    return false;\n};\n\n/**\n * Not an actual constructor. Use {@link Namespace} instead.\n * @classdesc Base class of all reflection objects containing nested objects. This is not an actual class but here for the sake of having consistent type definitions.\n * @exports NamespaceBase\n * @extends ReflectionObject\n * @abstract\n * @constructor\n * @param {string} name Namespace name\n * @param {Object.<string,*>} [options] Declared options\n * @see {@link Namespace}\n */\nfunction Namespace(name, options) {\n    ReflectionObject.call(this, name, options);\n\n    /**\n     * Nested objects by name.\n     * @type {Object.<string,ReflectionObject>|undefined}\n     */\n    this.nested = undefined; // toJSON\n\n    /**\n     * Cached nested objects as an array.\n     * @type {ReflectionObject[]|null}\n     * @private\n     */\n    this._nestedArray = null;\n}\n\nfunction clearCache(namespace) {\n    namespace._nestedArray = null;\n    return namespace;\n}\n\n/**\n * Nested objects of this namespace as an array for iteration.\n * @name NamespaceBase#nestedArray\n * @type {ReflectionObject[]}\n * @readonly\n */\nObject.defineProperty(Namespace.prototype, \"nestedArray\", {\n    get: function() {\n        return this._nestedArray || (this._nestedArray = util.toArray(this.nested));\n    }\n});\n\n/**\n * Namespace descriptor.\n * @interface INamespace\n * @property {Object.<string,*>} [options] Namespace options\n * @property {Object.<string,AnyNestedObject>} [nested] Nested object descriptors\n */\n\n/**\n * Any extension field descriptor.\n * @typedef AnyExtensionField\n * @type {IExtensionField|IExtensionMapField}\n */\n\n/**\n * Any nested object descriptor.\n * @typedef AnyNestedObject\n * @type {IEnum|IType|IService|AnyExtensionField|INamespace}\n */\n// ^ BEWARE: VSCode hangs forever when using more than 5 types (that's why AnyExtensionField exists in the first place)\n\n/**\n * Converts this namespace to a namespace descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {INamespace} Namespace descriptor\n */\nNamespace.prototype.toJSON = function toJSON(toJSONOptions) {\n    return util.toObject([\n        \"options\" , this.options,\n        \"nested\"  , arrayToJSON(this.nestedArray, toJSONOptions)\n    ]);\n};\n\n/**\n * Adds nested objects to this namespace from nested object descriptors.\n * @param {Object.<string,AnyNestedObject>} nestedJson Any nested object descriptors\n * @returns {Namespace} `this`\n */\nNamespace.prototype.addJSON = function addJSON(nestedJson) {\n    var ns = this;\n    /* istanbul ignore else */\n    if (nestedJson) {\n        for (var names = Object.keys(nestedJson), i = 0, nested; i < names.length; ++i) {\n            nested = nestedJson[names[i]];\n            ns.add( // most to least likely\n                ( nested.fields !== undefined\n                ? Type.fromJSON\n                : nested.values !== undefined\n                ? Enum.fromJSON\n                : nested.methods !== undefined\n                ? Service.fromJSON\n                : nested.id !== undefined\n                ? Field.fromJSON\n                : Namespace.fromJSON )(names[i], nested)\n            );\n        }\n    }\n    return this;\n};\n\n/**\n * Gets the nested object of the specified name.\n * @param {string} name Nested object name\n * @returns {ReflectionObject|null} The reflection object or `null` if it doesn't exist\n */\nNamespace.prototype.get = function get(name) {\n    return this.nested && this.nested[name]\n        || null;\n};\n\n/**\n * Gets the values of the nested {@link Enum|enum} of the specified name.\n * This methods differs from {@link Namespace#get|get} in that it returns an enum's values directly and throws instead of returning `null`.\n * @param {string} name Nested enum name\n * @returns {Object.<string,number>} Enum values\n * @throws {Error} If there is no such enum\n */\nNamespace.prototype.getEnum = function getEnum(name) {\n    if (this.nested && this.nested[name] instanceof Enum)\n        return this.nested[name].values;\n    throw Error(\"no such enum: \" + name);\n};\n\n/**\n * Adds a nested object to this namespace.\n * @param {ReflectionObject} object Nested object to add\n * @returns {Namespace} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If there is already a nested object with this name\n */\nNamespace.prototype.add = function add(object) {\n\n    if (!(object instanceof Field && object.extend !== undefined || object instanceof Type || object instanceof Enum || object instanceof Service || object instanceof Namespace))\n        throw TypeError(\"object must be a valid nested object\");\n\n    if (!this.nested)\n        this.nested = {};\n    else {\n        var prev = this.get(object.name);\n        if (prev) {\n            if (prev instanceof Namespace && object instanceof Namespace && !(prev instanceof Type || prev instanceof Service)) {\n                // replace plain namespace but keep existing nested elements and options\n                var nested = prev.nestedArray;\n                for (var i = 0; i < nested.length; ++i)\n                    object.add(nested[i]);\n                this.remove(prev);\n                if (!this.nested)\n                    this.nested = {};\n                object.setOptions(prev.options, true);\n\n            } else\n                throw Error(\"duplicate name '\" + object.name + \"' in \" + this);\n        }\n    }\n    this.nested[object.name] = object;\n    object.onAdd(this);\n    return clearCache(this);\n};\n\n/**\n * Removes a nested object from this namespace.\n * @param {ReflectionObject} object Nested object to remove\n * @returns {Namespace} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If `object` is not a member of this namespace\n */\nNamespace.prototype.remove = function remove(object) {\n\n    if (!(object instanceof ReflectionObject))\n        throw TypeError(\"object must be a ReflectionObject\");\n    if (object.parent !== this)\n        throw Error(object + \" is not a member of \" + this);\n\n    delete this.nested[object.name];\n    if (!Object.keys(this.nested).length)\n        this.nested = undefined;\n\n    object.onRemove(this);\n    return clearCache(this);\n};\n\n/**\n * Defines additial namespaces within this one if not yet existing.\n * @param {string|string[]} path Path to create\n * @param {*} [json] Nested types to create from JSON\n * @returns {Namespace} Pointer to the last namespace created or `this` if path is empty\n */\nNamespace.prototype.define = function define(path, json) {\n\n    if (util.isString(path))\n        path = path.split(\".\");\n    else if (!Array.isArray(path))\n        throw TypeError(\"illegal path\");\n    if (path && path.length && path[0] === \"\")\n        throw Error(\"path must be relative\");\n\n    var ptr = this;\n    while (path.length > 0) {\n        var part = path.shift();\n        if (ptr.nested && ptr.nested[part]) {\n            ptr = ptr.nested[part];\n            if (!(ptr instanceof Namespace))\n                throw Error(\"path conflicts with non-namespace objects\");\n        } else\n            ptr.add(ptr = new Namespace(part));\n    }\n    if (json)\n        ptr.addJSON(json);\n    return ptr;\n};\n\n/**\n * Resolves this namespace's and all its nested objects' type references. Useful to validate a reflection tree, but comes at a cost.\n * @returns {Namespace} `this`\n */\nNamespace.prototype.resolveAll = function resolveAll() {\n    var nested = this.nestedArray, i = 0;\n    while (i < nested.length)\n        if (nested[i] instanceof Namespace)\n            nested[i++].resolveAll();\n        else\n            nested[i++].resolve();\n    return this.resolve();\n};\n\n/**\n * Recursively looks up the reflection object matching the specified path in the scope of this namespace.\n * @param {string|string[]} path Path to look up\n * @param {*|Array.<*>} filterTypes Filter types, any combination of the constructors of `protobuf.Type`, `protobuf.Enum`, `protobuf.Service` etc.\n * @param {boolean} [parentAlreadyChecked=false] If known, whether the parent has already been checked\n * @returns {ReflectionObject|null} Looked up object or `null` if none could be found\n */\nNamespace.prototype.lookup = function lookup(path, filterTypes, parentAlreadyChecked) {\n\n    /* istanbul ignore next */\n    if (typeof filterTypes === \"boolean\") {\n        parentAlreadyChecked = filterTypes;\n        filterTypes = undefined;\n    } else if (filterTypes && !Array.isArray(filterTypes))\n        filterTypes = [ filterTypes ];\n\n    if (util.isString(path) && path.length) {\n        if (path === \".\")\n            return this.root;\n        path = path.split(\".\");\n    } else if (!path.length)\n        return this;\n\n    // Start at root if path is absolute\n    if (path[0] === \"\")\n        return this.root.lookup(path.slice(1), filterTypes);\n\n    // Test if the first part matches any nested object, and if so, traverse if path contains more\n    var found = this.get(path[0]);\n    if (found) {\n        if (path.length === 1) {\n            if (!filterTypes || filterTypes.indexOf(found.constructor) > -1)\n                return found;\n        } else if (found instanceof Namespace && (found = found.lookup(path.slice(1), filterTypes, true)))\n            return found;\n\n    // Otherwise try each nested namespace\n    } else\n        for (var i = 0; i < this.nestedArray.length; ++i)\n            if (this._nestedArray[i] instanceof Namespace && (found = this._nestedArray[i].lookup(path, filterTypes, true)))\n                return found;\n\n    // If there hasn't been a match, try again at the parent\n    if (this.parent === null || parentAlreadyChecked)\n        return null;\n    return this.parent.lookup(path, filterTypes);\n};\n\n/**\n * Looks up the reflection object at the specified path, relative to this namespace.\n * @name NamespaceBase#lookup\n * @function\n * @param {string|string[]} path Path to look up\n * @param {boolean} [parentAlreadyChecked=false] Whether the parent has already been checked\n * @returns {ReflectionObject|null} Looked up object or `null` if none could be found\n * @variation 2\n */\n// lookup(path: string, [parentAlreadyChecked: boolean])\n\n/**\n * Looks up the {@link Type|type} at the specified path, relative to this namespace.\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\n * @param {string|string[]} path Path to look up\n * @returns {Type} Looked up type\n * @throws {Error} If `path` does not point to a type\n */\nNamespace.prototype.lookupType = function lookupType(path) {\n    var found = this.lookup(path, [ Type ]);\n    if (!found)\n        throw Error(\"no such type: \" + path);\n    return found;\n};\n\n/**\n * Looks up the values of the {@link Enum|enum} at the specified path, relative to this namespace.\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\n * @param {string|string[]} path Path to look up\n * @returns {Enum} Looked up enum\n * @throws {Error} If `path` does not point to an enum\n */\nNamespace.prototype.lookupEnum = function lookupEnum(path) {\n    var found = this.lookup(path, [ Enum ]);\n    if (!found)\n        throw Error(\"no such Enum '\" + path + \"' in \" + this);\n    return found;\n};\n\n/**\n * Looks up the {@link Type|type} or {@link Enum|enum} at the specified path, relative to this namespace.\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\n * @param {string|string[]} path Path to look up\n * @returns {Type} Looked up type or enum\n * @throws {Error} If `path` does not point to a type or enum\n */\nNamespace.prototype.lookupTypeOrEnum = function lookupTypeOrEnum(path) {\n    var found = this.lookup(path, [ Type, Enum ]);\n    if (!found)\n        throw Error(\"no such Type or Enum '\" + path + \"' in \" + this);\n    return found;\n};\n\n/**\n * Looks up the {@link Service|service} at the specified path, relative to this namespace.\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\n * @param {string|string[]} path Path to look up\n * @returns {Service} Looked up service\n * @throws {Error} If `path` does not point to a service\n */\nNamespace.prototype.lookupService = function lookupService(path) {\n    var found = this.lookup(path, [ Service ]);\n    if (!found)\n        throw Error(\"no such Service '\" + path + \"' in \" + this);\n    return found;\n};\n\nNamespace._configure = function(Type_, Service_) {\n    Type    = Type_;\n    Service = Service_;\n};\n\n},{\"15\":15,\"16\":16,\"24\":24,\"37\":37}],24:[function(require,module,exports){\n\"use strict\";\nmodule.exports = ReflectionObject;\n\nReflectionObject.className = \"ReflectionObject\";\n\nvar util = require(37);\n\nvar Root; // cyclic\n\n/**\n * Constructs a new reflection object instance.\n * @classdesc Base class of all reflection objects.\n * @constructor\n * @param {string} name Object name\n * @param {Object.<string,*>} [options] Declared options\n * @abstract\n */\nfunction ReflectionObject(name, options) {\n\n    if (!util.isString(name))\n        throw TypeError(\"name must be a string\");\n\n    if (options && !util.isObject(options))\n        throw TypeError(\"options must be an object\");\n\n    /**\n     * Options.\n     * @type {Object.<string,*>|undefined}\n     */\n    this.options = options; // toJSON\n\n    /**\n     * Unique name within its namespace.\n     * @type {string}\n     */\n    this.name = name;\n\n    /**\n     * Parent namespace.\n     * @type {Namespace|null}\n     */\n    this.parent = null;\n\n    /**\n     * Whether already resolved or not.\n     * @type {boolean}\n     */\n    this.resolved = false;\n\n    /**\n     * Comment text, if any.\n     * @type {string|null}\n     */\n    this.comment = null;\n\n    /**\n     * Defining file name.\n     * @type {string|null}\n     */\n    this.filename = null;\n}\n\nObject.defineProperties(ReflectionObject.prototype, {\n\n    /**\n     * Reference to the root namespace.\n     * @name ReflectionObject#root\n     * @type {Root}\n     * @readonly\n     */\n    root: {\n        get: function() {\n            var ptr = this;\n            while (ptr.parent !== null)\n                ptr = ptr.parent;\n            return ptr;\n        }\n    },\n\n    /**\n     * Full name including leading dot.\n     * @name ReflectionObject#fullName\n     * @type {string}\n     * @readonly\n     */\n    fullName: {\n        get: function() {\n            var path = [ this.name ],\n                ptr = this.parent;\n            while (ptr) {\n                path.unshift(ptr.name);\n                ptr = ptr.parent;\n            }\n            return path.join(\".\");\n        }\n    }\n});\n\n/**\n * Converts this reflection object to its descriptor representation.\n * @returns {Object.<string,*>} Descriptor\n * @abstract\n */\nReflectionObject.prototype.toJSON = /* istanbul ignore next */ function toJSON() {\n    throw Error(); // not implemented, shouldn't happen\n};\n\n/**\n * Called when this object is added to a parent.\n * @param {ReflectionObject} parent Parent added to\n * @returns {undefined}\n */\nReflectionObject.prototype.onAdd = function onAdd(parent) {\n    if (this.parent && this.parent !== parent)\n        this.parent.remove(this);\n    this.parent = parent;\n    this.resolved = false;\n    var root = parent.root;\n    if (root instanceof Root)\n        root._handleAdd(this);\n};\n\n/**\n * Called when this object is removed from a parent.\n * @param {ReflectionObject} parent Parent removed from\n * @returns {undefined}\n */\nReflectionObject.prototype.onRemove = function onRemove(parent) {\n    var root = parent.root;\n    if (root instanceof Root)\n        root._handleRemove(this);\n    this.parent = null;\n    this.resolved = false;\n};\n\n/**\n * Resolves this objects type references.\n * @returns {ReflectionObject} `this`\n */\nReflectionObject.prototype.resolve = function resolve() {\n    if (this.resolved)\n        return this;\n    if (this.root instanceof Root)\n        this.resolved = true; // only if part of a root\n    return this;\n};\n\n/**\n * Gets an option value.\n * @param {string} name Option name\n * @returns {*} Option value or `undefined` if not set\n */\nReflectionObject.prototype.getOption = function getOption(name) {\n    if (this.options)\n        return this.options[name];\n    return undefined;\n};\n\n/**\n * Sets an option.\n * @param {string} name Option name\n * @param {*} value Option value\n * @param {boolean} [ifNotSet] Sets the option only if it isn't currently set\n * @returns {ReflectionObject} `this`\n */\nReflectionObject.prototype.setOption = function setOption(name, value, ifNotSet) {\n    if (!ifNotSet || !this.options || this.options[name] === undefined)\n        (this.options || (this.options = {}))[name] = value;\n    return this;\n};\n\n/**\n * Sets multiple options.\n * @param {Object.<string,*>} options Options to set\n * @param {boolean} [ifNotSet] Sets an option only if it isn't currently set\n * @returns {ReflectionObject} `this`\n */\nReflectionObject.prototype.setOptions = function setOptions(options, ifNotSet) {\n    if (options)\n        for (var keys = Object.keys(options), i = 0; i < keys.length; ++i)\n            this.setOption(keys[i], options[keys[i]], ifNotSet);\n    return this;\n};\n\n/**\n * Converts this instance to its string representation.\n * @returns {string} Class name[, space, full name]\n */\nReflectionObject.prototype.toString = function toString() {\n    var className = this.constructor.className,\n        fullName  = this.fullName;\n    if (fullName.length)\n        return className + \" \" + fullName;\n    return className;\n};\n\nReflectionObject._configure = function(Root_) {\n    Root = Root_;\n};\n\n},{\"37\":37}],25:[function(require,module,exports){\n\"use strict\";\nmodule.exports = OneOf;\n\n// extends ReflectionObject\nvar ReflectionObject = require(24);\n((OneOf.prototype = Object.create(ReflectionObject.prototype)).constructor = OneOf).className = \"OneOf\";\n\nvar Field = require(16),\n    util  = require(37);\n\n/**\n * Constructs a new oneof instance.\n * @classdesc Reflected oneof.\n * @extends ReflectionObject\n * @constructor\n * @param {string} name Oneof name\n * @param {string[]|Object.<string,*>} [fieldNames] Field names\n * @param {Object.<string,*>} [options] Declared options\n * @param {string} [comment] Comment associated with this field\n */\nfunction OneOf(name, fieldNames, options, comment) {\n    if (!Array.isArray(fieldNames)) {\n        options = fieldNames;\n        fieldNames = undefined;\n    }\n    ReflectionObject.call(this, name, options);\n\n    /* istanbul ignore if */\n    if (!(fieldNames === undefined || Array.isArray(fieldNames)))\n        throw TypeError(\"fieldNames must be an Array\");\n\n    /**\n     * Field names that belong to this oneof.\n     * @type {string[]}\n     */\n    this.oneof = fieldNames || []; // toJSON, marker\n\n    /**\n     * Fields that belong to this oneof as an array for iteration.\n     * @type {Field[]}\n     * @readonly\n     */\n    this.fieldsArray = []; // declared readonly for conformance, possibly not yet added to parent\n\n    /**\n     * Comment for this field.\n     * @type {string|null}\n     */\n    this.comment = comment;\n}\n\n/**\n * Oneof descriptor.\n * @interface IOneOf\n * @property {Array.<string>} oneof Oneof field names\n * @property {Object.<string,*>} [options] Oneof options\n */\n\n/**\n * Constructs a oneof from a oneof descriptor.\n * @param {string} name Oneof name\n * @param {IOneOf} json Oneof descriptor\n * @returns {OneOf} Created oneof\n * @throws {TypeError} If arguments are invalid\n */\nOneOf.fromJSON = function fromJSON(name, json) {\n    return new OneOf(name, json.oneof, json.options, json.comment);\n};\n\n/**\n * Converts this oneof to a oneof descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IOneOf} Oneof descriptor\n */\nOneOf.prototype.toJSON = function toJSON(toJSONOptions) {\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"options\" , this.options,\n        \"oneof\"   , this.oneof,\n        \"comment\" , keepComments ? this.comment : undefined\n    ]);\n};\n\n/**\n * Adds the fields of the specified oneof to the parent if not already done so.\n * @param {OneOf} oneof The oneof\n * @returns {undefined}\n * @inner\n * @ignore\n */\nfunction addFieldsToParent(oneof) {\n    if (oneof.parent)\n        for (var i = 0; i < oneof.fieldsArray.length; ++i)\n            if (!oneof.fieldsArray[i].parent)\n                oneof.parent.add(oneof.fieldsArray[i]);\n}\n\n/**\n * Adds a field to this oneof and removes it from its current parent, if any.\n * @param {Field} field Field to add\n * @returns {OneOf} `this`\n */\nOneOf.prototype.add = function add(field) {\n\n    /* istanbul ignore if */\n    if (!(field instanceof Field))\n        throw TypeError(\"field must be a Field\");\n\n    if (field.parent && field.parent !== this.parent)\n        field.parent.remove(field);\n    this.oneof.push(field.name);\n    this.fieldsArray.push(field);\n    field.partOf = this; // field.parent remains null\n    addFieldsToParent(this);\n    return this;\n};\n\n/**\n * Removes a field from this oneof and puts it back to the oneof's parent.\n * @param {Field} field Field to remove\n * @returns {OneOf} `this`\n */\nOneOf.prototype.remove = function remove(field) {\n\n    /* istanbul ignore if */\n    if (!(field instanceof Field))\n        throw TypeError(\"field must be a Field\");\n\n    var index = this.fieldsArray.indexOf(field);\n\n    /* istanbul ignore if */\n    if (index < 0)\n        throw Error(field + \" is not a member of \" + this);\n\n    this.fieldsArray.splice(index, 1);\n    index = this.oneof.indexOf(field.name);\n\n    /* istanbul ignore else */\n    if (index > -1) // theoretical\n        this.oneof.splice(index, 1);\n\n    field.partOf = null;\n    return this;\n};\n\n/**\n * @override\n */\nOneOf.prototype.onAdd = function onAdd(parent) {\n    ReflectionObject.prototype.onAdd.call(this, parent);\n    var self = this;\n    // Collect present fields\n    for (var i = 0; i < this.oneof.length; ++i) {\n        var field = parent.get(this.oneof[i]);\n        if (field && !field.partOf) {\n            field.partOf = self;\n            self.fieldsArray.push(field);\n        }\n    }\n    // Add not yet present fields\n    addFieldsToParent(this);\n};\n\n/**\n * @override\n */\nOneOf.prototype.onRemove = function onRemove(parent) {\n    for (var i = 0, field; i < this.fieldsArray.length; ++i)\n        if ((field = this.fieldsArray[i]).parent)\n            field.parent.remove(field);\n    ReflectionObject.prototype.onRemove.call(this, parent);\n};\n\n/**\n * Decorator function as returned by {@link OneOf.d} (TypeScript).\n * @typedef OneOfDecorator\n * @type {function}\n * @param {Object} prototype Target prototype\n * @param {string} oneofName OneOf name\n * @returns {undefined}\n */\n\n/**\n * OneOf decorator (TypeScript).\n * @function\n * @param {...string} fieldNames Field names\n * @returns {OneOfDecorator} Decorator function\n * @template T extends string\n */\nOneOf.d = function decorateOneOf() {\n    var fieldNames = new Array(arguments.length),\n        index = 0;\n    while (index < arguments.length)\n        fieldNames[index] = arguments[index++];\n    return function oneOfDecorator(prototype, oneofName) {\n        util.decorateType(prototype.constructor)\n            .add(new OneOf(oneofName, fieldNames));\n        Object.defineProperty(prototype, oneofName, {\n            get: util.oneOfGetter(fieldNames),\n            set: util.oneOfSetter(fieldNames)\n        });\n    };\n};\n\n},{\"16\":16,\"24\":24,\"37\":37}],26:[function(require,module,exports){\n\"use strict\";\nmodule.exports = parse;\n\nparse.filename = null;\nparse.defaults = { keepCase: false };\n\nvar tokenize  = require(34),\n    Root      = require(29),\n    Type      = require(35),\n    Field     = require(16),\n    MapField  = require(20),\n    OneOf     = require(25),\n    Enum      = require(15),\n    Service   = require(33),\n    Method    = require(22),\n    types     = require(36),\n    util      = require(37);\n\nvar base10Re    = /^[1-9][0-9]*$/,\n    base10NegRe = /^-?[1-9][0-9]*$/,\n    base16Re    = /^0[x][0-9a-fA-F]+$/,\n    base16NegRe = /^-?0[x][0-9a-fA-F]+$/,\n    base8Re     = /^0[0-7]+$/,\n    base8NegRe  = /^-?0[0-7]+$/,\n    numberRe    = /^(?![eE])[0-9]*(?:\\.[0-9]*)?(?:[eE][+-]?[0-9]+)?$/,\n    nameRe      = /^[a-zA-Z_][a-zA-Z_0-9]*$/,\n    typeRefRe   = /^(?:\\.?[a-zA-Z_][a-zA-Z_0-9]*)(?:\\.[a-zA-Z_][a-zA-Z_0-9]*)*$/,\n    fqTypeRefRe = /^(?:\\.[a-zA-Z_][a-zA-Z_0-9]*)+$/;\n\n/**\n * Result object returned from {@link parse}.\n * @interface IParserResult\n * @property {string|undefined} package Package name, if declared\n * @property {string[]|undefined} imports Imports, if any\n * @property {string[]|undefined} weakImports Weak imports, if any\n * @property {string|undefined} syntax Syntax, if specified (either `\"proto2\"` or `\"proto3\"`)\n * @property {Root} root Populated root instance\n */\n\n/**\n * Options modifying the behavior of {@link parse}.\n * @interface IParseOptions\n * @property {boolean} [keepCase=false] Keeps field casing instead of converting to camel case\n * @property {boolean} [alternateCommentMode=false] Recognize double-slash comments in addition to doc-block comments.\n */\n\n/**\n * Options modifying the behavior of JSON serialization.\n * @interface IToJSONOptions\n * @property {boolean} [keepComments=false] Serializes comments.\n */\n\n/**\n * Parses the given .proto source and returns an object with the parsed contents.\n * @param {string} source Source contents\n * @param {Root} root Root to populate\n * @param {IParseOptions} [options] Parse options. Defaults to {@link parse.defaults} when omitted.\n * @returns {IParserResult} Parser result\n * @property {string} filename=null Currently processing file name for error reporting, if known\n * @property {IParseOptions} defaults Default {@link IParseOptions}\n */\nfunction parse(source, root, options) {\n    /* eslint-disable callback-return */\n    if (!(root instanceof Root)) {\n        options = root;\n        root = new Root();\n    }\n    if (!options)\n        options = parse.defaults;\n\n    var tn = tokenize(source, options.alternateCommentMode || false),\n        next = tn.next,\n        push = tn.push,\n        peek = tn.peek,\n        skip = tn.skip,\n        cmnt = tn.cmnt;\n\n    var head = true,\n        pkg,\n        imports,\n        weakImports,\n        syntax,\n        isProto3 = false;\n\n    var ptr = root;\n\n    var applyCase = options.keepCase ? function(name) { return name; } : util.camelCase;\n\n    /* istanbul ignore next */\n    function illegal(token, name, insideTryCatch) {\n        var filename = parse.filename;\n        if (!insideTryCatch)\n            parse.filename = null;\n        return Error(\"illegal \" + (name || \"token\") + \" '\" + token + \"' (\" + (filename ? filename + \", \" : \"\") + \"line \" + tn.line + \")\");\n    }\n\n    function readString() {\n        var values = [],\n            token;\n        do {\n            /* istanbul ignore if */\n            if ((token = next()) !== \"\\\"\" && token !== \"'\")\n                throw illegal(token);\n\n            values.push(next());\n            skip(token);\n            token = peek();\n        } while (token === \"\\\"\" || token === \"'\");\n        return values.join(\"\");\n    }\n\n    function readValue(acceptTypeRef) {\n        var token = next();\n        switch (token) {\n            case \"'\":\n            case \"\\\"\":\n                push(token);\n                return readString();\n            case \"true\": case \"TRUE\":\n                return true;\n            case \"false\": case \"FALSE\":\n                return false;\n        }\n        try {\n            return parseNumber(token, /* insideTryCatch */ true);\n        } catch (e) {\n\n            /* istanbul ignore else */\n            if (acceptTypeRef && typeRefRe.test(token))\n                return token;\n\n            /* istanbul ignore next */\n            throw illegal(token, \"value\");\n        }\n    }\n\n    function readRanges(target, acceptStrings) {\n        var token, start;\n        do {\n            if (acceptStrings && ((token = peek()) === \"\\\"\" || token === \"'\"))\n                target.push(readString());\n            else\n                target.push([ start = parseId(next()), skip(\"to\", true) ? parseId(next()) : start ]);\n        } while (skip(\",\", true));\n        skip(\";\");\n    }\n\n    function parseNumber(token, insideTryCatch) {\n        var sign = 1;\n        if (token.charAt(0) === \"-\") {\n            sign = -1;\n            token = token.substring(1);\n        }\n        switch (token) {\n            case \"inf\": case \"INF\": case \"Inf\":\n                return sign * Infinity;\n            case \"nan\": case \"NAN\": case \"Nan\": case \"NaN\":\n                return NaN;\n            case \"0\":\n                return 0;\n        }\n        if (base10Re.test(token))\n            return sign * parseInt(token, 10);\n        if (base16Re.test(token))\n            return sign * parseInt(token, 16);\n        if (base8Re.test(token))\n            return sign * parseInt(token, 8);\n\n        /* istanbul ignore else */\n        if (numberRe.test(token))\n            return sign * parseFloat(token);\n\n        /* istanbul ignore next */\n        throw illegal(token, \"number\", insideTryCatch);\n    }\n\n    function parseId(token, acceptNegative) {\n        switch (token) {\n            case \"max\": case \"MAX\": case \"Max\":\n                return 536870911;\n            case \"0\":\n                return 0;\n        }\n\n        /* istanbul ignore if */\n        if (!acceptNegative && token.charAt(0) === \"-\")\n            throw illegal(token, \"id\");\n\n        if (base10NegRe.test(token))\n            return parseInt(token, 10);\n        if (base16NegRe.test(token))\n            return parseInt(token, 16);\n\n        /* istanbul ignore else */\n        if (base8NegRe.test(token))\n            return parseInt(token, 8);\n\n        /* istanbul ignore next */\n        throw illegal(token, \"id\");\n    }\n\n    function parsePackage() {\n\n        /* istanbul ignore if */\n        if (pkg !== undefined)\n            throw illegal(\"package\");\n\n        pkg = next();\n\n        /* istanbul ignore if */\n        if (!typeRefRe.test(pkg))\n            throw illegal(pkg, \"name\");\n\n        ptr = ptr.define(pkg);\n        skip(\";\");\n    }\n\n    function parseImport() {\n        var token = peek();\n        var whichImports;\n        switch (token) {\n            case \"weak\":\n                whichImports = weakImports || (weakImports = []);\n                next();\n                break;\n            case \"public\":\n                next();\n                // eslint-disable-line no-fallthrough\n            default:\n                whichImports = imports || (imports = []);\n                break;\n        }\n        token = readString();\n        skip(\";\");\n        whichImports.push(token);\n    }\n\n    function parseSyntax() {\n        skip(\"=\");\n        syntax = readString();\n        isProto3 = syntax === \"proto3\";\n\n        /* istanbul ignore if */\n        if (!isProto3 && syntax !== \"proto2\")\n            throw illegal(syntax, \"syntax\");\n\n        skip(\";\");\n    }\n\n    function parseCommon(parent, token) {\n        switch (token) {\n\n            case \"option\":\n                parseOption(parent, token);\n                skip(\";\");\n                return true;\n\n            case \"message\":\n                parseType(parent, token);\n                return true;\n\n            case \"enum\":\n                parseEnum(parent, token);\n                return true;\n\n            case \"service\":\n                parseService(parent, token);\n                return true;\n\n            case \"extend\":\n                parseExtension(parent, token);\n                return true;\n        }\n        return false;\n    }\n\n    function ifBlock(obj, fnIf, fnElse) {\n        var trailingLine = tn.line;\n        if (obj) {\n            obj.comment = cmnt(); // try block-type comment\n            obj.filename = parse.filename;\n        }\n        if (skip(\"{\", true)) {\n            var token;\n            while ((token = next()) !== \"}\")\n                fnIf(token);\n            skip(\";\", true);\n        } else {\n            if (fnElse)\n                fnElse();\n            skip(\";\");\n            if (obj && typeof obj.comment !== \"string\")\n                obj.comment = cmnt(trailingLine); // try line-type comment if no block\n        }\n    }\n\n    function parseType(parent, token) {\n\n        /* istanbul ignore if */\n        if (!nameRe.test(token = next()))\n            throw illegal(token, \"type name\");\n\n        var type = new Type(token);\n        ifBlock(type, function parseType_block(token) {\n            if (parseCommon(type, token))\n                return;\n\n            switch (token) {\n\n                case \"map\":\n                    parseMapField(type, token);\n                    break;\n\n                case \"required\":\n                case \"optional\":\n                case \"repeated\":\n                    parseField(type, token);\n                    break;\n\n                case \"oneof\":\n                    parseOneOf(type, token);\n                    break;\n\n                case \"extensions\":\n                    readRanges(type.extensions || (type.extensions = []));\n                    break;\n\n                case \"reserved\":\n                    readRanges(type.reserved || (type.reserved = []), true);\n                    break;\n\n                default:\n                    /* istanbul ignore if */\n                    if (!isProto3 || !typeRefRe.test(token))\n                        throw illegal(token);\n\n                    push(token);\n                    parseField(type, \"optional\");\n                    break;\n            }\n        });\n        parent.add(type);\n    }\n\n    function parseField(parent, rule, extend) {\n        var type = next();\n        if (type === \"group\") {\n            parseGroup(parent, rule);\n            return;\n        }\n\n        /* istanbul ignore if */\n        if (!typeRefRe.test(type))\n            throw illegal(type, \"type\");\n\n        var name = next();\n\n        /* istanbul ignore if */\n        if (!nameRe.test(name))\n            throw illegal(name, \"name\");\n\n        name = applyCase(name);\n        skip(\"=\");\n\n        var field = new Field(name, parseId(next()), type, rule, extend);\n        ifBlock(field, function parseField_block(token) {\n\n            /* istanbul ignore else */\n            if (token === \"option\") {\n                parseOption(field, token);\n                skip(\";\");\n            } else\n                throw illegal(token);\n\n        }, function parseField_line() {\n            parseInlineOptions(field);\n        });\n        parent.add(field);\n\n        // JSON defaults to packed=true if not set so we have to set packed=false explicity when\n        // parsing proto2 descriptors without the option, where applicable. This must be done for\n        // all known packable types and anything that could be an enum (= is not a basic type).\n        if (!isProto3 && field.repeated && (types.packed[type] !== undefined || types.basic[type] === undefined))\n            field.setOption(\"packed\", false, /* ifNotSet */ true);\n    }\n\n    function parseGroup(parent, rule) {\n        var name = next();\n\n        /* istanbul ignore if */\n        if (!nameRe.test(name))\n            throw illegal(name, \"name\");\n\n        var fieldName = util.lcFirst(name);\n        if (name === fieldName)\n            name = util.ucFirst(name);\n        skip(\"=\");\n        var id = parseId(next());\n        var type = new Type(name);\n        type.group = true;\n        var field = new Field(fieldName, id, name, rule);\n        field.filename = parse.filename;\n        ifBlock(type, function parseGroup_block(token) {\n            switch (token) {\n\n                case \"option\":\n                    parseOption(type, token);\n                    skip(\";\");\n                    break;\n\n                case \"required\":\n                case \"optional\":\n                case \"repeated\":\n                    parseField(type, token);\n                    break;\n\n                /* istanbul ignore next */\n                default:\n                    throw illegal(token); // there are no groups with proto3 semantics\n            }\n        });\n        parent.add(type)\n              .add(field);\n    }\n\n    function parseMapField(parent) {\n        skip(\"<\");\n        var keyType = next();\n\n        /* istanbul ignore if */\n        if (types.mapKey[keyType] === undefined)\n            throw illegal(keyType, \"type\");\n\n        skip(\",\");\n        var valueType = next();\n\n        /* istanbul ignore if */\n        if (!typeRefRe.test(valueType))\n            throw illegal(valueType, \"type\");\n\n        skip(\">\");\n        var name = next();\n\n        /* istanbul ignore if */\n        if (!nameRe.test(name))\n            throw illegal(name, \"name\");\n\n        skip(\"=\");\n        var field = new MapField(applyCase(name), parseId(next()), keyType, valueType);\n        ifBlock(field, function parseMapField_block(token) {\n\n            /* istanbul ignore else */\n            if (token === \"option\") {\n                parseOption(field, token);\n                skip(\";\");\n            } else\n                throw illegal(token);\n\n        }, function parseMapField_line() {\n            parseInlineOptions(field);\n        });\n        parent.add(field);\n    }\n\n    function parseOneOf(parent, token) {\n\n        /* istanbul ignore if */\n        if (!nameRe.test(token = next()))\n            throw illegal(token, \"name\");\n\n        var oneof = new OneOf(applyCase(token));\n        ifBlock(oneof, function parseOneOf_block(token) {\n            if (token === \"option\") {\n                parseOption(oneof, token);\n                skip(\";\");\n            } else {\n                push(token);\n                parseField(oneof, \"optional\");\n            }\n        });\n        parent.add(oneof);\n    }\n\n    function parseEnum(parent, token) {\n\n        /* istanbul ignore if */\n        if (!nameRe.test(token = next()))\n            throw illegal(token, \"name\");\n\n        var enm = new Enum(token);\n        ifBlock(enm, function parseEnum_block(token) {\n          switch(token) {\n            case \"option\":\n              parseOption(enm, token);\n              skip(\";\");\n              break;\n\n            case \"reserved\":\n              readRanges(enm.reserved || (enm.reserved = []), true);\n              break;\n\n            default:\n              parseEnumValue(enm, token);\n          }\n        });\n        parent.add(enm);\n    }\n\n    function parseEnumValue(parent, token) {\n\n        /* istanbul ignore if */\n        if (!nameRe.test(token))\n            throw illegal(token, \"name\");\n\n        skip(\"=\");\n        var value = parseId(next(), true),\n            dummy = {};\n        ifBlock(dummy, function parseEnumValue_block(token) {\n\n            /* istanbul ignore else */\n            if (token === \"option\") {\n                parseOption(dummy, token); // skip\n                skip(\";\");\n            } else\n                throw illegal(token);\n\n        }, function parseEnumValue_line() {\n            parseInlineOptions(dummy); // skip\n        });\n        parent.add(token, value, dummy.comment);\n    }\n\n    function parseOption(parent, token) {\n        var isCustom = skip(\"(\", true);\n\n        /* istanbul ignore if */\n        if (!typeRefRe.test(token = next()))\n            throw illegal(token, \"name\");\n\n        var name = token;\n        if (isCustom) {\n            skip(\")\");\n            name = \"(\" + name + \")\";\n            token = peek();\n            if (fqTypeRefRe.test(token)) {\n                name += token;\n                next();\n            }\n        }\n        skip(\"=\");\n        parseOptionValue(parent, name);\n    }\n\n    function parseOptionValue(parent, name) {\n        if (skip(\"{\", true)) { // { a: \"foo\" b { c: \"bar\" } }\n            do {\n                /* istanbul ignore if */\n                if (!nameRe.test(token = next()))\n                    throw illegal(token, \"name\");\n\n                if (peek() === \"{\")\n                    parseOptionValue(parent, name + \".\" + token);\n                else {\n                    skip(\":\");\n                    if (peek() === \"{\")\n                        parseOptionValue(parent, name + \".\" + token);\n                    else\n                        setOption(parent, name + \".\" + token, readValue(true));\n                }\n            } while (!skip(\"}\", true));\n        } else\n            setOption(parent, name, readValue(true));\n        // Does not enforce a delimiter to be universal\n    }\n\n    function setOption(parent, name, value) {\n        if (parent.setOption)\n            parent.setOption(name, value);\n    }\n\n    function parseInlineOptions(parent) {\n        if (skip(\"[\", true)) {\n            do {\n                parseOption(parent, \"option\");\n            } while (skip(\",\", true));\n            skip(\"]\");\n        }\n        return parent;\n    }\n\n    function parseService(parent, token) {\n\n        /* istanbul ignore if */\n        if (!nameRe.test(token = next()))\n            throw illegal(token, \"service name\");\n\n        var service = new Service(token);\n        ifBlock(service, function parseService_block(token) {\n            if (parseCommon(service, token))\n                return;\n\n            /* istanbul ignore else */\n            if (token === \"rpc\")\n                parseMethod(service, token);\n            else\n                throw illegal(token);\n        });\n        parent.add(service);\n    }\n\n    function parseMethod(parent, token) {\n        var type = token;\n\n        /* istanbul ignore if */\n        if (!nameRe.test(token = next()))\n            throw illegal(token, \"name\");\n\n        var name = token,\n            requestType, requestStream,\n            responseType, responseStream;\n\n        skip(\"(\");\n        if (skip(\"stream\", true))\n            requestStream = true;\n\n        /* istanbul ignore if */\n        if (!typeRefRe.test(token = next()))\n            throw illegal(token);\n\n        requestType = token;\n        skip(\")\"); skip(\"returns\"); skip(\"(\");\n        if (skip(\"stream\", true))\n            responseStream = true;\n\n        /* istanbul ignore if */\n        if (!typeRefRe.test(token = next()))\n            throw illegal(token);\n\n        responseType = token;\n        skip(\")\");\n\n        var method = new Method(name, type, requestType, responseType, requestStream, responseStream);\n        ifBlock(method, function parseMethod_block(token) {\n\n            /* istanbul ignore else */\n            if (token === \"option\") {\n                parseOption(method, token);\n                skip(\";\");\n            } else\n                throw illegal(token);\n\n        });\n        parent.add(method);\n    }\n\n    function parseExtension(parent, token) {\n\n        /* istanbul ignore if */\n        if (!typeRefRe.test(token = next()))\n            throw illegal(token, \"reference\");\n\n        var reference = token;\n        ifBlock(null, function parseExtension_block(token) {\n            switch (token) {\n\n                case \"required\":\n                case \"repeated\":\n                case \"optional\":\n                    parseField(parent, token, reference);\n                    break;\n\n                default:\n                    /* istanbul ignore if */\n                    if (!isProto3 || !typeRefRe.test(token))\n                        throw illegal(token);\n                    push(token);\n                    parseField(parent, \"optional\", reference);\n                    break;\n            }\n        });\n    }\n\n    var token;\n    while ((token = next()) !== null) {\n        switch (token) {\n\n            case \"package\":\n\n                /* istanbul ignore if */\n                if (!head)\n                    throw illegal(token);\n\n                parsePackage();\n                break;\n\n            case \"import\":\n\n                /* istanbul ignore if */\n                if (!head)\n                    throw illegal(token);\n\n                parseImport();\n                break;\n\n            case \"syntax\":\n\n                /* istanbul ignore if */\n                if (!head)\n                    throw illegal(token);\n\n                parseSyntax();\n                break;\n\n            case \"option\":\n\n                /* istanbul ignore if */\n                if (!head)\n                    throw illegal(token);\n\n                parseOption(ptr, token);\n                skip(\";\");\n                break;\n\n            default:\n\n                /* istanbul ignore else */\n                if (parseCommon(ptr, token)) {\n                    head = false;\n                    continue;\n                }\n\n                /* istanbul ignore next */\n                throw illegal(token);\n        }\n    }\n\n    parse.filename = null;\n    return {\n        \"package\"     : pkg,\n        \"imports\"     : imports,\n         weakImports  : weakImports,\n         syntax       : syntax,\n         root         : root\n    };\n}\n\n/**\n * Parses the given .proto source and returns an object with the parsed contents.\n * @name parse\n * @function\n * @param {string} source Source contents\n * @param {IParseOptions} [options] Parse options. Defaults to {@link parse.defaults} when omitted.\n * @returns {IParserResult} Parser result\n * @property {string} filename=null Currently processing file name for error reporting, if known\n * @property {IParseOptions} defaults Default {@link IParseOptions}\n * @variation 2\n */\n\n},{\"15\":15,\"16\":16,\"20\":20,\"22\":22,\"25\":25,\"29\":29,\"33\":33,\"34\":34,\"35\":35,\"36\":36,\"37\":37}],27:[function(require,module,exports){\n\"use strict\";\nmodule.exports = Reader;\n\nvar util      = require(39);\n\nvar BufferReader; // cyclic\n\nvar LongBits  = util.LongBits,\n    utf8      = util.utf8;\n\n/* istanbul ignore next */\nfunction indexOutOfRange(reader, writeLength) {\n    return RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);\n}\n\n/**\n * Constructs a new reader instance using the specified buffer.\n * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n * @param {Uint8Array} buffer Buffer to read from\n */\nfunction Reader(buffer) {\n\n    /**\n     * Read buffer.\n     * @type {Uint8Array}\n     */\n    this.buf = buffer;\n\n    /**\n     * Read buffer position.\n     * @type {number}\n     */\n    this.pos = 0;\n\n    /**\n     * Read buffer length.\n     * @type {number}\n     */\n    this.len = buffer.length;\n}\n\nvar create_array = typeof Uint8Array !== \"undefined\"\n    ? function create_typed_array(buffer) {\n        if (buffer instanceof Uint8Array || Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    }\n    /* istanbul ignore next */\n    : function create_array(buffer) {\n        if (Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    };\n\n/**\n * Creates a new reader using the specified buffer.\n * @function\n * @param {Uint8Array|Buffer} buffer Buffer to read from\n * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}\n * @throws {Error} If `buffer` is not a valid buffer\n */\nReader.create = util.Buffer\n    ? function create_buffer_setup(buffer) {\n        return (Reader.create = function create_buffer(buffer) {\n            return util.Buffer.isBuffer(buffer)\n                ? new BufferReader(buffer)\n                /* istanbul ignore next */\n                : create_array(buffer);\n        })(buffer);\n    }\n    /* istanbul ignore next */\n    : create_array;\n\nReader.prototype._slice = util.Array.prototype.subarray || /* istanbul ignore next */ util.Array.prototype.slice;\n\n/**\n * Reads a varint as an unsigned 32 bit value.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.uint32 = (function read_uint32_setup() {\n    var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)\n    return function read_uint32() {\n        value = (         this.buf[this.pos] & 127       ) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) <<  7) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] &  15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value;\n\n        /* istanbul ignore if */\n        if ((this.pos += 5) > this.len) {\n            this.pos = this.len;\n            throw indexOutOfRange(this, 10);\n        }\n        return value;\n    };\n})();\n\n/**\n * Reads a varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.int32 = function read_int32() {\n    return this.uint32() | 0;\n};\n\n/**\n * Reads a zig-zag encoded varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.sint32 = function read_sint32() {\n    var value = this.uint32();\n    return value >>> 1 ^ -(value & 1) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readLongVarint() {\n    // tends to deopt with local vars for octet etc.\n    var bits = new LongBits(0, 0);\n    var i = 0;\n    if (this.len - this.pos > 4) { // fast route (lo)\n        for (; i < 4; ++i) {\n            // 1st..4th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 5th\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) >>  4) >>> 0;\n        if (this.buf[this.pos++] < 128)\n            return bits;\n        i = 0;\n    } else {\n        for (; i < 3; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 1st..3th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 4th\n        bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;\n        return bits;\n    }\n    if (this.len - this.pos > 4) { // fast route (hi)\n        for (; i < 5; ++i) {\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    } else {\n        for (; i < 5; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    }\n    /* istanbul ignore next */\n    throw Error(\"invalid varint encoding\");\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads a varint as a signed 64 bit value.\n * @name Reader#int64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as an unsigned 64 bit value.\n * @name Reader#uint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a zig-zag encoded varint as a signed 64 bit value.\n * @name Reader#sint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as a boolean.\n * @returns {boolean} Value read\n */\nReader.prototype.bool = function read_bool() {\n    return this.uint32() !== 0;\n};\n\nfunction readFixed32_end(buf, end) { // note that this uses `end`, not `pos`\n    return (buf[end - 4]\n          | buf[end - 3] << 8\n          | buf[end - 2] << 16\n          | buf[end - 1] << 24) >>> 0;\n}\n\n/**\n * Reads fixed 32 bits as an unsigned 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.fixed32 = function read_fixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4);\n};\n\n/**\n * Reads fixed 32 bits as a signed 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.sfixed32 = function read_sfixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readFixed64(/* this: Reader */) {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 8);\n\n    return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads fixed 64 bits.\n * @name Reader#fixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads zig-zag encoded fixed 64 bits.\n * @name Reader#sfixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a float (32 bit) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.float = function read_float() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readFloatLE(this.buf, this.pos);\n    this.pos += 4;\n    return value;\n};\n\n/**\n * Reads a double (64 bit float) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.double = function read_double() {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readDoubleLE(this.buf, this.pos);\n    this.pos += 8;\n    return value;\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @returns {Uint8Array} Value read\n */\nReader.prototype.bytes = function read_bytes() {\n    var length = this.uint32(),\n        start  = this.pos,\n        end    = this.pos + length;\n\n    /* istanbul ignore if */\n    if (end > this.len)\n        throw indexOutOfRange(this, length);\n\n    this.pos += length;\n    if (Array.isArray(this.buf)) // plain array\n        return this.buf.slice(start, end);\n    return start === end // fix for IE 10/Win8 and others' subarray returning array of size 1\n        ? new this.buf.constructor(0)\n        : this._slice.call(this.buf, start, end);\n};\n\n/**\n * Reads a string preceeded by its byte length as a varint.\n * @returns {string} Value read\n */\nReader.prototype.string = function read_string() {\n    var bytes = this.bytes();\n    return utf8.read(bytes, 0, bytes.length);\n};\n\n/**\n * Skips the specified number of bytes if specified, otherwise skips a varint.\n * @param {number} [length] Length if known, otherwise a varint is assumed\n * @returns {Reader} `this`\n */\nReader.prototype.skip = function skip(length) {\n    if (typeof length === \"number\") {\n        /* istanbul ignore if */\n        if (this.pos + length > this.len)\n            throw indexOutOfRange(this, length);\n        this.pos += length;\n    } else {\n        do {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n        } while (this.buf[this.pos++] & 128);\n    }\n    return this;\n};\n\n/**\n * Skips the next element of the specified wire type.\n * @param {number} wireType Wire type received\n * @returns {Reader} `this`\n */\nReader.prototype.skipType = function(wireType) {\n    switch (wireType) {\n        case 0:\n            this.skip();\n            break;\n        case 1:\n            this.skip(8);\n            break;\n        case 2:\n            this.skip(this.uint32());\n            break;\n        case 3:\n            do { // eslint-disable-line no-constant-condition\n                if ((wireType = this.uint32() & 7) === 4)\n                    break;\n                this.skipType(wireType);\n            } while (true);\n            break;\n        case 5:\n            this.skip(4);\n            break;\n\n        /* istanbul ignore next */\n        default:\n            throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\n    }\n    return this;\n};\n\nReader._configure = function(BufferReader_) {\n    BufferReader = BufferReader_;\n\n    var fn = util.Long ? \"toLong\" : /* istanbul ignore next */ \"toNumber\";\n    util.merge(Reader.prototype, {\n\n        int64: function read_int64() {\n            return readLongVarint.call(this)[fn](false);\n        },\n\n        uint64: function read_uint64() {\n            return readLongVarint.call(this)[fn](true);\n        },\n\n        sint64: function read_sint64() {\n            return readLongVarint.call(this).zzDecode()[fn](false);\n        },\n\n        fixed64: function read_fixed64() {\n            return readFixed64.call(this)[fn](true);\n        },\n\n        sfixed64: function read_sfixed64() {\n            return readFixed64.call(this)[fn](false);\n        }\n\n    });\n};\n\n},{\"39\":39}],28:[function(require,module,exports){\n\"use strict\";\nmodule.exports = BufferReader;\n\n// extends Reader\nvar Reader = require(27);\n(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;\n\nvar util = require(39);\n\n/**\n * Constructs a new buffer reader instance.\n * @classdesc Wire format reader using node buffers.\n * @extends Reader\n * @constructor\n * @param {Buffer} buffer Buffer to read from\n */\nfunction BufferReader(buffer) {\n    Reader.call(this, buffer);\n\n    /**\n     * Read buffer.\n     * @name BufferReader#buf\n     * @type {Buffer}\n     */\n}\n\n/* istanbul ignore else */\nif (util.Buffer)\n    BufferReader.prototype._slice = util.Buffer.prototype.slice;\n\n/**\n * @override\n */\nBufferReader.prototype.string = function read_string_buffer() {\n    var len = this.uint32(); // modifies pos\n    return this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len));\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @name BufferReader#bytes\n * @function\n * @returns {Buffer} Value read\n */\n\n},{\"27\":27,\"39\":39}],29:[function(require,module,exports){\n\"use strict\";\nmodule.exports = Root;\n\n// extends Namespace\nvar Namespace = require(23);\n((Root.prototype = Object.create(Namespace.prototype)).constructor = Root).className = \"Root\";\n\nvar Field   = require(16),\n    Enum    = require(15),\n    OneOf   = require(25),\n    util    = require(37);\n\nvar Type,   // cyclic\n    parse,  // might be excluded\n    common; // \"\n\n/**\n * Constructs a new root namespace instance.\n * @classdesc Root namespace wrapping all types, enums, services, sub-namespaces etc. that belong together.\n * @extends NamespaceBase\n * @constructor\n * @param {Object.<string,*>} [options] Top level options\n */\nfunction Root(options) {\n    Namespace.call(this, \"\", options);\n\n    /**\n     * Deferred extension fields.\n     * @type {Field[]}\n     */\n    this.deferred = [];\n\n    /**\n     * Resolved file names of loaded files.\n     * @type {string[]}\n     */\n    this.files = [];\n}\n\n/**\n * Loads a namespace descriptor into a root namespace.\n * @param {INamespace} json Nameespace descriptor\n * @param {Root} [root] Root namespace, defaults to create a new one if omitted\n * @returns {Root} Root namespace\n */\nRoot.fromJSON = function fromJSON(json, root) {\n    if (!root)\n        root = new Root();\n    if (json.options)\n        root.setOptions(json.options);\n    return root.addJSON(json.nested);\n};\n\n/**\n * Resolves the path of an imported file, relative to the importing origin.\n * This method exists so you can override it with your own logic in case your imports are scattered over multiple directories.\n * @function\n * @param {string} origin The file name of the importing file\n * @param {string} target The file name being imported\n * @returns {string|null} Resolved path to `target` or `null` to skip the file\n */\nRoot.prototype.resolvePath = util.path.resolve;\n\n// A symbol-like function to safely signal synchronous loading\n/* istanbul ignore next */\nfunction SYNC() {} // eslint-disable-line no-empty-function\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into this root namespace and calls the callback.\n * @param {string|string[]} filename Names of one or multiple files to load\n * @param {IParseOptions} options Parse options\n * @param {LoadCallback} callback Callback function\n * @returns {undefined}\n */\nRoot.prototype.load = function load(filename, options, callback) {\n    if (typeof options === \"function\") {\n        callback = options;\n        options = undefined;\n    }\n    var self = this;\n    if (!callback)\n        return util.asPromise(load, self, filename, options);\n\n    var sync = callback === SYNC; // undocumented\n\n    // Finishes loading by calling the callback (exactly once)\n    function finish(err, root) {\n        /* istanbul ignore if */\n        if (!callback)\n            return;\n        var cb = callback;\n        callback = null;\n        if (sync)\n            throw err;\n        cb(err, root);\n    }\n\n    // Processes a single file\n    function process(filename, source) {\n        try {\n            if (util.isString(source) && source.charAt(0) === \"{\")\n                source = JSON.parse(source);\n            if (!util.isString(source))\n                self.setOptions(source.options).addJSON(source.nested);\n            else {\n                parse.filename = filename;\n                var parsed = parse(source, self, options),\n                    resolved,\n                    i = 0;\n                if (parsed.imports)\n                    for (; i < parsed.imports.length; ++i)\n                        if (resolved = self.resolvePath(filename, parsed.imports[i]))\n                            fetch(resolved);\n                if (parsed.weakImports)\n                    for (i = 0; i < parsed.weakImports.length; ++i)\n                        if (resolved = self.resolvePath(filename, parsed.weakImports[i]))\n                            fetch(resolved, true);\n            }\n        } catch (err) {\n            finish(err);\n        }\n        if (!sync && !queued)\n            finish(null, self); // only once anyway\n    }\n\n    // Fetches a single file\n    function fetch(filename, weak) {\n\n        // Strip path if this file references a bundled definition\n        var idx = filename.lastIndexOf(\"google/protobuf/\");\n        if (idx > -1) {\n            var altname = filename.substring(idx);\n            if (altname in common)\n                filename = altname;\n        }\n\n        // Skip if already loaded / attempted\n        if (self.files.indexOf(filename) > -1)\n            return;\n        self.files.push(filename);\n\n        // Shortcut bundled definitions\n        if (filename in common) {\n            if (sync)\n                process(filename, common[filename]);\n            else {\n                ++queued;\n                setTimeout(function() {\n                    --queued;\n                    process(filename, common[filename]);\n                });\n            }\n            return;\n        }\n\n        // Otherwise fetch from disk or network\n        if (sync) {\n            var source;\n            try {\n                source = util.fs.readFileSync(filename).toString(\"utf8\");\n            } catch (err) {\n                if (!weak)\n                    finish(err);\n                return;\n            }\n            process(filename, source);\n        } else {\n            ++queued;\n            util.fetch(filename, function(err, source) {\n                --queued;\n                /* istanbul ignore if */\n                if (!callback)\n                    return; // terminated meanwhile\n                if (err) {\n                    /* istanbul ignore else */\n                    if (!weak)\n                        finish(err);\n                    else if (!queued) // can't be covered reliably\n                        finish(null, self);\n                    return;\n                }\n                process(filename, source);\n            });\n        }\n    }\n    var queued = 0;\n\n    // Assembling the root namespace doesn't require working type\n    // references anymore, so we can load everything in parallel\n    if (util.isString(filename))\n        filename = [ filename ];\n    for (var i = 0, resolved; i < filename.length; ++i)\n        if (resolved = self.resolvePath(\"\", filename[i]))\n            fetch(resolved);\n\n    if (sync)\n        return self;\n    if (!queued)\n        finish(null, self);\n    return undefined;\n};\n// function load(filename:string, options:IParseOptions, callback:LoadCallback):undefined\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into this root namespace and calls the callback.\n * @function Root#load\n * @param {string|string[]} filename Names of one or multiple files to load\n * @param {LoadCallback} callback Callback function\n * @returns {undefined}\n * @variation 2\n */\n// function load(filename:string, callback:LoadCallback):undefined\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into this root namespace and returns a promise.\n * @function Root#load\n * @param {string|string[]} filename Names of one or multiple files to load\n * @param {IParseOptions} [options] Parse options. Defaults to {@link parse.defaults} when omitted.\n * @returns {Promise<Root>} Promise\n * @variation 3\n */\n// function load(filename:string, [options:IParseOptions]):Promise<Root>\n\n/**\n * Synchronously loads one or multiple .proto or preprocessed .json files into this root namespace (node only).\n * @function Root#loadSync\n * @param {string|string[]} filename Names of one or multiple files to load\n * @param {IParseOptions} [options] Parse options. Defaults to {@link parse.defaults} when omitted.\n * @returns {Root} Root namespace\n * @throws {Error} If synchronous fetching is not supported (i.e. in browsers) or if a file's syntax is invalid\n */\nRoot.prototype.loadSync = function loadSync(filename, options) {\n    if (!util.isNode)\n        throw Error(\"not supported\");\n    return this.load(filename, options, SYNC);\n};\n\n/**\n * @override\n */\nRoot.prototype.resolveAll = function resolveAll() {\n    if (this.deferred.length)\n        throw Error(\"unresolvable extensions: \" + this.deferred.map(function(field) {\n            return \"'extend \" + field.extend + \"' in \" + field.parent.fullName;\n        }).join(\", \"));\n    return Namespace.prototype.resolveAll.call(this);\n};\n\n// only uppercased (and thus conflict-free) children are exposed, see below\nvar exposeRe = /^[A-Z]/;\n\n/**\n * Handles a deferred declaring extension field by creating a sister field to represent it within its extended type.\n * @param {Root} root Root instance\n * @param {Field} field Declaring extension field witin the declaring type\n * @returns {boolean} `true` if successfully added to the extended type, `false` otherwise\n * @inner\n * @ignore\n */\nfunction tryHandleExtension(root, field) {\n    var extendedType = field.parent.lookup(field.extend);\n    if (extendedType) {\n        var sisterField = new Field(field.fullName, field.id, field.type, field.rule, undefined, field.options);\n        sisterField.declaringField = field;\n        field.extensionField = sisterField;\n        extendedType.add(sisterField);\n        return true;\n    }\n    return false;\n}\n\n/**\n * Called when any object is added to this root or its sub-namespaces.\n * @param {ReflectionObject} object Object added\n * @returns {undefined}\n * @private\n */\nRoot.prototype._handleAdd = function _handleAdd(object) {\n    if (object instanceof Field) {\n\n        if (/* an extension field (implies not part of a oneof) */ object.extend !== undefined && /* not already handled */ !object.extensionField)\n            if (!tryHandleExtension(this, object))\n                this.deferred.push(object);\n\n    } else if (object instanceof Enum) {\n\n        if (exposeRe.test(object.name))\n            object.parent[object.name] = object.values; // expose enum values as property of its parent\n\n    } else if (!(object instanceof OneOf)) /* everything else is a namespace */ {\n\n        if (object instanceof Type) // Try to handle any deferred extensions\n            for (var i = 0; i < this.deferred.length;)\n                if (tryHandleExtension(this, this.deferred[i]))\n                    this.deferred.splice(i, 1);\n                else\n                    ++i;\n        for (var j = 0; j < /* initializes */ object.nestedArray.length; ++j) // recurse into the namespace\n            this._handleAdd(object._nestedArray[j]);\n        if (exposeRe.test(object.name))\n            object.parent[object.name] = object; // expose namespace as property of its parent\n    }\n\n    // The above also adds uppercased (and thus conflict-free) nested types, services and enums as\n    // properties of namespaces just like static code does. This allows using a .d.ts generated for\n    // a static module with reflection-based solutions where the condition is met.\n};\n\n/**\n * Called when any object is removed from this root or its sub-namespaces.\n * @param {ReflectionObject} object Object removed\n * @returns {undefined}\n * @private\n */\nRoot.prototype._handleRemove = function _handleRemove(object) {\n    if (object instanceof Field) {\n\n        if (/* an extension field */ object.extend !== undefined) {\n            if (/* already handled */ object.extensionField) { // remove its sister field\n                object.extensionField.parent.remove(object.extensionField);\n                object.extensionField = null;\n            } else { // cancel the extension\n                var index = this.deferred.indexOf(object);\n                /* istanbul ignore else */\n                if (index > -1)\n                    this.deferred.splice(index, 1);\n            }\n        }\n\n    } else if (object instanceof Enum) {\n\n        if (exposeRe.test(object.name))\n            delete object.parent[object.name]; // unexpose enum values\n\n    } else if (object instanceof Namespace) {\n\n        for (var i = 0; i < /* initializes */ object.nestedArray.length; ++i) // recurse into the namespace\n            this._handleRemove(object._nestedArray[i]);\n\n        if (exposeRe.test(object.name))\n            delete object.parent[object.name]; // unexpose namespaces\n\n    }\n};\n\nRoot._configure = function(Type_, parse_, common_) {\n    Type = Type_;\n    parse = parse_;\n    common = common_;\n};\n\n},{\"15\":15,\"16\":16,\"23\":23,\"25\":25,\"37\":37}],30:[function(require,module,exports){\n\"use strict\";\nmodule.exports = {};\n\n/**\n * Named roots.\n * This is where pbjs stores generated structures (the option `-r, --root` specifies a name).\n * Can also be used manually to make roots available accross modules.\n * @name roots\n * @type {Object.<string,Root>}\n * @example\n * // pbjs -r myroot -o compiled.js ...\n *\n * // in another module:\n * require(\"./compiled.js\");\n *\n * // in any subsequent module:\n * var root = protobuf.roots[\"myroot\"];\n */\n\n},{}],31:[function(require,module,exports){\n\"use strict\";\n\n/**\n * Streaming RPC helpers.\n * @namespace\n */\nvar rpc = exports;\n\n/**\n * RPC implementation passed to {@link Service#create} performing a service request on network level, i.e. by utilizing http requests or websockets.\n * @typedef RPCImpl\n * @type {function}\n * @param {Method|rpc.ServiceMethod<Message<{}>,Message<{}>>} method Reflected or static method being called\n * @param {Uint8Array} requestData Request data\n * @param {RPCImplCallback} callback Callback function\n * @returns {undefined}\n * @example\n * function rpcImpl(method, requestData, callback) {\n *     if (protobuf.util.lcFirst(method.name) !== \"myMethod\") // compatible with static code\n *         throw Error(\"no such method\");\n *     asynchronouslyObtainAResponse(requestData, function(err, responseData) {\n *         callback(err, responseData);\n *     });\n * }\n */\n\n/**\n * Node-style callback as used by {@link RPCImpl}.\n * @typedef RPCImplCallback\n * @type {function}\n * @param {Error|null} error Error, if any, otherwise `null`\n * @param {Uint8Array|null} [response] Response data or `null` to signal end of stream, if there hasn't been an error\n * @returns {undefined}\n */\n\nrpc.Service = require(32);\n\n},{\"32\":32}],32:[function(require,module,exports){\n\"use strict\";\nmodule.exports = Service;\n\nvar util = require(39);\n\n// Extends EventEmitter\n(Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;\n\n/**\n * A service method callback as used by {@link rpc.ServiceMethod|ServiceMethod}.\n *\n * Differs from {@link RPCImplCallback} in that it is an actual callback of a service method which may not return `response = null`.\n * @typedef rpc.ServiceMethodCallback\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {Error|null} error Error, if any\n * @param {TRes} [response] Response message\n * @returns {undefined}\n */\n\n/**\n * A service method part of a {@link rpc.Service} as created by {@link Service.create}.\n * @typedef rpc.ServiceMethod\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} [callback] Node-style callback called with the error, if any, and the response message\n * @returns {Promise<Message<TRes>>} Promise if `callback` has been omitted, otherwise `undefined`\n */\n\n/**\n * Constructs a new RPC service instance.\n * @classdesc An RPC service as returned by {@link Service#create}.\n * @exports rpc.Service\n * @extends util.EventEmitter\n * @constructor\n * @param {RPCImpl} rpcImpl RPC implementation\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n */\nfunction Service(rpcImpl, requestDelimited, responseDelimited) {\n\n    if (typeof rpcImpl !== \"function\")\n        throw TypeError(\"rpcImpl must be a function\");\n\n    util.EventEmitter.call(this);\n\n    /**\n     * RPC implementation. Becomes `null` once the service is ended.\n     * @type {RPCImpl|null}\n     */\n    this.rpcImpl = rpcImpl;\n\n    /**\n     * Whether requests are length-delimited.\n     * @type {boolean}\n     */\n    this.requestDelimited = Boolean(requestDelimited);\n\n    /**\n     * Whether responses are length-delimited.\n     * @type {boolean}\n     */\n    this.responseDelimited = Boolean(responseDelimited);\n}\n\n/**\n * Calls a service method through {@link rpc.Service#rpcImpl|rpcImpl}.\n * @param {Method|rpc.ServiceMethod<TReq,TRes>} method Reflected or static method\n * @param {Constructor<TReq>} requestCtor Request constructor\n * @param {Constructor<TRes>} responseCtor Response constructor\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} callback Service callback\n * @returns {undefined}\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n */\nService.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {\n\n    if (!request)\n        throw TypeError(\"request must be specified\");\n\n    var self = this;\n    if (!callback)\n        return util.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);\n\n    if (!self.rpcImpl) {\n        setTimeout(function() { callback(Error(\"already ended\")); }, 0);\n        return undefined;\n    }\n\n    try {\n        return self.rpcImpl(\n            method,\n            requestCtor[self.requestDelimited ? \"encodeDelimited\" : \"encode\"](request).finish(),\n            function rpcCallback(err, response) {\n\n                if (err) {\n                    self.emit(\"error\", err, method);\n                    return callback(err);\n                }\n\n                if (response === null) {\n                    self.end(/* endedByRPC */ true);\n                    return undefined;\n                }\n\n                if (!(response instanceof responseCtor)) {\n                    try {\n                        response = responseCtor[self.responseDelimited ? \"decodeDelimited\" : \"decode\"](response);\n                    } catch (err) {\n                        self.emit(\"error\", err, method);\n                        return callback(err);\n                    }\n                }\n\n                self.emit(\"data\", response, method);\n                return callback(null, response);\n            }\n        );\n    } catch (err) {\n        self.emit(\"error\", err, method);\n        setTimeout(function() { callback(err); }, 0);\n        return undefined;\n    }\n};\n\n/**\n * Ends this service and emits the `end` event.\n * @param {boolean} [endedByRPC=false] Whether the service has been ended by the RPC implementation.\n * @returns {rpc.Service} `this`\n */\nService.prototype.end = function end(endedByRPC) {\n    if (this.rpcImpl) {\n        if (!endedByRPC) // signal end to rpcImpl\n            this.rpcImpl(null, null, null);\n        this.rpcImpl = null;\n        this.emit(\"end\").off();\n    }\n    return this;\n};\n\n},{\"39\":39}],33:[function(require,module,exports){\n\"use strict\";\nmodule.exports = Service;\n\n// extends Namespace\nvar Namespace = require(23);\n((Service.prototype = Object.create(Namespace.prototype)).constructor = Service).className = \"Service\";\n\nvar Method = require(22),\n    util   = require(37),\n    rpc    = require(31);\n\n/**\n * Constructs a new service instance.\n * @classdesc Reflected service.\n * @extends NamespaceBase\n * @constructor\n * @param {string} name Service name\n * @param {Object.<string,*>} [options] Service options\n * @throws {TypeError} If arguments are invalid\n */\nfunction Service(name, options) {\n    Namespace.call(this, name, options);\n\n    /**\n     * Service methods.\n     * @type {Object.<string,Method>}\n     */\n    this.methods = {}; // toJSON, marker\n\n    /**\n     * Cached methods as an array.\n     * @type {Method[]|null}\n     * @private\n     */\n    this._methodsArray = null;\n}\n\n/**\n * Service descriptor.\n * @interface IService\n * @extends INamespace\n * @property {Object.<string,IMethod>} methods Method descriptors\n */\n\n/**\n * Constructs a service from a service descriptor.\n * @param {string} name Service name\n * @param {IService} json Service descriptor\n * @returns {Service} Created service\n * @throws {TypeError} If arguments are invalid\n */\nService.fromJSON = function fromJSON(name, json) {\n    var service = new Service(name, json.options);\n    /* istanbul ignore else */\n    if (json.methods)\n        for (var names = Object.keys(json.methods), i = 0; i < names.length; ++i)\n            service.add(Method.fromJSON(names[i], json.methods[names[i]]));\n    if (json.nested)\n        service.addJSON(json.nested);\n    service.comment = json.comment;\n    return service;\n};\n\n/**\n * Converts this service to a service descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IService} Service descriptor\n */\nService.prototype.toJSON = function toJSON(toJSONOptions) {\n    var inherited = Namespace.prototype.toJSON.call(this, toJSONOptions);\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"options\" , inherited && inherited.options || undefined,\n        \"methods\" , Namespace.arrayToJSON(this.methodsArray, toJSONOptions) || /* istanbul ignore next */ {},\n        \"nested\"  , inherited && inherited.nested || undefined,\n        \"comment\" , keepComments ? this.comment : undefined\n    ]);\n};\n\n/**\n * Methods of this service as an array for iteration.\n * @name Service#methodsArray\n * @type {Method[]}\n * @readonly\n */\nObject.defineProperty(Service.prototype, \"methodsArray\", {\n    get: function() {\n        return this._methodsArray || (this._methodsArray = util.toArray(this.methods));\n    }\n});\n\nfunction clearCache(service) {\n    service._methodsArray = null;\n    return service;\n}\n\n/**\n * @override\n */\nService.prototype.get = function get(name) {\n    return this.methods[name]\n        || Namespace.prototype.get.call(this, name);\n};\n\n/**\n * @override\n */\nService.prototype.resolveAll = function resolveAll() {\n    var methods = this.methodsArray;\n    for (var i = 0; i < methods.length; ++i)\n        methods[i].resolve();\n    return Namespace.prototype.resolve.call(this);\n};\n\n/**\n * @override\n */\nService.prototype.add = function add(object) {\n\n    /* istanbul ignore if */\n    if (this.get(object.name))\n        throw Error(\"duplicate name '\" + object.name + \"' in \" + this);\n\n    if (object instanceof Method) {\n        this.methods[object.name] = object;\n        object.parent = this;\n        return clearCache(this);\n    }\n    return Namespace.prototype.add.call(this, object);\n};\n\n/**\n * @override\n */\nService.prototype.remove = function remove(object) {\n    if (object instanceof Method) {\n\n        /* istanbul ignore if */\n        if (this.methods[object.name] !== object)\n            throw Error(object + \" is not a member of \" + this);\n\n        delete this.methods[object.name];\n        object.parent = null;\n        return clearCache(this);\n    }\n    return Namespace.prototype.remove.call(this, object);\n};\n\n/**\n * Creates a runtime service using the specified rpc implementation.\n * @param {RPCImpl} rpcImpl RPC implementation\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n * @returns {rpc.Service} RPC service. Useful where requests and/or responses are streamed.\n */\nService.prototype.create = function create(rpcImpl, requestDelimited, responseDelimited) {\n    var rpcService = new rpc.Service(rpcImpl, requestDelimited, responseDelimited);\n    for (var i = 0, method; i < /* initializes */ this.methodsArray.length; ++i) {\n        var methodName = util.lcFirst((method = this._methodsArray[i]).resolve().name).replace(/[^$\\w_]/g, \"\");\n        rpcService[methodName] = util.codegen([\"r\",\"c\"], util.isReserved(methodName) ? methodName + \"_\" : methodName)(\"return this.rpcCall(m,q,s,r,c)\")({\n            m: method,\n            q: method.resolvedRequestType.ctor,\n            s: method.resolvedResponseType.ctor\n        });\n    }\n    return rpcService;\n};\n\n},{\"22\":22,\"23\":23,\"31\":31,\"37\":37}],34:[function(require,module,exports){\n\"use strict\";\nmodule.exports = tokenize;\n\nvar delimRe        = /[\\s{}=;:[\\],'\"()<>]/g,\n    stringDoubleRe = /(?:\"([^\"\\\\]*(?:\\\\.[^\"\\\\]*)*)\")/g,\n    stringSingleRe = /(?:'([^'\\\\]*(?:\\\\.[^'\\\\]*)*)')/g;\n\nvar setCommentRe = /^ *[*/]+ */,\n    setCommentAltRe = /^\\s*\\*?\\/*/,\n    setCommentSplitRe = /\\n/g,\n    whitespaceRe = /\\s/,\n    unescapeRe = /\\\\(.?)/g;\n\nvar unescapeMap = {\n    \"0\": \"\\0\",\n    \"r\": \"\\r\",\n    \"n\": \"\\n\",\n    \"t\": \"\\t\"\n};\n\n/**\n * Unescapes a string.\n * @param {string} str String to unescape\n * @returns {string} Unescaped string\n * @property {Object.<string,string>} map Special characters map\n * @memberof tokenize\n */\nfunction unescape(str) {\n    return str.replace(unescapeRe, function($0, $1) {\n        switch ($1) {\n            case \"\\\\\":\n            case \"\":\n                return $1;\n            default:\n                return unescapeMap[$1] || \"\";\n        }\n    });\n}\n\ntokenize.unescape = unescape;\n\n/**\n * Gets the next token and advances.\n * @typedef TokenizerHandleNext\n * @type {function}\n * @returns {string|null} Next token or `null` on eof\n */\n\n/**\n * Peeks for the next token.\n * @typedef TokenizerHandlePeek\n * @type {function}\n * @returns {string|null} Next token or `null` on eof\n */\n\n/**\n * Pushes a token back to the stack.\n * @typedef TokenizerHandlePush\n * @type {function}\n * @param {string} token Token\n * @returns {undefined}\n */\n\n/**\n * Skips the next token.\n * @typedef TokenizerHandleSkip\n * @type {function}\n * @param {string} expected Expected token\n * @param {boolean} [optional=false] If optional\n * @returns {boolean} Whether the token matched\n * @throws {Error} If the token didn't match and is not optional\n */\n\n/**\n * Gets the comment on the previous line or, alternatively, the line comment on the specified line.\n * @typedef TokenizerHandleCmnt\n * @type {function}\n * @param {number} [line] Line number\n * @returns {string|null} Comment text or `null` if none\n */\n\n/**\n * Handle object returned from {@link tokenize}.\n * @interface ITokenizerHandle\n * @property {TokenizerHandleNext} next Gets the next token and advances (`null` on eof)\n * @property {TokenizerHandlePeek} peek Peeks for the next token (`null` on eof)\n * @property {TokenizerHandlePush} push Pushes a token back to the stack\n * @property {TokenizerHandleSkip} skip Skips a token, returns its presence and advances or, if non-optional and not present, throws\n * @property {TokenizerHandleCmnt} cmnt Gets the comment on the previous line or the line comment on the specified line, if any\n * @property {number} line Current line number\n */\n\n/**\n * Tokenizes the given .proto source and returns an object with useful utility functions.\n * @param {string} source Source contents\n * @param {boolean} alternateCommentMode Whether we should activate alternate comment parsing mode.\n * @returns {ITokenizerHandle} Tokenizer handle\n */\nfunction tokenize(source, alternateCommentMode) {\n    /* eslint-disable callback-return */\n    source = source.toString();\n\n    var offset = 0,\n        length = source.length,\n        line = 1,\n        commentType = null,\n        commentText = null,\n        commentLine = 0,\n        commentLineEmpty = false;\n\n    var stack = [];\n\n    var stringDelim = null;\n\n    /* istanbul ignore next */\n    /**\n     * Creates an error for illegal syntax.\n     * @param {string} subject Subject\n     * @returns {Error} Error created\n     * @inner\n     */\n    function illegal(subject) {\n        return Error(\"illegal \" + subject + \" (line \" + line + \")\");\n    }\n\n    /**\n     * Reads a string till its end.\n     * @returns {string} String read\n     * @inner\n     */\n    function readString() {\n        var re = stringDelim === \"'\" ? stringSingleRe : stringDoubleRe;\n        re.lastIndex = offset - 1;\n        var match = re.exec(source);\n        if (!match)\n            throw illegal(\"string\");\n        offset = re.lastIndex;\n        push(stringDelim);\n        stringDelim = null;\n        return unescape(match[1]);\n    }\n\n    /**\n     * Gets the character at `pos` within the source.\n     * @param {number} pos Position\n     * @returns {string} Character\n     * @inner\n     */\n    function charAt(pos) {\n        return source.charAt(pos);\n    }\n\n    /**\n     * Sets the current comment text.\n     * @param {number} start Start offset\n     * @param {number} end End offset\n     * @returns {undefined}\n     * @inner\n     */\n    function setComment(start, end) {\n        commentType = source.charAt(start++);\n        commentLine = line;\n        commentLineEmpty = false;\n        var lookback;\n        if (alternateCommentMode) {\n            lookback = 2;  // alternate comment parsing: \"//\" or \"/*\"\n        } else {\n            lookback = 3;  // \"///\" or \"/**\"\n        }\n        var commentOffset = start - lookback,\n            c;\n        do {\n            if (--commentOffset < 0 ||\n                    (c = source.charAt(commentOffset)) === \"\\n\") {\n                commentLineEmpty = true;\n                break;\n            }\n        } while (c === \" \" || c === \"\\t\");\n        var lines = source\n            .substring(start, end)\n            .split(setCommentSplitRe);\n        for (var i = 0; i < lines.length; ++i)\n            lines[i] = lines[i]\n                .replace(alternateCommentMode ? setCommentAltRe : setCommentRe, \"\")\n                .trim();\n        commentText = lines\n            .join(\"\\n\")\n            .trim();\n    }\n\n    function isDoubleSlashCommentLine(startOffset) {\n        var endOffset = findEndOfLine(startOffset);\n\n        // see if remaining line matches comment pattern\n        var lineText = source.substring(startOffset, endOffset);\n        // look for 1 or 2 slashes since startOffset would already point past\n        // the first slash that started the comment.\n        var isComment = /^\\s*\\/{1,2}/.test(lineText);\n        return isComment;\n    }\n\n    function findEndOfLine(cursor) {\n        // find end of cursor's line\n        var endOffset = cursor;\n        while (endOffset < length && charAt(endOffset) !== \"\\n\") {\n            endOffset++;\n        }\n        return endOffset;\n    }\n\n    /**\n     * Obtains the next token.\n     * @returns {string|null} Next token or `null` on eof\n     * @inner\n     */\n    function next() {\n        if (stack.length > 0)\n            return stack.shift();\n        if (stringDelim)\n            return readString();\n        var repeat,\n            prev,\n            curr,\n            start,\n            isDoc;\n        do {\n            if (offset === length)\n                return null;\n            repeat = false;\n            while (whitespaceRe.test(curr = charAt(offset))) {\n                if (curr === \"\\n\")\n                    ++line;\n                if (++offset === length)\n                    return null;\n            }\n\n            if (charAt(offset) === \"/\") {\n                if (++offset === length) {\n                    throw illegal(\"comment\");\n                }\n                if (charAt(offset) === \"/\") { // Line\n                    if (!alternateCommentMode) {\n                        // check for triple-slash comment\n                        isDoc = charAt(start = offset + 1) === \"/\";\n\n                        while (charAt(++offset) !== \"\\n\") {\n                            if (offset === length) {\n                                return null;\n                            }\n                        }\n                        ++offset;\n                        if (isDoc) {\n                            setComment(start, offset - 1);\n                        }\n                        ++line;\n                        repeat = true;\n                    } else {\n                        // check for double-slash comments, consolidating consecutive lines\n                        start = offset;\n                        isDoc = false;\n                        if (isDoubleSlashCommentLine(offset)) {\n                            isDoc = true;\n                            do {\n                                offset = findEndOfLine(offset);\n                                if (offset === length) {\n                                    break;\n                                }\n                                offset++;\n                            } while (isDoubleSlashCommentLine(offset));\n                        } else {\n                            offset = Math.min(length, findEndOfLine(offset) + 1);\n                        }\n                        if (isDoc) {\n                            setComment(start, offset);\n                        }\n                        line++;\n                        repeat = true;\n                    }\n                } else if ((curr = charAt(offset)) === \"*\") { /* Block */\n                    // check for /** (regular comment mode) or /* (alternate comment mode)\n                    start = offset + 1;\n                    isDoc = alternateCommentMode || charAt(start) === \"*\";\n                    do {\n                        if (curr === \"\\n\") {\n                            ++line;\n                        }\n                        if (++offset === length) {\n                            throw illegal(\"comment\");\n                        }\n                        prev = curr;\n                        curr = charAt(offset);\n                    } while (prev !== \"*\" || curr !== \"/\");\n                    ++offset;\n                    if (isDoc) {\n                        setComment(start, offset - 2);\n                    }\n                    repeat = true;\n                } else {\n                    return \"/\";\n                }\n            }\n        } while (repeat);\n\n        // offset !== length if we got here\n\n        var end = offset;\n        delimRe.lastIndex = 0;\n        var delim = delimRe.test(charAt(end++));\n        if (!delim)\n            while (end < length && !delimRe.test(charAt(end)))\n                ++end;\n        var token = source.substring(offset, offset = end);\n        if (token === \"\\\"\" || token === \"'\")\n            stringDelim = token;\n        return token;\n    }\n\n    /**\n     * Pushes a token back to the stack.\n     * @param {string} token Token\n     * @returns {undefined}\n     * @inner\n     */\n    function push(token) {\n        stack.push(token);\n    }\n\n    /**\n     * Peeks for the next token.\n     * @returns {string|null} Token or `null` on eof\n     * @inner\n     */\n    function peek() {\n        if (!stack.length) {\n            var token = next();\n            if (token === null)\n                return null;\n            push(token);\n        }\n        return stack[0];\n    }\n\n    /**\n     * Skips a token.\n     * @param {string} expected Expected token\n     * @param {boolean} [optional=false] Whether the token is optional\n     * @returns {boolean} `true` when skipped, `false` if not\n     * @throws {Error} When a required token is not present\n     * @inner\n     */\n    function skip(expected, optional) {\n        var actual = peek(),\n            equals = actual === expected;\n        if (equals) {\n            next();\n            return true;\n        }\n        if (!optional)\n            throw illegal(\"token '\" + actual + \"', '\" + expected + \"' expected\");\n        return false;\n    }\n\n    /**\n     * Gets a comment.\n     * @param {number} [trailingLine] Line number if looking for a trailing comment\n     * @returns {string|null} Comment text\n     * @inner\n     */\n    function cmnt(trailingLine) {\n        var ret = null;\n        if (trailingLine === undefined) {\n            if (commentLine === line - 1 && (alternateCommentMode || commentType === \"*\" || commentLineEmpty)) {\n                ret = commentText;\n            }\n        } else {\n            /* istanbul ignore else */\n            if (commentLine < trailingLine) {\n                peek();\n            }\n            if (commentLine === trailingLine && !commentLineEmpty && (alternateCommentMode || commentType === \"/\")) {\n                ret = commentText;\n            }\n        }\n        return ret;\n    }\n\n    return Object.defineProperty({\n        next: next,\n        peek: peek,\n        push: push,\n        skip: skip,\n        cmnt: cmnt\n    }, \"line\", {\n        get: function() { return line; }\n    });\n    /* eslint-enable callback-return */\n}\n\n},{}],35:[function(require,module,exports){\n\"use strict\";\nmodule.exports = Type;\n\n// extends Namespace\nvar Namespace = require(23);\n((Type.prototype = Object.create(Namespace.prototype)).constructor = Type).className = \"Type\";\n\nvar Enum      = require(15),\n    OneOf     = require(25),\n    Field     = require(16),\n    MapField  = require(20),\n    Service   = require(33),\n    Message   = require(21),\n    Reader    = require(27),\n    Writer    = require(42),\n    util      = require(37),\n    encoder   = require(14),\n    decoder   = require(13),\n    verifier  = require(40),\n    converter = require(12),\n    wrappers  = require(41);\n\n/**\n * Constructs a new reflected message type instance.\n * @classdesc Reflected message type.\n * @extends NamespaceBase\n * @constructor\n * @param {string} name Message name\n * @param {Object.<string,*>} [options] Declared options\n */\nfunction Type(name, options) {\n    Namespace.call(this, name, options);\n\n    /**\n     * Message fields.\n     * @type {Object.<string,Field>}\n     */\n    this.fields = {};  // toJSON, marker\n\n    /**\n     * Oneofs declared within this namespace, if any.\n     * @type {Object.<string,OneOf>}\n     */\n    this.oneofs = undefined; // toJSON\n\n    /**\n     * Extension ranges, if any.\n     * @type {number[][]}\n     */\n    this.extensions = undefined; // toJSON\n\n    /**\n     * Reserved ranges, if any.\n     * @type {Array.<number[]|string>}\n     */\n    this.reserved = undefined; // toJSON\n\n    /*?\n     * Whether this type is a legacy group.\n     * @type {boolean|undefined}\n     */\n    this.group = undefined; // toJSON\n\n    /**\n     * Cached fields by id.\n     * @type {Object.<number,Field>|null}\n     * @private\n     */\n    this._fieldsById = null;\n\n    /**\n     * Cached fields as an array.\n     * @type {Field[]|null}\n     * @private\n     */\n    this._fieldsArray = null;\n\n    /**\n     * Cached oneofs as an array.\n     * @type {OneOf[]|null}\n     * @private\n     */\n    this._oneofsArray = null;\n\n    /**\n     * Cached constructor.\n     * @type {Constructor<{}>}\n     * @private\n     */\n    this._ctor = null;\n}\n\nObject.defineProperties(Type.prototype, {\n\n    /**\n     * Message fields by id.\n     * @name Type#fieldsById\n     * @type {Object.<number,Field>}\n     * @readonly\n     */\n    fieldsById: {\n        get: function() {\n\n            /* istanbul ignore if */\n            if (this._fieldsById)\n                return this._fieldsById;\n\n            this._fieldsById = {};\n            for (var names = Object.keys(this.fields), i = 0; i < names.length; ++i) {\n                var field = this.fields[names[i]],\n                    id = field.id;\n\n                /* istanbul ignore if */\n                if (this._fieldsById[id])\n                    throw Error(\"duplicate id \" + id + \" in \" + this);\n\n                this._fieldsById[id] = field;\n            }\n            return this._fieldsById;\n        }\n    },\n\n    /**\n     * Fields of this message as an array for iteration.\n     * @name Type#fieldsArray\n     * @type {Field[]}\n     * @readonly\n     */\n    fieldsArray: {\n        get: function() {\n            return this._fieldsArray || (this._fieldsArray = util.toArray(this.fields));\n        }\n    },\n\n    /**\n     * Oneofs of this message as an array for iteration.\n     * @name Type#oneofsArray\n     * @type {OneOf[]}\n     * @readonly\n     */\n    oneofsArray: {\n        get: function() {\n            return this._oneofsArray || (this._oneofsArray = util.toArray(this.oneofs));\n        }\n    },\n\n    /**\n     * The registered constructor, if any registered, otherwise a generic constructor.\n     * Assigning a function replaces the internal constructor. If the function does not extend {@link Message} yet, its prototype will be setup accordingly and static methods will be populated. If it already extends {@link Message}, it will just replace the internal constructor.\n     * @name Type#ctor\n     * @type {Constructor<{}>}\n     */\n    ctor: {\n        get: function() {\n            return this._ctor || (this.ctor = Type.generateConstructor(this)());\n        },\n        set: function(ctor) {\n\n            // Ensure proper prototype\n            var prototype = ctor.prototype;\n            if (!(prototype instanceof Message)) {\n                (ctor.prototype = new Message()).constructor = ctor;\n                util.merge(ctor.prototype, prototype);\n            }\n\n            // Classes and messages reference their reflected type\n            ctor.$type = ctor.prototype.$type = this;\n\n            // Mix in static methods\n            util.merge(ctor, Message, true);\n\n            this._ctor = ctor;\n\n            // Messages have non-enumerable default values on their prototype\n            var i = 0;\n            for (; i < /* initializes */ this.fieldsArray.length; ++i)\n                this._fieldsArray[i].resolve(); // ensures a proper value\n\n            // Messages have non-enumerable getters and setters for each virtual oneof field\n            var ctorProperties = {};\n            for (i = 0; i < /* initializes */ this.oneofsArray.length; ++i)\n                ctorProperties[this._oneofsArray[i].resolve().name] = {\n                    get: util.oneOfGetter(this._oneofsArray[i].oneof),\n                    set: util.oneOfSetter(this._oneofsArray[i].oneof)\n                };\n            if (i)\n                Object.defineProperties(ctor.prototype, ctorProperties);\n        }\n    }\n});\n\n/**\n * Generates a constructor function for the specified type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nType.generateConstructor = function generateConstructor(mtype) {\n    /* eslint-disable no-unexpected-multiline */\n    var gen = util.codegen([\"p\"], mtype.name);\n    // explicitly initialize mutable object/array fields so that these aren't just inherited from the prototype\n    for (var i = 0, field; i < mtype.fieldsArray.length; ++i)\n        if ((field = mtype._fieldsArray[i]).map) gen\n            (\"this%s={}\", util.safeProp(field.name));\n        else if (field.repeated) gen\n            (\"this%s=[]\", util.safeProp(field.name));\n    return gen\n    (\"if(p)for(var ks=Object.keys(p),i=0;i<ks.length;++i)if(p[ks[i]]!=null)\") // omit undefined or null\n        (\"this[ks[i]]=p[ks[i]]\");\n    /* eslint-enable no-unexpected-multiline */\n};\n\nfunction clearCache(type) {\n    type._fieldsById = type._fieldsArray = type._oneofsArray = null;\n    delete type.encode;\n    delete type.decode;\n    delete type.verify;\n    return type;\n}\n\n/**\n * Message type descriptor.\n * @interface IType\n * @extends INamespace\n * @property {Object.<string,IOneOf>} [oneofs] Oneof descriptors\n * @property {Object.<string,IField>} fields Field descriptors\n * @property {number[][]} [extensions] Extension ranges\n * @property {number[][]} [reserved] Reserved ranges\n * @property {boolean} [group=false] Whether a legacy group or not\n */\n\n/**\n * Creates a message type from a message type descriptor.\n * @param {string} name Message name\n * @param {IType} json Message type descriptor\n * @returns {Type} Created message type\n */\nType.fromJSON = function fromJSON(name, json) {\n    var type = new Type(name, json.options);\n    type.extensions = json.extensions;\n    type.reserved = json.reserved;\n    var names = Object.keys(json.fields),\n        i = 0;\n    for (; i < names.length; ++i)\n        type.add(\n            ( typeof json.fields[names[i]].keyType !== \"undefined\"\n            ? MapField.fromJSON\n            : Field.fromJSON )(names[i], json.fields[names[i]])\n        );\n    if (json.oneofs)\n        for (names = Object.keys(json.oneofs), i = 0; i < names.length; ++i)\n            type.add(OneOf.fromJSON(names[i], json.oneofs[names[i]]));\n    if (json.nested)\n        for (names = Object.keys(json.nested), i = 0; i < names.length; ++i) {\n            var nested = json.nested[names[i]];\n            type.add( // most to least likely\n                ( nested.id !== undefined\n                ? Field.fromJSON\n                : nested.fields !== undefined\n                ? Type.fromJSON\n                : nested.values !== undefined\n                ? Enum.fromJSON\n                : nested.methods !== undefined\n                ? Service.fromJSON\n                : Namespace.fromJSON )(names[i], nested)\n            );\n        }\n    if (json.extensions && json.extensions.length)\n        type.extensions = json.extensions;\n    if (json.reserved && json.reserved.length)\n        type.reserved = json.reserved;\n    if (json.group)\n        type.group = true;\n    if (json.comment)\n        type.comment = json.comment;\n    return type;\n};\n\n/**\n * Converts this message type to a message type descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IType} Message type descriptor\n */\nType.prototype.toJSON = function toJSON(toJSONOptions) {\n    var inherited = Namespace.prototype.toJSON.call(this, toJSONOptions);\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"options\"    , inherited && inherited.options || undefined,\n        \"oneofs\"     , Namespace.arrayToJSON(this.oneofsArray, toJSONOptions),\n        \"fields\"     , Namespace.arrayToJSON(this.fieldsArray.filter(function(obj) { return !obj.declaringField; }), toJSONOptions) || {},\n        \"extensions\" , this.extensions && this.extensions.length ? this.extensions : undefined,\n        \"reserved\"   , this.reserved && this.reserved.length ? this.reserved : undefined,\n        \"group\"      , this.group || undefined,\n        \"nested\"     , inherited && inherited.nested || undefined,\n        \"comment\"    , keepComments ? this.comment : undefined\n    ]);\n};\n\n/**\n * @override\n */\nType.prototype.resolveAll = function resolveAll() {\n    var fields = this.fieldsArray, i = 0;\n    while (i < fields.length)\n        fields[i++].resolve();\n    var oneofs = this.oneofsArray; i = 0;\n    while (i < oneofs.length)\n        oneofs[i++].resolve();\n    return Namespace.prototype.resolveAll.call(this);\n};\n\n/**\n * @override\n */\nType.prototype.get = function get(name) {\n    return this.fields[name]\n        || this.oneofs && this.oneofs[name]\n        || this.nested && this.nested[name]\n        || null;\n};\n\n/**\n * Adds a nested object to this type.\n * @param {ReflectionObject} object Nested object to add\n * @returns {Type} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If there is already a nested object with this name or, if a field, when there is already a field with this id\n */\nType.prototype.add = function add(object) {\n\n    if (this.get(object.name))\n        throw Error(\"duplicate name '\" + object.name + \"' in \" + this);\n\n    if (object instanceof Field && object.extend === undefined) {\n        // NOTE: Extension fields aren't actual fields on the declaring type, but nested objects.\n        // The root object takes care of adding distinct sister-fields to the respective extended\n        // type instead.\n\n        // avoids calling the getter if not absolutely necessary because it's called quite frequently\n        if (this._fieldsById ? /* istanbul ignore next */ this._fieldsById[object.id] : this.fieldsById[object.id])\n            throw Error(\"duplicate id \" + object.id + \" in \" + this);\n        if (this.isReservedId(object.id))\n            throw Error(\"id \" + object.id + \" is reserved in \" + this);\n        if (this.isReservedName(object.name))\n            throw Error(\"name '\" + object.name + \"' is reserved in \" + this);\n\n        if (object.parent)\n            object.parent.remove(object);\n        this.fields[object.name] = object;\n        object.message = this;\n        object.onAdd(this);\n        return clearCache(this);\n    }\n    if (object instanceof OneOf) {\n        if (!this.oneofs)\n            this.oneofs = {};\n        this.oneofs[object.name] = object;\n        object.onAdd(this);\n        return clearCache(this);\n    }\n    return Namespace.prototype.add.call(this, object);\n};\n\n/**\n * Removes a nested object from this type.\n * @param {ReflectionObject} object Nested object to remove\n * @returns {Type} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If `object` is not a member of this type\n */\nType.prototype.remove = function remove(object) {\n    if (object instanceof Field && object.extend === undefined) {\n        // See Type#add for the reason why extension fields are excluded here.\n\n        /* istanbul ignore if */\n        if (!this.fields || this.fields[object.name] !== object)\n            throw Error(object + \" is not a member of \" + this);\n\n        delete this.fields[object.name];\n        object.parent = null;\n        object.onRemove(this);\n        return clearCache(this);\n    }\n    if (object instanceof OneOf) {\n\n        /* istanbul ignore if */\n        if (!this.oneofs || this.oneofs[object.name] !== object)\n            throw Error(object + \" is not a member of \" + this);\n\n        delete this.oneofs[object.name];\n        object.parent = null;\n        object.onRemove(this);\n        return clearCache(this);\n    }\n    return Namespace.prototype.remove.call(this, object);\n};\n\n/**\n * Tests if the specified id is reserved.\n * @param {number} id Id to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nType.prototype.isReservedId = function isReservedId(id) {\n    return Namespace.isReservedId(this.reserved, id);\n};\n\n/**\n * Tests if the specified name is reserved.\n * @param {string} name Name to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nType.prototype.isReservedName = function isReservedName(name) {\n    return Namespace.isReservedName(this.reserved, name);\n};\n\n/**\n * Creates a new message of this type using the specified properties.\n * @param {Object.<string,*>} [properties] Properties to set\n * @returns {Message<{}>} Message instance\n */\nType.prototype.create = function create(properties) {\n    return new this.ctor(properties);\n};\n\n/**\n * Sets up {@link Type#encode|encode}, {@link Type#decode|decode} and {@link Type#verify|verify}.\n * @returns {Type} `this`\n */\nType.prototype.setup = function setup() {\n    // Sets up everything at once so that the prototype chain does not have to be re-evaluated\n    // multiple times (V8, soft-deopt prototype-check).\n\n    var fullName = this.fullName,\n        types    = [];\n    for (var i = 0; i < /* initializes */ this.fieldsArray.length; ++i)\n        types.push(this._fieldsArray[i].resolve().resolvedType);\n\n    // Replace setup methods with type-specific generated functions\n    this.encode = encoder(this)({\n        Writer : Writer,\n        types  : types,\n        util   : util\n    });\n    this.decode = decoder(this)({\n        Reader : Reader,\n        types  : types,\n        util   : util\n    });\n    this.verify = verifier(this)({\n        types : types,\n        util  : util\n    });\n    this.fromObject = converter.fromObject(this)({\n        types : types,\n        util  : util\n    });\n    this.toObject = converter.toObject(this)({\n        types : types,\n        util  : util\n    });\n\n    // Inject custom wrappers for common types\n    var wrapper = wrappers[fullName];\n    if (wrapper) {\n        var originalThis = Object.create(this);\n        // if (wrapper.fromObject) {\n            originalThis.fromObject = this.fromObject;\n            this.fromObject = wrapper.fromObject.bind(originalThis);\n        // }\n        // if (wrapper.toObject) {\n            originalThis.toObject = this.toObject;\n            this.toObject = wrapper.toObject.bind(originalThis);\n        // }\n    }\n\n    return this;\n};\n\n/**\n * Encodes a message of this type. Does not implicitly {@link Type#verify|verify} messages.\n * @param {Message<{}>|Object.<string,*>} message Message instance or plain object\n * @param {Writer} [writer] Writer to encode to\n * @returns {Writer} writer\n */\nType.prototype.encode = function encode_setup(message, writer) {\n    return this.setup().encode(message, writer); // overrides this method\n};\n\n/**\n * Encodes a message of this type preceeded by its byte length as a varint. Does not implicitly {@link Type#verify|verify} messages.\n * @param {Message<{}>|Object.<string,*>} message Message instance or plain object\n * @param {Writer} [writer] Writer to encode to\n * @returns {Writer} writer\n */\nType.prototype.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer && writer.len ? writer.fork() : writer).ldelim();\n};\n\n/**\n * Decodes a message of this type.\n * @param {Reader|Uint8Array} reader Reader or buffer to decode from\n * @param {number} [length] Length of the message, if known beforehand\n * @returns {Message<{}>} Decoded message\n * @throws {Error} If the payload is not a reader or valid buffer\n * @throws {util.ProtocolError<{}>} If required fields are missing\n */\nType.prototype.decode = function decode_setup(reader, length) {\n    return this.setup().decode(reader, length); // overrides this method\n};\n\n/**\n * Decodes a message of this type preceeded by its byte length as a varint.\n * @param {Reader|Uint8Array} reader Reader or buffer to decode from\n * @returns {Message<{}>} Decoded message\n * @throws {Error} If the payload is not a reader or valid buffer\n * @throws {util.ProtocolError} If required fields are missing\n */\nType.prototype.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof Reader))\n        reader = Reader.create(reader);\n    return this.decode(reader, reader.uint32());\n};\n\n/**\n * Verifies that field values are valid and that required fields are present.\n * @param {Object.<string,*>} message Plain object to verify\n * @returns {null|string} `null` if valid, otherwise the reason why it is not\n */\nType.prototype.verify = function verify_setup(message) {\n    return this.setup().verify(message); // overrides this method\n};\n\n/**\n * Creates a new message of this type from a plain object. Also converts values to their respective internal types.\n * @param {Object.<string,*>} object Plain object to convert\n * @returns {Message<{}>} Message instance\n */\nType.prototype.fromObject = function fromObject(object) {\n    return this.setup().fromObject(object);\n};\n\n/**\n * Conversion options as used by {@link Type#toObject} and {@link Message.toObject}.\n * @interface IConversionOptions\n * @property {Function} [longs] Long conversion type.\n * Valid values are `String` and `Number` (the global types).\n * Defaults to copy the present value, which is a possibly unsafe number without and a {@link Long} with a long library.\n * @property {Function} [enums] Enum value conversion type.\n * Only valid value is `String` (the global type).\n * Defaults to copy the present value, which is the numeric id.\n * @property {Function} [bytes] Bytes value conversion type.\n * Valid values are `Array` and (a base64 encoded) `String` (the global types).\n * Defaults to copy the present value, which usually is a Buffer under node and an Uint8Array in the browser.\n * @property {boolean} [defaults=false] Also sets default values on the resulting object\n * @property {boolean} [arrays=false] Sets empty arrays for missing repeated fields even if `defaults=false`\n * @property {boolean} [objects=false] Sets empty objects for missing map fields even if `defaults=false`\n * @property {boolean} [oneofs=false] Includes virtual oneof properties set to the present field's name, if any\n * @property {boolean} [json=false] Performs additional JSON compatibility conversions, i.e. NaN and Infinity to strings\n */\n\n/**\n * Creates a plain object from a message of this type. Also converts values to other types if specified.\n * @param {Message<{}>} message Message instance\n * @param {IConversionOptions} [options] Conversion options\n * @returns {Object.<string,*>} Plain object\n */\nType.prototype.toObject = function toObject(message, options) {\n    return this.setup().toObject(message, options);\n};\n\n/**\n * Decorator function as returned by {@link Type.d} (TypeScript).\n * @typedef TypeDecorator\n * @type {function}\n * @param {Constructor<T>} target Target constructor\n * @returns {undefined}\n * @template T extends Message<T>\n */\n\n/**\n * Type decorator (TypeScript).\n * @param {string} [typeName] Type name, defaults to the constructor's name\n * @returns {TypeDecorator<T>} Decorator function\n * @template T extends Message<T>\n */\nType.d = function decorateType(typeName) {\n    return function typeDecorator(target) {\n        util.decorateType(target, typeName);\n    };\n};\n\n},{\"12\":12,\"13\":13,\"14\":14,\"15\":15,\"16\":16,\"20\":20,\"21\":21,\"23\":23,\"25\":25,\"27\":27,\"33\":33,\"37\":37,\"40\":40,\"41\":41,\"42\":42}],36:[function(require,module,exports){\n\"use strict\";\n\n/**\n * Common type constants.\n * @namespace\n */\nvar types = exports;\n\nvar util = require(37);\n\nvar s = [\n    \"double\",   // 0\n    \"float\",    // 1\n    \"int32\",    // 2\n    \"uint32\",   // 3\n    \"sint32\",   // 4\n    \"fixed32\",  // 5\n    \"sfixed32\", // 6\n    \"int64\",    // 7\n    \"uint64\",   // 8\n    \"sint64\",   // 9\n    \"fixed64\",  // 10\n    \"sfixed64\", // 11\n    \"bool\",     // 12\n    \"string\",   // 13\n    \"bytes\"     // 14\n];\n\nfunction bake(values, offset) {\n    var i = 0, o = {};\n    offset |= 0;\n    while (i < values.length) o[s[i + offset]] = values[i++];\n    return o;\n}\n\n/**\n * Basic type wire types.\n * @type {Object.<string,number>}\n * @const\n * @property {number} double=1 Fixed64 wire type\n * @property {number} float=5 Fixed32 wire type\n * @property {number} int32=0 Varint wire type\n * @property {number} uint32=0 Varint wire type\n * @property {number} sint32=0 Varint wire type\n * @property {number} fixed32=5 Fixed32 wire type\n * @property {number} sfixed32=5 Fixed32 wire type\n * @property {number} int64=0 Varint wire type\n * @property {number} uint64=0 Varint wire type\n * @property {number} sint64=0 Varint wire type\n * @property {number} fixed64=1 Fixed64 wire type\n * @property {number} sfixed64=1 Fixed64 wire type\n * @property {number} bool=0 Varint wire type\n * @property {number} string=2 Ldelim wire type\n * @property {number} bytes=2 Ldelim wire type\n */\ntypes.basic = bake([\n    /* double   */ 1,\n    /* float    */ 5,\n    /* int32    */ 0,\n    /* uint32   */ 0,\n    /* sint32   */ 0,\n    /* fixed32  */ 5,\n    /* sfixed32 */ 5,\n    /* int64    */ 0,\n    /* uint64   */ 0,\n    /* sint64   */ 0,\n    /* fixed64  */ 1,\n    /* sfixed64 */ 1,\n    /* bool     */ 0,\n    /* string   */ 2,\n    /* bytes    */ 2\n]);\n\n/**\n * Basic type defaults.\n * @type {Object.<string,*>}\n * @const\n * @property {number} double=0 Double default\n * @property {number} float=0 Float default\n * @property {number} int32=0 Int32 default\n * @property {number} uint32=0 Uint32 default\n * @property {number} sint32=0 Sint32 default\n * @property {number} fixed32=0 Fixed32 default\n * @property {number} sfixed32=0 Sfixed32 default\n * @property {number} int64=0 Int64 default\n * @property {number} uint64=0 Uint64 default\n * @property {number} sint64=0 Sint32 default\n * @property {number} fixed64=0 Fixed64 default\n * @property {number} sfixed64=0 Sfixed64 default\n * @property {boolean} bool=false Bool default\n * @property {string} string=\"\" String default\n * @property {Array.<number>} bytes=Array(0) Bytes default\n * @property {null} message=null Message default\n */\ntypes.defaults = bake([\n    /* double   */ 0,\n    /* float    */ 0,\n    /* int32    */ 0,\n    /* uint32   */ 0,\n    /* sint32   */ 0,\n    /* fixed32  */ 0,\n    /* sfixed32 */ 0,\n    /* int64    */ 0,\n    /* uint64   */ 0,\n    /* sint64   */ 0,\n    /* fixed64  */ 0,\n    /* sfixed64 */ 0,\n    /* bool     */ false,\n    /* string   */ \"\",\n    /* bytes    */ util.emptyArray,\n    /* message  */ null\n]);\n\n/**\n * Basic long type wire types.\n * @type {Object.<string,number>}\n * @const\n * @property {number} int64=0 Varint wire type\n * @property {number} uint64=0 Varint wire type\n * @property {number} sint64=0 Varint wire type\n * @property {number} fixed64=1 Fixed64 wire type\n * @property {number} sfixed64=1 Fixed64 wire type\n */\ntypes.long = bake([\n    /* int64    */ 0,\n    /* uint64   */ 0,\n    /* sint64   */ 0,\n    /* fixed64  */ 1,\n    /* sfixed64 */ 1\n], 7);\n\n/**\n * Allowed types for map keys with their associated wire type.\n * @type {Object.<string,number>}\n * @const\n * @property {number} int32=0 Varint wire type\n * @property {number} uint32=0 Varint wire type\n * @property {number} sint32=0 Varint wire type\n * @property {number} fixed32=5 Fixed32 wire type\n * @property {number} sfixed32=5 Fixed32 wire type\n * @property {number} int64=0 Varint wire type\n * @property {number} uint64=0 Varint wire type\n * @property {number} sint64=0 Varint wire type\n * @property {number} fixed64=1 Fixed64 wire type\n * @property {number} sfixed64=1 Fixed64 wire type\n * @property {number} bool=0 Varint wire type\n * @property {number} string=2 Ldelim wire type\n */\ntypes.mapKey = bake([\n    /* int32    */ 0,\n    /* uint32   */ 0,\n    /* sint32   */ 0,\n    /* fixed32  */ 5,\n    /* sfixed32 */ 5,\n    /* int64    */ 0,\n    /* uint64   */ 0,\n    /* sint64   */ 0,\n    /* fixed64  */ 1,\n    /* sfixed64 */ 1,\n    /* bool     */ 0,\n    /* string   */ 2\n], 2);\n\n/**\n * Allowed types for packed repeated fields with their associated wire type.\n * @type {Object.<string,number>}\n * @const\n * @property {number} double=1 Fixed64 wire type\n * @property {number} float=5 Fixed32 wire type\n * @property {number} int32=0 Varint wire type\n * @property {number} uint32=0 Varint wire type\n * @property {number} sint32=0 Varint wire type\n * @property {number} fixed32=5 Fixed32 wire type\n * @property {number} sfixed32=5 Fixed32 wire type\n * @property {number} int64=0 Varint wire type\n * @property {number} uint64=0 Varint wire type\n * @property {number} sint64=0 Varint wire type\n * @property {number} fixed64=1 Fixed64 wire type\n * @property {number} sfixed64=1 Fixed64 wire type\n * @property {number} bool=0 Varint wire type\n */\ntypes.packed = bake([\n    /* double   */ 1,\n    /* float    */ 5,\n    /* int32    */ 0,\n    /* uint32   */ 0,\n    /* sint32   */ 0,\n    /* fixed32  */ 5,\n    /* sfixed32 */ 5,\n    /* int64    */ 0,\n    /* uint64   */ 0,\n    /* sint64   */ 0,\n    /* fixed64  */ 1,\n    /* sfixed64 */ 1,\n    /* bool     */ 0\n]);\n\n},{\"37\":37}],37:[function(require,module,exports){\n\"use strict\";\n\n/**\n * Various utility functions.\n * @namespace\n */\nvar util = module.exports = require(39);\n\nvar roots = require(30);\n\nvar Type, // cyclic\n    Enum;\n\nutil.codegen = require(3);\nutil.fetch   = require(5);\nutil.path    = require(8);\n\n/**\n * Node's fs module if available.\n * @type {Object.<string,*>}\n */\nutil.fs = util.inquire(\"fs\");\n\n/**\n * Converts an object's values to an array.\n * @param {Object.<string,*>} object Object to convert\n * @returns {Array.<*>} Converted array\n */\nutil.toArray = function toArray(object) {\n    if (object) {\n        var keys  = Object.keys(object),\n            array = new Array(keys.length),\n            index = 0;\n        while (index < keys.length)\n            array[index] = object[keys[index++]];\n        return array;\n    }\n    return [];\n};\n\n/**\n * Converts an array of keys immediately followed by their respective value to an object, omitting undefined values.\n * @param {Array.<*>} array Array to convert\n * @returns {Object.<string,*>} Converted object\n */\nutil.toObject = function toObject(array) {\n    var object = {},\n        index  = 0;\n    while (index < array.length) {\n        var key = array[index++],\n            val = array[index++];\n        if (val !== undefined)\n            object[key] = val;\n    }\n    return object;\n};\n\nvar safePropBackslashRe = /\\\\/g,\n    safePropQuoteRe     = /\"/g;\n\n/**\n * Tests whether the specified name is a reserved word in JS.\n * @param {string} name Name to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nutil.isReserved = function isReserved(name) {\n    return /^(?:do|if|in|for|let|new|try|var|case|else|enum|eval|false|null|this|true|void|with|break|catch|class|const|super|throw|while|yield|delete|export|import|public|return|static|switch|typeof|default|extends|finally|package|private|continue|debugger|function|arguments|interface|protected|implements|instanceof)$/.test(name);\n};\n\n/**\n * Returns a safe property accessor for the specified property name.\n * @param {string} prop Property name\n * @returns {string} Safe accessor\n */\nutil.safeProp = function safeProp(prop) {\n    if (!/^[$\\w_]+$/.test(prop) || util.isReserved(prop))\n        return \"[\\\"\" + prop.replace(safePropBackslashRe, \"\\\\\\\\\").replace(safePropQuoteRe, \"\\\\\\\"\") + \"\\\"]\";\n    return \".\" + prop;\n};\n\n/**\n * Converts the first character of a string to upper case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.ucFirst = function ucFirst(str) {\n    return str.charAt(0).toUpperCase() + str.substring(1);\n};\n\nvar camelCaseRe = /_([a-z])/g;\n\n/**\n * Converts a string to camel case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.camelCase = function camelCase(str) {\n    return str.substring(0, 1)\n         + str.substring(1)\n               .replace(camelCaseRe, function($0, $1) { return $1.toUpperCase(); });\n};\n\n/**\n * Compares reflected fields by id.\n * @param {Field} a First field\n * @param {Field} b Second field\n * @returns {number} Comparison value\n */\nutil.compareFieldsById = function compareFieldsById(a, b) {\n    return a.id - b.id;\n};\n\n/**\n * Decorator helper for types (TypeScript).\n * @param {Constructor<T>} ctor Constructor function\n * @param {string} [typeName] Type name, defaults to the constructor's name\n * @returns {Type} Reflected type\n * @template T extends Message<T>\n * @property {Root} root Decorators root\n */\nutil.decorateType = function decorateType(ctor, typeName) {\n\n    /* istanbul ignore if */\n    if (ctor.$type) {\n        if (typeName && ctor.$type.name !== typeName) {\n            util.decorateRoot.remove(ctor.$type);\n            ctor.$type.name = typeName;\n            util.decorateRoot.add(ctor.$type);\n        }\n        return ctor.$type;\n    }\n\n    /* istanbul ignore next */\n    if (!Type)\n        Type = require(35);\n\n    var type = new Type(typeName || ctor.name);\n    util.decorateRoot.add(type);\n    type.ctor = ctor; // sets up .encode, .decode etc.\n    Object.defineProperty(ctor, \"$type\", { value: type, enumerable: false });\n    Object.defineProperty(ctor.prototype, \"$type\", { value: type, enumerable: false });\n    return type;\n};\n\nvar decorateEnumIndex = 0;\n\n/**\n * Decorator helper for enums (TypeScript).\n * @param {Object} object Enum object\n * @returns {Enum} Reflected enum\n */\nutil.decorateEnum = function decorateEnum(object) {\n\n    /* istanbul ignore if */\n    if (object.$type)\n        return object.$type;\n\n    /* istanbul ignore next */\n    if (!Enum)\n        Enum = require(15);\n\n    var enm = new Enum(\"Enum\" + decorateEnumIndex++, object);\n    util.decorateRoot.add(enm);\n    Object.defineProperty(object, \"$type\", { value: enm, enumerable: false });\n    return enm;\n};\n\n/**\n * Decorator root (TypeScript).\n * @name util.decorateRoot\n * @type {Root}\n * @readonly\n */\nObject.defineProperty(util, \"decorateRoot\", {\n    get: function() {\n        return roots[\"decorated\"] || (roots[\"decorated\"] = new (require(29))());\n    }\n});\n\n},{\"15\":15,\"29\":29,\"3\":3,\"30\":30,\"35\":35,\"39\":39,\"5\":5,\"8\":8}],38:[function(require,module,exports){\n\"use strict\";\nmodule.exports = LongBits;\n\nvar util = require(39);\n\n/**\n * Constructs new long bits.\n * @classdesc Helper class for working with the low and high bits of a 64 bit value.\n * @memberof util\n * @constructor\n * @param {number} lo Low 32 bits, unsigned\n * @param {number} hi High 32 bits, unsigned\n */\nfunction LongBits(lo, hi) {\n\n    // note that the casts below are theoretically unnecessary as of today, but older statically\n    // generated converter code might still call the ctor with signed 32bits. kept for compat.\n\n    /**\n     * Low bits.\n     * @type {number}\n     */\n    this.lo = lo >>> 0;\n\n    /**\n     * High bits.\n     * @type {number}\n     */\n    this.hi = hi >>> 0;\n}\n\n/**\n * Zero bits.\n * @memberof util.LongBits\n * @type {util.LongBits}\n */\nvar zero = LongBits.zero = new LongBits(0, 0);\n\nzero.toNumber = function() { return 0; };\nzero.zzEncode = zero.zzDecode = function() { return this; };\nzero.length = function() { return 1; };\n\n/**\n * Zero hash.\n * @memberof util.LongBits\n * @type {string}\n */\nvar zeroHash = LongBits.zeroHash = \"\\0\\0\\0\\0\\0\\0\\0\\0\";\n\n/**\n * Constructs new long bits from the specified number.\n * @param {number} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.fromNumber = function fromNumber(value) {\n    if (value === 0)\n        return zero;\n    var sign = value < 0;\n    if (sign)\n        value = -value;\n    var lo = value >>> 0,\n        hi = (value - lo) / 4294967296 >>> 0;\n    if (sign) {\n        hi = ~hi >>> 0;\n        lo = ~lo >>> 0;\n        if (++lo > 4294967295) {\n            lo = 0;\n            if (++hi > 4294967295)\n                hi = 0;\n        }\n    }\n    return new LongBits(lo, hi);\n};\n\n/**\n * Constructs new long bits from a number, long or string.\n * @param {Long|number|string} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.from = function from(value) {\n    if (typeof value === \"number\")\n        return LongBits.fromNumber(value);\n    if (util.isString(value)) {\n        /* istanbul ignore else */\n        if (util.Long)\n            value = util.Long.fromString(value);\n        else\n            return LongBits.fromNumber(parseInt(value, 10));\n    }\n    return value.low || value.high ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;\n};\n\n/**\n * Converts this long bits to a possibly unsafe JavaScript number.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {number} Possibly unsafe number\n */\nLongBits.prototype.toNumber = function toNumber(unsigned) {\n    if (!unsigned && this.hi >>> 31) {\n        var lo = ~this.lo + 1 >>> 0,\n            hi = ~this.hi     >>> 0;\n        if (!lo)\n            hi = hi + 1 >>> 0;\n        return -(lo + hi * 4294967296);\n    }\n    return this.lo + this.hi * 4294967296;\n};\n\n/**\n * Converts this long bits to a long.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long} Long\n */\nLongBits.prototype.toLong = function toLong(unsigned) {\n    return util.Long\n        ? new util.Long(this.lo | 0, this.hi | 0, Boolean(unsigned))\n        /* istanbul ignore next */\n        : { low: this.lo | 0, high: this.hi | 0, unsigned: Boolean(unsigned) };\n};\n\nvar charCodeAt = String.prototype.charCodeAt;\n\n/**\n * Constructs new long bits from the specified 8 characters long hash.\n * @param {string} hash Hash\n * @returns {util.LongBits} Bits\n */\nLongBits.fromHash = function fromHash(hash) {\n    if (hash === zeroHash)\n        return zero;\n    return new LongBits(\n        ( charCodeAt.call(hash, 0)\n        | charCodeAt.call(hash, 1) << 8\n        | charCodeAt.call(hash, 2) << 16\n        | charCodeAt.call(hash, 3) << 24) >>> 0\n    ,\n        ( charCodeAt.call(hash, 4)\n        | charCodeAt.call(hash, 5) << 8\n        | charCodeAt.call(hash, 6) << 16\n        | charCodeAt.call(hash, 7) << 24) >>> 0\n    );\n};\n\n/**\n * Converts this long bits to a 8 characters long hash.\n * @returns {string} Hash\n */\nLongBits.prototype.toHash = function toHash() {\n    return String.fromCharCode(\n        this.lo        & 255,\n        this.lo >>> 8  & 255,\n        this.lo >>> 16 & 255,\n        this.lo >>> 24      ,\n        this.hi        & 255,\n        this.hi >>> 8  & 255,\n        this.hi >>> 16 & 255,\n        this.hi >>> 24\n    );\n};\n\n/**\n * Zig-zag encodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzEncode = function zzEncode() {\n    var mask =   this.hi >> 31;\n    this.hi  = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;\n    this.lo  = ( this.lo << 1                   ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Zig-zag decodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzDecode = function zzDecode() {\n    var mask = -(this.lo & 1);\n    this.lo  = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;\n    this.hi  = ( this.hi >>> 1                  ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Calculates the length of this longbits when encoded as a varint.\n * @returns {number} Length\n */\nLongBits.prototype.length = function length() {\n    var part0 =  this.lo,\n        part1 = (this.lo >>> 28 | this.hi << 4) >>> 0,\n        part2 =  this.hi >>> 24;\n    return part2 === 0\n         ? part1 === 0\n           ? part0 < 16384\n             ? part0 < 128 ? 1 : 2\n             : part0 < 2097152 ? 3 : 4\n           : part1 < 16384\n             ? part1 < 128 ? 5 : 6\n             : part1 < 2097152 ? 7 : 8\n         : part2 < 128 ? 9 : 10;\n};\n\n},{\"39\":39}],39:[function(require,module,exports){\n\"use strict\";\nvar util = exports;\n\n// used to return a Promise where callback is omitted\nutil.asPromise = require(1);\n\n// converts to / from base64 encoded strings\nutil.base64 = require(2);\n\n// base class of rpc.Service\nutil.EventEmitter = require(4);\n\n// float handling accross browsers\nutil.float = require(6);\n\n// requires modules optionally and hides the call from bundlers\nutil.inquire = require(7);\n\n// converts to / from utf8 encoded strings\nutil.utf8 = require(10);\n\n// provides a node-like buffer pool in the browser\nutil.pool = require(9);\n\n// utility to work with the low and high bits of a 64 bit value\nutil.LongBits = require(38);\n\n/**\n * An immuable empty array.\n * @memberof util\n * @type {Array.<*>}\n * @const\n */\nutil.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes\n\n/**\n * An immutable empty object.\n * @type {Object}\n * @const\n */\nutil.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes\n\n/**\n * Whether running within node or not.\n * @memberof util\n * @type {boolean}\n * @const\n */\nutil.isNode = Boolean(global.process && global.process.versions && global.process.versions.node);\n\n/**\n * Tests if the specified value is an integer.\n * @function\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is an integer\n */\nutil.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {\n    return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\n};\n\n/**\n * Tests if the specified value is a string.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a string\n */\nutil.isString = function isString(value) {\n    return typeof value === \"string\" || value instanceof String;\n};\n\n/**\n * Tests if the specified value is a non-null object.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a non-null object\n */\nutil.isObject = function isObject(value) {\n    return value && typeof value === \"object\";\n};\n\n/**\n * Checks if a property on a message is considered to be present.\n * This is an alias of {@link util.isSet}.\n * @function\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isset =\n\n/**\n * Checks if a property on a message is considered to be present.\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isSet = function isSet(obj, prop) {\n    var value = obj[prop];\n    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins\n        return typeof value !== \"object\" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;\n    return false;\n};\n\n/**\n * Any compatible Buffer instance.\n * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.\n * @interface Buffer\n * @extends Uint8Array\n */\n\n/**\n * Node's Buffer class if available.\n * @type {Constructor<Buffer>}\n */\nutil.Buffer = (function() {\n    try {\n        var Buffer = util.inquire(\"buffer\").Buffer;\n        // refuse to use non-node buffers if not explicitly assigned (perf reasons):\n        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;\n    } catch (e) {\n        /* istanbul ignore next */\n        return null;\n    }\n})();\n\n// Internal alias of or polyfull for Buffer.from.\nutil._Buffer_from = null;\n\n// Internal alias of or polyfill for Buffer.allocUnsafe.\nutil._Buffer_allocUnsafe = null;\n\n/**\n * Creates a new buffer of whatever type supported by the environment.\n * @param {number|number[]} [sizeOrArray=0] Buffer size or number array\n * @returns {Uint8Array|Buffer} Buffer\n */\nutil.newBuffer = function newBuffer(sizeOrArray) {\n    /* istanbul ignore next */\n    return typeof sizeOrArray === \"number\"\n        ? util.Buffer\n            ? util._Buffer_allocUnsafe(sizeOrArray)\n            : new util.Array(sizeOrArray)\n        : util.Buffer\n            ? util._Buffer_from(sizeOrArray)\n            : typeof Uint8Array === \"undefined\"\n                ? sizeOrArray\n                : new Uint8Array(sizeOrArray);\n};\n\n/**\n * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.\n * @type {Constructor<Uint8Array>}\n */\nutil.Array = typeof Uint8Array !== \"undefined\" ? Uint8Array /* istanbul ignore next */ : Array;\n\n/**\n * Any compatible Long instance.\n * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.\n * @interface Long\n * @property {number} low Low bits\n * @property {number} high High bits\n * @property {boolean} unsigned Whether unsigned or not\n */\n\n/**\n * Long.js's Long class if available.\n * @type {Constructor<Long>}\n */\nutil.Long = /* istanbul ignore next */ global.dcodeIO && /* istanbul ignore next */ global.dcodeIO.Long || util.inquire(\"long\");\n\n/**\n * Regular expression used to verify 2 bit (`bool`) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key2Re = /^true|false|0|1$/;\n\n/**\n * Regular expression used to verify 32 bit (`int32` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key32Re = /^-?(?:0|[1-9][0-9]*)$/;\n\n/**\n * Regular expression used to verify 64 bit (`int64` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key64Re = /^(?:[\\\\x00-\\\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;\n\n/**\n * Converts a number or long to an 8 characters long hash string.\n * @param {Long|number} value Value to convert\n * @returns {string} Hash\n */\nutil.longToHash = function longToHash(value) {\n    return value\n        ? util.LongBits.from(value).toHash()\n        : util.LongBits.zeroHash;\n};\n\n/**\n * Converts an 8 characters long hash string to a long or number.\n * @param {string} hash Hash\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long|number} Original value\n */\nutil.longFromHash = function longFromHash(hash, unsigned) {\n    var bits = util.LongBits.fromHash(hash);\n    if (util.Long)\n        return util.Long.fromBits(bits.lo, bits.hi, unsigned);\n    return bits.toNumber(Boolean(unsigned));\n};\n\n/**\n * Merges the properties of the source object into the destination object.\n * @memberof util\n * @param {Object.<string,*>} dst Destination object\n * @param {Object.<string,*>} src Source object\n * @param {boolean} [ifNotSet=false] Merges only if the key is not already set\n * @returns {Object.<string,*>} Destination object\n */\nfunction merge(dst, src, ifNotSet) { // used by converters\n    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)\n        if (dst[keys[i]] === undefined || !ifNotSet)\n            dst[keys[i]] = src[keys[i]];\n    return dst;\n}\n\nutil.merge = merge;\n\n/**\n * Converts the first character of a string to lower case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.lcFirst = function lcFirst(str) {\n    return str.charAt(0).toLowerCase() + str.substring(1);\n};\n\n/**\n * Creates a custom error constructor.\n * @memberof util\n * @param {string} name Error name\n * @returns {Constructor<Error>} Custom error constructor\n */\nfunction newError(name) {\n\n    function CustomError(message, properties) {\n\n        if (!(this instanceof CustomError))\n            return new CustomError(message, properties);\n\n        // Error.call(this, message);\n        // ^ just returns a new error instance because the ctor can be called as a function\n\n        Object.defineProperty(this, \"message\", { get: function() { return message; } });\n\n        /* istanbul ignore next */\n        if (Error.captureStackTrace) // node\n            Error.captureStackTrace(this, CustomError);\n        else\n            Object.defineProperty(this, \"stack\", { value: (new Error()).stack || \"\" });\n\n        if (properties)\n            merge(this, properties);\n    }\n\n    (CustomError.prototype = Object.create(Error.prototype)).constructor = CustomError;\n\n    Object.defineProperty(CustomError.prototype, \"name\", { get: function() { return name; } });\n\n    CustomError.prototype.toString = function toString() {\n        return this.name + \": \" + this.message;\n    };\n\n    return CustomError;\n}\n\nutil.newError = newError;\n\n/**\n * Constructs a new protocol error.\n * @classdesc Error subclass indicating a protocol specifc error.\n * @memberof util\n * @extends Error\n * @template T extends Message<T>\n * @constructor\n * @param {string} message Error message\n * @param {Object.<string,*>} [properties] Additional properties\n * @example\n * try {\n *     MyMessage.decode(someBuffer); // throws if required fields are missing\n * } catch (e) {\n *     if (e instanceof ProtocolError && e.instance)\n *         console.log(\"decoded so far: \" + JSON.stringify(e.instance));\n * }\n */\nutil.ProtocolError = newError(\"ProtocolError\");\n\n/**\n * So far decoded message instance.\n * @name util.ProtocolError#instance\n * @type {Message<T>}\n */\n\n/**\n * A OneOf getter as returned by {@link util.oneOfGetter}.\n * @typedef OneOfGetter\n * @type {function}\n * @returns {string|undefined} Set field name, if any\n */\n\n/**\n * Builds a getter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfGetter} Unbound getter\n */\nutil.oneOfGetter = function getOneOf(fieldNames) {\n    var fieldMap = {};\n    for (var i = 0; i < fieldNames.length; ++i)\n        fieldMap[fieldNames[i]] = 1;\n\n    /**\n     * @returns {string|undefined} Set field name, if any\n     * @this Object\n     * @ignore\n     */\n    return function() { // eslint-disable-line consistent-return\n        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)\n            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)\n                return keys[i];\n    };\n};\n\n/**\n * A OneOf setter as returned by {@link util.oneOfSetter}.\n * @typedef OneOfSetter\n * @type {function}\n * @param {string|undefined} value Field name\n * @returns {undefined}\n */\n\n/**\n * Builds a setter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfSetter} Unbound setter\n */\nutil.oneOfSetter = function setOneOf(fieldNames) {\n\n    /**\n     * @param {string} name Field name\n     * @returns {undefined}\n     * @this Object\n     * @ignore\n     */\n    return function(name) {\n        for (var i = 0; i < fieldNames.length; ++i)\n            if (fieldNames[i] !== name)\n                delete this[fieldNames[i]];\n    };\n};\n\n/**\n * Default conversion options used for {@link Message#toJSON} implementations.\n *\n * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:\n *\n * - Longs become strings\n * - Enums become string keys\n * - Bytes become base64 encoded strings\n * - (Sub-)Messages become plain objects\n * - Maps become plain objects with all string keys\n * - Repeated fields become arrays\n * - NaN and Infinity for float and double fields become strings\n *\n * @type {IConversionOptions}\n * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json\n */\nutil.toJSONOptions = {\n    longs: String,\n    enums: String,\n    bytes: String,\n    json: true\n};\n\nutil._configure = function() {\n    var Buffer = util.Buffer;\n    /* istanbul ignore if */\n    if (!Buffer) {\n        util._Buffer_from = util._Buffer_allocUnsafe = null;\n        return;\n    }\n    // because node 4.x buffers are incompatible & immutable\n    // see: https://github.com/dcodeIO/protobuf.js/pull/665\n    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||\n        /* istanbul ignore next */\n        function Buffer_from(value, encoding) {\n            return new Buffer(value, encoding);\n        };\n    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||\n        /* istanbul ignore next */\n        function Buffer_allocUnsafe(size) {\n            return new Buffer(size);\n        };\n};\n\n},{\"1\":1,\"10\":10,\"2\":2,\"38\":38,\"4\":4,\"6\":6,\"7\":7,\"9\":9}],40:[function(require,module,exports){\n\"use strict\";\nmodule.exports = verifier;\n\nvar Enum      = require(15),\n    util      = require(37);\n\nfunction invalid(field, expected) {\n    return field.name + \": \" + expected + (field.repeated && expected !== \"array\" ? \"[]\" : field.map && expected !== \"object\" ? \"{k:\"+field.keyType+\"}\" : \"\") + \" expected\";\n}\n\n/**\n * Generates a partial value verifier.\n * @param {Codegen} gen Codegen instance\n * @param {Field} field Reflected field\n * @param {number} fieldIndex Field index\n * @param {string} ref Variable reference\n * @returns {Codegen} Codegen instance\n * @ignore\n */\nfunction genVerifyValue(gen, field, fieldIndex, ref) {\n    /* eslint-disable no-unexpected-multiline */\n    if (field.resolvedType) {\n        if (field.resolvedType instanceof Enum) { gen\n            (\"switch(%s){\", ref)\n                (\"default:\")\n                    (\"return%j\", invalid(field, \"enum value\"));\n            for (var keys = Object.keys(field.resolvedType.values), j = 0; j < keys.length; ++j) gen\n                (\"case %i:\", field.resolvedType.values[keys[j]]);\n            gen\n                    (\"break\")\n            (\"}\");\n        } else {\n            gen\n            (\"{\")\n                (\"var e=types[%i].verify(%s);\", fieldIndex, ref)\n                (\"if(e)\")\n                    (\"return%j+e\", field.name + \".\")\n            (\"}\");\n        }\n    } else {\n        switch (field.type) {\n            case \"int32\":\n            case \"uint32\":\n            case \"sint32\":\n            case \"fixed32\":\n            case \"sfixed32\": gen\n                (\"if(!util.isInteger(%s))\", ref)\n                    (\"return%j\", invalid(field, \"integer\"));\n                break;\n            case \"int64\":\n            case \"uint64\":\n            case \"sint64\":\n            case \"fixed64\":\n            case \"sfixed64\": gen\n                (\"if(!util.isInteger(%s)&&!(%s&&util.isInteger(%s.low)&&util.isInteger(%s.high)))\", ref, ref, ref, ref)\n                    (\"return%j\", invalid(field, \"integer|Long\"));\n                break;\n            case \"float\":\n            case \"double\": gen\n                (\"if(typeof %s!==\\\"number\\\")\", ref)\n                    (\"return%j\", invalid(field, \"number\"));\n                break;\n            case \"bool\": gen\n                (\"if(typeof %s!==\\\"boolean\\\")\", ref)\n                    (\"return%j\", invalid(field, \"boolean\"));\n                break;\n            case \"string\": gen\n                (\"if(!util.isString(%s))\", ref)\n                    (\"return%j\", invalid(field, \"string\"));\n                break;\n            case \"bytes\": gen\n                (\"if(!(%s&&typeof %s.length===\\\"number\\\"||util.isString(%s)))\", ref, ref, ref)\n                    (\"return%j\", invalid(field, \"buffer\"));\n                break;\n        }\n    }\n    return gen;\n    /* eslint-enable no-unexpected-multiline */\n}\n\n/**\n * Generates a partial key verifier.\n * @param {Codegen} gen Codegen instance\n * @param {Field} field Reflected field\n * @param {string} ref Variable reference\n * @returns {Codegen} Codegen instance\n * @ignore\n */\nfunction genVerifyKey(gen, field, ref) {\n    /* eslint-disable no-unexpected-multiline */\n    switch (field.keyType) {\n        case \"int32\":\n        case \"uint32\":\n        case \"sint32\":\n        case \"fixed32\":\n        case \"sfixed32\": gen\n            (\"if(!util.key32Re.test(%s))\", ref)\n                (\"return%j\", invalid(field, \"integer key\"));\n            break;\n        case \"int64\":\n        case \"uint64\":\n        case \"sint64\":\n        case \"fixed64\":\n        case \"sfixed64\": gen\n            (\"if(!util.key64Re.test(%s))\", ref) // see comment above: x is ok, d is not\n                (\"return%j\", invalid(field, \"integer|Long key\"));\n            break;\n        case \"bool\": gen\n            (\"if(!util.key2Re.test(%s))\", ref)\n                (\"return%j\", invalid(field, \"boolean key\"));\n            break;\n    }\n    return gen;\n    /* eslint-enable no-unexpected-multiline */\n}\n\n/**\n * Generates a verifier specific to the specified message type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nfunction verifier(mtype) {\n    /* eslint-disable no-unexpected-multiline */\n\n    var gen = util.codegen([\"m\"], mtype.name + \"$verify\")\n    (\"if(typeof m!==\\\"object\\\"||m===null)\")\n        (\"return%j\", \"object expected\");\n    var oneofs = mtype.oneofsArray,\n        seenFirstField = {};\n    if (oneofs.length) gen\n    (\"var p={}\");\n\n    for (var i = 0; i < /* initializes */ mtype.fieldsArray.length; ++i) {\n        var field = mtype._fieldsArray[i].resolve(),\n            ref   = \"m\" + util.safeProp(field.name);\n\n        if (field.optional) gen\n        (\"if(%s!=null&&m.hasOwnProperty(%j)){\", ref, field.name); // !== undefined && !== null\n\n        // map fields\n        if (field.map) { gen\n            (\"if(!util.isObject(%s))\", ref)\n                (\"return%j\", invalid(field, \"object\"))\n            (\"var k=Object.keys(%s)\", ref)\n            (\"for(var i=0;i<k.length;++i){\");\n                genVerifyKey(gen, field, \"k[i]\");\n                genVerifyValue(gen, field, i, ref + \"[k[i]]\")\n            (\"}\");\n\n        // repeated fields\n        } else if (field.repeated) { gen\n            (\"if(!Array.isArray(%s))\", ref)\n                (\"return%j\", invalid(field, \"array\"))\n            (\"for(var i=0;i<%s.length;++i){\", ref);\n                genVerifyValue(gen, field, i, ref + \"[i]\")\n            (\"}\");\n\n        // required or present fields\n        } else {\n            if (field.partOf) {\n                var oneofProp = util.safeProp(field.partOf.name);\n                if (seenFirstField[field.partOf.name] === 1) gen\n            (\"if(p%s===1)\", oneofProp)\n                (\"return%j\", field.partOf.name + \": multiple values\");\n                seenFirstField[field.partOf.name] = 1;\n                gen\n            (\"p%s=1\", oneofProp);\n            }\n            genVerifyValue(gen, field, i, ref);\n        }\n        if (field.optional) gen\n        (\"}\");\n    }\n    return gen\n    (\"return null\");\n    /* eslint-enable no-unexpected-multiline */\n}\n},{\"15\":15,\"37\":37}],41:[function(require,module,exports){\n\"use strict\";\n\n/**\n * Wrappers for common types.\n * @type {Object.<string,IWrapper>}\n * @const\n */\nvar wrappers = exports;\n\nvar Message = require(21);\n\n/**\n * From object converter part of an {@link IWrapper}.\n * @typedef WrapperFromObjectConverter\n * @type {function}\n * @param {Object.<string,*>} object Plain object\n * @returns {Message<{}>} Message instance\n * @this Type\n */\n\n/**\n * To object converter part of an {@link IWrapper}.\n * @typedef WrapperToObjectConverter\n * @type {function}\n * @param {Message<{}>} message Message instance\n * @param {IConversionOptions} [options] Conversion options\n * @returns {Object.<string,*>} Plain object\n * @this Type\n */\n\n/**\n * Common type wrapper part of {@link wrappers}.\n * @interface IWrapper\n * @property {WrapperFromObjectConverter} [fromObject] From object converter\n * @property {WrapperToObjectConverter} [toObject] To object converter\n */\n\n// Custom wrapper for Any\nwrappers[\".google.protobuf.Any\"] = {\n\n    fromObject: function(object) {\n\n        // unwrap value type if mapped\n        if (object && object[\"@type\"]) {\n            var type = this.lookup(object[\"@type\"]);\n            /* istanbul ignore else */\n            if (type) {\n                // type_url does not accept leading \".\"\n                var type_url = object[\"@type\"].charAt(0) === \".\" ?\n                    object[\"@type\"].substr(1) : object[\"@type\"];\n                // type_url prefix is optional, but path seperator is required\n                return this.create({\n                    type_url: \"/\" + type_url,\n                    value: type.encode(type.fromObject(object)).finish()\n                });\n            }\n        }\n\n        return this.fromObject(object);\n    },\n\n    toObject: function(message, options) {\n\n        // decode value if requested and unmapped\n        if (options && options.json && message.type_url && message.value) {\n            // Only use fully qualified type name after the last '/'\n            var name = message.type_url.substring(message.type_url.lastIndexOf(\"/\") + 1);\n            var type = this.lookup(name);\n            /* istanbul ignore else */\n            if (type)\n                message = type.decode(message.value);\n        }\n\n        // wrap value if unmapped\n        if (!(message instanceof this.ctor) && message instanceof Message) {\n            var object = message.$type.toObject(message, options);\n            object[\"@type\"] = message.$type.fullName;\n            return object;\n        }\n\n        return this.toObject(message, options);\n    }\n};\n\n},{\"21\":21}],42:[function(require,module,exports){\n\"use strict\";\nmodule.exports = Writer;\n\nvar util      = require(39);\n\nvar BufferWriter; // cyclic\n\nvar LongBits  = util.LongBits,\n    base64    = util.base64,\n    utf8      = util.utf8;\n\n/**\n * Constructs a new writer operation instance.\n * @classdesc Scheduled writer operation.\n * @constructor\n * @param {function(*, Uint8Array, number)} fn Function to call\n * @param {number} len Value byte length\n * @param {*} val Value to write\n * @ignore\n */\nfunction Op(fn, len, val) {\n\n    /**\n     * Function to call.\n     * @type {function(Uint8Array, number, *)}\n     */\n    this.fn = fn;\n\n    /**\n     * Value byte length.\n     * @type {number}\n     */\n    this.len = len;\n\n    /**\n     * Next operation.\n     * @type {Writer.Op|undefined}\n     */\n    this.next = undefined;\n\n    /**\n     * Value to write.\n     * @type {*}\n     */\n    this.val = val; // type varies\n}\n\n/* istanbul ignore next */\nfunction noop() {} // eslint-disable-line no-empty-function\n\n/**\n * Constructs a new writer state instance.\n * @classdesc Copied writer state.\n * @memberof Writer\n * @constructor\n * @param {Writer} writer Writer to copy state from\n * @ignore\n */\nfunction State(writer) {\n\n    /**\n     * Current head.\n     * @type {Writer.Op}\n     */\n    this.head = writer.head;\n\n    /**\n     * Current tail.\n     * @type {Writer.Op}\n     */\n    this.tail = writer.tail;\n\n    /**\n     * Current buffer length.\n     * @type {number}\n     */\n    this.len = writer.len;\n\n    /**\n     * Next state.\n     * @type {State|null}\n     */\n    this.next = writer.states;\n}\n\n/**\n * Constructs a new writer instance.\n * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n */\nfunction Writer() {\n\n    /**\n     * Current length.\n     * @type {number}\n     */\n    this.len = 0;\n\n    /**\n     * Operations head.\n     * @type {Object}\n     */\n    this.head = new Op(noop, 0, 0);\n\n    /**\n     * Operations tail\n     * @type {Object}\n     */\n    this.tail = this.head;\n\n    /**\n     * Linked forked states.\n     * @type {Object|null}\n     */\n    this.states = null;\n\n    // When a value is written, the writer calculates its byte length and puts it into a linked\n    // list of operations to perform when finish() is called. This both allows us to allocate\n    // buffers of the exact required size and reduces the amount of work we have to do compared\n    // to first calculating over objects and then encoding over objects. In our case, the encoding\n    // part is just a linked list walk calling operations with already prepared values.\n}\n\n/**\n * Creates a new writer.\n * @function\n * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}\n */\nWriter.create = util.Buffer\n    ? function create_buffer_setup() {\n        return (Writer.create = function create_buffer() {\n            return new BufferWriter();\n        })();\n    }\n    /* istanbul ignore next */\n    : function create_array() {\n        return new Writer();\n    };\n\n/**\n * Allocates a buffer of the specified size.\n * @param {number} size Buffer size\n * @returns {Uint8Array} Buffer\n */\nWriter.alloc = function alloc(size) {\n    return new util.Array(size);\n};\n\n// Use Uint8Array buffer pool in the browser, just like node does with buffers\n/* istanbul ignore else */\nif (util.Array !== Array)\n    Writer.alloc = util.pool(Writer.alloc, util.Array.prototype.subarray);\n\n/**\n * Pushes a new operation to the queue.\n * @param {function(Uint8Array, number, *)} fn Function to call\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @returns {Writer} `this`\n * @private\n */\nWriter.prototype._push = function push(fn, len, val) {\n    this.tail = this.tail.next = new Op(fn, len, val);\n    this.len += len;\n    return this;\n};\n\nfunction writeByte(val, buf, pos) {\n    buf[pos] = val & 255;\n}\n\nfunction writeVarint32(val, buf, pos) {\n    while (val > 127) {\n        buf[pos++] = val & 127 | 128;\n        val >>>= 7;\n    }\n    buf[pos] = val;\n}\n\n/**\n * Constructs a new varint writer operation instance.\n * @classdesc Scheduled varint writer operation.\n * @extends Op\n * @constructor\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @ignore\n */\nfunction VarintOp(len, val) {\n    this.len = len;\n    this.next = undefined;\n    this.val = val;\n}\n\nVarintOp.prototype = Object.create(Op.prototype);\nVarintOp.prototype.fn = writeVarint32;\n\n/**\n * Writes an unsigned 32 bit value as a varint.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.uint32 = function write_uint32(value) {\n    // here, the call to this.push has been inlined and a varint specific Op subclass is used.\n    // uint32 is by far the most frequently used operation and benefits significantly from this.\n    this.len += (this.tail = this.tail.next = new VarintOp(\n        (value = value >>> 0)\n                < 128       ? 1\n        : value < 16384     ? 2\n        : value < 2097152   ? 3\n        : value < 268435456 ? 4\n        :                     5,\n    value)).len;\n    return this;\n};\n\n/**\n * Writes a signed 32 bit value as a varint.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.int32 = function write_int32(value) {\n    return value < 0\n        ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\n        : this.uint32(value);\n};\n\n/**\n * Writes a 32 bit value as a varint, zig-zag encoded.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sint32 = function write_sint32(value) {\n    return this.uint32((value << 1 ^ value >> 31) >>> 0);\n};\n\nfunction writeVarint64(val, buf, pos) {\n    while (val.hi) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;\n        val.hi >>>= 7;\n    }\n    while (val.lo > 127) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = val.lo >>> 7;\n    }\n    buf[pos++] = val.lo;\n}\n\n/**\n * Writes an unsigned 64 bit value as a varint.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.uint64 = function write_uint64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a signed 64 bit value as a varint.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.int64 = Writer.prototype.uint64;\n\n/**\n * Writes a signed 64 bit value as a varint, zig-zag encoded.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sint64 = function write_sint64(value) {\n    var bits = LongBits.from(value).zzEncode();\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a boolish value as a varint.\n * @param {boolean} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bool = function write_bool(value) {\n    return this._push(writeByte, 1, value ? 1 : 0);\n};\n\nfunction writeFixed32(val, buf, pos) {\n    buf[pos    ] =  val         & 255;\n    buf[pos + 1] =  val >>> 8   & 255;\n    buf[pos + 2] =  val >>> 16  & 255;\n    buf[pos + 3] =  val >>> 24;\n}\n\n/**\n * Writes an unsigned 32 bit value as fixed 32 bits.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.fixed32 = function write_fixed32(value) {\n    return this._push(writeFixed32, 4, value >>> 0);\n};\n\n/**\n * Writes a signed 32 bit value as fixed 32 bits.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sfixed32 = Writer.prototype.fixed32;\n\n/**\n * Writes an unsigned 64 bit value as fixed 64 bits.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.fixed64 = function write_fixed64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);\n};\n\n/**\n * Writes a signed 64 bit value as fixed 64 bits.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sfixed64 = Writer.prototype.fixed64;\n\n/**\n * Writes a float (32 bit).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.float = function write_float(value) {\n    return this._push(util.float.writeFloatLE, 4, value);\n};\n\n/**\n * Writes a double (64 bit float).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.double = function write_double(value) {\n    return this._push(util.float.writeDoubleLE, 8, value);\n};\n\nvar writeBytes = util.Array.prototype.set\n    ? function writeBytes_set(val, buf, pos) {\n        buf.set(val, pos); // also works for plain array values\n    }\n    /* istanbul ignore next */\n    : function writeBytes_for(val, buf, pos) {\n        for (var i = 0; i < val.length; ++i)\n            buf[pos + i] = val[i];\n    };\n\n/**\n * Writes a sequence of bytes.\n * @param {Uint8Array|string} value Buffer or base64 encoded string to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bytes = function write_bytes(value) {\n    var len = value.length >>> 0;\n    if (!len)\n        return this._push(writeByte, 1, 0);\n    if (util.isString(value)) {\n        var buf = Writer.alloc(len = base64.length(value));\n        base64.decode(value, buf, 0);\n        value = buf;\n    }\n    return this.uint32(len)._push(writeBytes, len, value);\n};\n\n/**\n * Writes a string.\n * @param {string} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.string = function write_string(value) {\n    var len = utf8.length(value);\n    return len\n        ? this.uint32(len)._push(utf8.write, len, value)\n        : this._push(writeByte, 1, 0);\n};\n\n/**\n * Forks this writer's state by pushing it to a stack.\n * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\n * @returns {Writer} `this`\n */\nWriter.prototype.fork = function fork() {\n    this.states = new State(this);\n    this.head = this.tail = new Op(noop, 0, 0);\n    this.len = 0;\n    return this;\n};\n\n/**\n * Resets this instance to the last state.\n * @returns {Writer} `this`\n */\nWriter.prototype.reset = function reset() {\n    if (this.states) {\n        this.head   = this.states.head;\n        this.tail   = this.states.tail;\n        this.len    = this.states.len;\n        this.states = this.states.next;\n    } else {\n        this.head = this.tail = new Op(noop, 0, 0);\n        this.len  = 0;\n    }\n    return this;\n};\n\n/**\n * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\n * @returns {Writer} `this`\n */\nWriter.prototype.ldelim = function ldelim() {\n    var head = this.head,\n        tail = this.tail,\n        len  = this.len;\n    this.reset().uint32(len);\n    if (len) {\n        this.tail.next = head.next; // skip noop\n        this.tail = tail;\n        this.len += len;\n    }\n    return this;\n};\n\n/**\n * Finishes the write operation.\n * @returns {Uint8Array} Finished buffer\n */\nWriter.prototype.finish = function finish() {\n    var head = this.head.next, // skip noop\n        buf  = this.constructor.alloc(this.len),\n        pos  = 0;\n    while (head) {\n        head.fn(head.val, buf, pos);\n        pos += head.len;\n        head = head.next;\n    }\n    // this.head = this.tail = null;\n    return buf;\n};\n\nWriter._configure = function(BufferWriter_) {\n    BufferWriter = BufferWriter_;\n};\n\n},{\"39\":39}],43:[function(require,module,exports){\n\"use strict\";\nmodule.exports = BufferWriter;\n\n// extends Writer\nvar Writer = require(42);\n(BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;\n\nvar util = require(39);\n\nvar Buffer = util.Buffer;\n\n/**\n * Constructs a new buffer writer instance.\n * @classdesc Wire format writer using node buffers.\n * @extends Writer\n * @constructor\n */\nfunction BufferWriter() {\n    Writer.call(this);\n}\n\n/**\n * Allocates a buffer of the specified size.\n * @param {number} size Buffer size\n * @returns {Buffer} Buffer\n */\nBufferWriter.alloc = function alloc_buffer(size) {\n    return (BufferWriter.alloc = util._Buffer_allocUnsafe)(size);\n};\n\nvar writeBytesBuffer = Buffer && Buffer.prototype instanceof Uint8Array && Buffer.prototype.set.name === \"set\"\n    ? function writeBytesBuffer_set(val, buf, pos) {\n        buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)\n                           // also works for plain array values\n    }\n    /* istanbul ignore next */\n    : function writeBytesBuffer_copy(val, buf, pos) {\n        if (val.copy) // Buffer values\n            val.copy(buf, pos, 0, val.length);\n        else for (var i = 0; i < val.length;) // plain array values\n            buf[pos++] = val[i++];\n    };\n\n/**\n * @override\n */\nBufferWriter.prototype.bytes = function write_bytes_buffer(value) {\n    if (util.isString(value))\n        value = util._Buffer_from(value, \"base64\");\n    var len = value.length >>> 0;\n    this.uint32(len);\n    if (len)\n        this._push(writeBytesBuffer, len, value);\n    return this;\n};\n\nfunction writeStringBuffer(val, buf, pos) {\n    if (val.length < 40) // plain js is faster for short strings (probably due to redundant assertions)\n        util.utf8.write(val, buf, pos);\n    else\n        buf.utf8Write(val, pos);\n}\n\n/**\n * @override\n */\nBufferWriter.prototype.string = function write_string_buffer(value) {\n    var len = Buffer.byteLength(value);\n    this.uint32(len);\n    if (len)\n        this._push(writeStringBuffer, len, value);\n    return this;\n};\n\n\n/**\n * Finishes the write operation.\n * @name BufferWriter#finish\n * @function\n * @returns {Buffer} Finished buffer\n */\n\n},{\"39\":39,\"42\":42}]},{},[19])\n\n})();","import $protobuf from './protobuf.js'\n\n/*eslint-disable block-scoped-var, no-redeclare, no-control-regex, no-prototype-builtins*/\n\"use strict\";\n\n// Common aliases\nlet $Reader = $protobuf.Reader,\n\t$Writer = $protobuf.Writer,\n\t$util = $protobuf.util\n\n// Exported root namespace\nexport const $root =\n\t$protobuf.roots['push-server'] || ($protobuf.roots['push-server'] = {})\n\n$root.RequestBatch = (function () {\n\t/**\n\t * Properties of a RequestBatch.\n\t * @exports IRequestBatch\n\t * @interface IRequestBatch\n\t * @property {Array.<Request>|null} [requests] RequestBatch requests\n\t */\n\t\n\t/**\n\t * Constructs a new RequestBatch.\n\t * @exports RequestBatch\n\t * @classdesc Represents a RequestBatch.\n\t * @implements IRequestBatch\n\t * @constructor\n\t * @param {IRequestBatch=} [properties] Properties to set\n\t */\n\tfunction RequestBatch(properties) {\n\t\tthis.requests = []\n\t\tif (properties) {\n\t\t\tfor (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n\t\t\t\tif (properties[keys[i]] != null) {\n\t\t\t\t\tthis[keys[i]] = properties[keys[i]]\n\t\t\t\t}\n\t\t}\n\t}\n\t\n\t/**\n\t * RequestBatch requests.\n\t * @member {Array.<Request>} requests\n\t * @memberof RequestBatch\n\t * @instance\n\t */\n\tRequestBatch.prototype.requests = $util.emptyArray\n\t\n\t/**\n\t * Creates a new RequestBatch instance using the specified properties.\n\t * @function create\n\t * @memberof RequestBatch\n\t * @static\n\t * @param {IRequestBatch=} [properties] Properties to set\n\t * @returns {RequestBatch} RequestBatch instance\n\t */\n\tRequestBatch.create = function create(properties) {\n\t\treturn new RequestBatch(properties)\n\t}\n\t\n\t/**\n\t * Encodes the specified RequestBatch message. Does not implicitly {@link RequestBatch.verify|verify} messages.\n\t * @function encode\n\t * @memberof RequestBatch\n\t * @static\n\t * @param {RequestBatch} message RequestBatch message or plain object to encode\n\t * @param {$protobuf.Writer} [writer] Writer to encode to\n\t * @returns {$protobuf.Writer} Writer\n\t */\n\tRequestBatch.encode = function encode(message, writer) {\n\t\tif (!writer) {\n\t\t\twriter = $Writer.create()\n\t\t}\n\t\tif (message.requests != null && message.requests.length) {\n\t\t\tfor (var i = 0; i < message.requests.length; ++i)\n\t\t\t\t$root.Request.encode(\n\t\t\t\t\tmessage.requests[i],\n\t\t\t\t\twriter.uint32(/* id 1, wireType 2 =*/ 10).fork()\n\t\t\t\t).ldelim()\n\t\t}\n\t\treturn writer\n\t}\n\t\n\t/**\n\t * Decodes a RequestBatch message from the specified reader or buffer.\n\t * @function decode\n\t * @memberof RequestBatch\n\t * @static\n\t * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n\t * @param {number} [length] Message length if known beforehand\n\t * @returns {RequestBatch} RequestBatch\n\t * @throws {Error} If the payload is not a reader or valid buffer\n\t * @throws {$protobuf.util.ProtocolError} If required fields are missing\n\t */\n\tRequestBatch.decode = function decode(reader, length) {\n\t\tif (!(reader instanceof $Reader)) {\n\t\t\treader = $Reader.create(reader)\n\t\t}\n\t\tvar end = length === undefined ? reader.len : reader.pos + length,\n\t\t\tmessage = new $root.RequestBatch()\n\t\twhile (reader.pos < end) {\n\t\t\tvar tag = reader.uint32()\n\t\t\tswitch (tag >>> 3) {\n\t\t\t\tcase 1:\n\t\t\t\t\tif (!(message.requests && message.requests.length)) {\n\t\t\t\t\t\tmessage.requests = []\n\t\t\t\t\t}\n\t\t\t\t\tmessage.requests.push($root.Request.decode(reader, reader.uint32()))\n\t\t\t\t\tbreak\n\t\t\t\tdefault:\n\t\t\t\t\treader.skipType(tag & 7)\n\t\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\treturn message\n\t}\n\t\n\treturn RequestBatch\n})()\n\n$root.Request = (function () {\n\t/**\n\t * Properties of a Request.\n\t * @exports IRequest\n\t * @interface IRequest\n\t * @property {IncomingMessagesRequest|null} [incomingMessages] Request incomingMessages\n\t * @property {ChannelStatsRequest|null} [channelStats] Request channelStats\n\t * @property {ServerStatsRequest|null} [serverStats] Request serverStats\n\t */\n\t\n\t/**\n\t * Constructs a new Request.\n\t * @exports Request\n\t * @classdesc Represents a Request.\n\t * @implements IRequest\n\t * @constructor\n\t * @param {IRequest=} [properties] Properties to set\n\t */\n\tfunction Request(properties) {\n\t\tif (properties) {\n\t\t\tfor (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n\t\t\t\tif (properties[keys[i]] != null) {\n\t\t\t\t\tthis[keys[i]] = properties[keys[i]]\n\t\t\t\t}\n\t\t}\n\t}\n\t\n\t/**\n\t * Request incomingMessages.\n\t * @member {IncomingMessagesRequest|null|undefined} incomingMessages\n\t * @memberof Request\n\t * @instance\n\t */\n\tRequest.prototype.incomingMessages = null\n\t\n\t/**\n\t * Request channelStats.\n\t * @member {ChannelStatsRequest|null|undefined} channelStats\n\t * @memberof Request\n\t * @instance\n\t */\n\tRequest.prototype.channelStats = null\n\t\n\t/**\n\t * Request serverStats.\n\t * @member {ServerStatsRequest|null|undefined} serverStats\n\t * @memberof Request\n\t * @instance\n\t */\n\tRequest.prototype.serverStats = null\n\t\n\t// OneOf field names bound to virtual getters and setters\n\tvar $oneOfFields\n\t\n\t/**\n\t * Request command.\n\t * @member {\"incomingMessages\"|\"channelStats\"|\"serverStats\"|undefined} command\n\t * @memberof Request\n\t * @instance\n\t */\n\tObject.defineProperty(Request.prototype, 'command', {\n\t\tget: $util.oneOfGetter(\n\t\t\t($oneOfFields = ['incomingMessages', 'channelStats', 'serverStats'])\n\t\t),\n\t\tset: $util.oneOfSetter($oneOfFields),\n\t})\n\t\n\t/**\n\t * Creates a new Request instance using the specified properties.\n\t * @function create\n\t * @memberof Request\n\t * @static\n\t * @param {IRequest=} [properties] Properties to set\n\t * @returns {Request} Request instance\n\t */\n\tRequest.create = function create(properties) {\n\t\treturn new Request(properties)\n\t}\n\t\n\t/**\n\t * Encodes the specified Request message. Does not implicitly {@link Request.verify|verify} messages.\n\t * @function encode\n\t * @memberof Request\n\t * @static\n\t * @param {Request} message Request message or plain object to encode\n\t * @param {$protobuf.Writer} [writer] Writer to encode to\n\t * @returns {$protobuf.Writer} Writer\n\t */\n\tRequest.encode = function encode(message, writer) {\n\t\tif (!writer) {\n\t\t\twriter = $Writer.create()\n\t\t}\n\t\tif (\n\t\t\tmessage.incomingMessages != null &&\n\t\t\tmessage.hasOwnProperty('incomingMessages')\n\t\t) {\n\t\t\t$root.IncomingMessagesRequest.encode(\n\t\t\t\tmessage.incomingMessages,\n\t\t\t\twriter.uint32(/* id 1, wireType 2 =*/ 10).fork()\n\t\t\t).ldelim()\n\t\t}\n\t\tif (\n\t\t\tmessage.channelStats != null &&\n\t\t\tmessage.hasOwnProperty('channelStats')\n\t\t) {\n\t\t\t$root.ChannelStatsRequest.encode(\n\t\t\t\tmessage.channelStats,\n\t\t\t\twriter.uint32(/* id 2, wireType 2 =*/ 18).fork()\n\t\t\t).ldelim()\n\t\t}\n\t\tif (message.serverStats != null && message.hasOwnProperty('serverStats')) {\n\t\t\t$root.ServerStatsRequest.encode(\n\t\t\t\tmessage.serverStats,\n\t\t\t\twriter.uint32(/* id 3, wireType 2 =*/ 26).fork()\n\t\t\t).ldelim()\n\t\t}\n\t\treturn writer\n\t}\n\t\n\t/**\n\t * Decodes a Request message from the specified reader or buffer.\n\t * @function decode\n\t * @memberof Request\n\t * @static\n\t * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n\t * @param {number} [length] Message length if known beforehand\n\t * @returns {Request} Request\n\t * @throws {Error} If the payload is not a reader or valid buffer\n\t * @throws {$protobuf.util.ProtocolError} If required fields are missing\n\t */\n\tRequest.decode = function decode(reader, length) {\n\t\tif (!(reader instanceof $Reader)) {\n\t\t\treader = $Reader.create(reader)\n\t\t}\n\t\tvar end = length === undefined ? reader.len : reader.pos + length,\n\t\t\tmessage = new $root.Request()\n\t\twhile (reader.pos < end) {\n\t\t\tvar tag = reader.uint32()\n\t\t\tswitch (tag >>> 3) {\n\t\t\t\tcase 1:\n\t\t\t\t\tmessage.incomingMessages = $root.IncomingMessagesRequest.decode(\n\t\t\t\t\t\treader,\n\t\t\t\t\t\treader.uint32()\n\t\t\t\t\t)\n\t\t\t\t\tbreak\n\t\t\t\tcase 2:\n\t\t\t\t\tmessage.channelStats = $root.ChannelStatsRequest.decode(\n\t\t\t\t\t\treader,\n\t\t\t\t\t\treader.uint32()\n\t\t\t\t\t)\n\t\t\t\t\tbreak\n\t\t\t\tcase 3:\n\t\t\t\t\tmessage.serverStats = $root.ServerStatsRequest.decode(\n\t\t\t\t\t\treader,\n\t\t\t\t\t\treader.uint32()\n\t\t\t\t\t)\n\t\t\t\t\tbreak\n\t\t\t\tdefault:\n\t\t\t\t\treader.skipType(tag & 7)\n\t\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\treturn message\n\t}\n\t\n\treturn Request\n})()\n\n$root.IncomingMessagesRequest = (function () {\n\t/**\n\t * Properties of an IncomingMessagesRequest.\n\t * @exports IIncomingMessagesRequest\n\t * @interface IIncomingMessagesRequest\n\t * @property {Array.<IncomingMessage>|null} [messages] IncomingMessagesRequest messages\n\t */\n\t\n\t/**\n\t * Constructs a new IncomingMessagesRequest.\n\t * @exports IncomingMessagesRequest\n\t * @classdesc Represents an IncomingMessagesRequest.\n\t * @implements IIncomingMessagesRequest\n\t * @constructor\n\t * @param {IIncomingMessagesRequest=} [properties] Properties to set\n\t */\n\tfunction IncomingMessagesRequest(properties) {\n\t\tthis.messages = []\n\t\tif (properties) {\n\t\t\tfor (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n\t\t\t\tif (properties[keys[i]] != null) {\n\t\t\t\t\tthis[keys[i]] = properties[keys[i]]\n\t\t\t\t}\n\t\t}\n\t}\n\t\n\t/**\n\t * IncomingMessagesRequest messages.\n\t * @member {Array.<IncomingMessage>} messages\n\t * @memberof IncomingMessagesRequest\n\t * @instance\n\t */\n\tIncomingMessagesRequest.prototype.messages = $util.emptyArray\n\t\n\t/**\n\t * Creates a new IncomingMessagesRequest instance using the specified properties.\n\t * @function create\n\t * @memberof IncomingMessagesRequest\n\t * @static\n\t * @param {IIncomingMessagesRequest=} [properties] Properties to set\n\t * @returns {IncomingMessagesRequest} IncomingMessagesRequest instance\n\t */\n\tIncomingMessagesRequest.create = function create(properties) {\n\t\treturn new IncomingMessagesRequest(properties)\n\t}\n\t\n\t/**\n\t * Encodes the specified IncomingMessagesRequest message. Does not implicitly {@link IncomingMessagesRequest.verify|verify} messages.\n\t * @function encode\n\t * @memberof IncomingMessagesRequest\n\t * @static\n\t * @param {IncomingMessagesRequest} message IncomingMessagesRequest message or plain object to encode\n\t * @param {$protobuf.Writer} [writer] Writer to encode to\n\t * @returns {$protobuf.Writer} Writer\n\t */\n\tIncomingMessagesRequest.encode = function encode(message, writer) {\n\t\tif (!writer) {\n\t\t\twriter = $Writer.create()\n\t\t}\n\t\tif (message.messages != null && message.messages.length) {\n\t\t\tfor (var i = 0; i < message.messages.length; ++i)\n\t\t\t\t$root.IncomingMessage.encode(\n\t\t\t\t\tmessage.messages[i],\n\t\t\t\t\twriter.uint32(/* id 1, wireType 2 =*/ 10).fork()\n\t\t\t\t).ldelim()\n\t\t}\n\t\treturn writer\n\t}\n\t\n\t/**\n\t * Decodes an IncomingMessagesRequest message from the specified reader or buffer.\n\t * @function decode\n\t * @memberof IncomingMessagesRequest\n\t * @static\n\t * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n\t * @param {number} [length] Message length if known beforehand\n\t * @returns {IncomingMessagesRequest} IncomingMessagesRequest\n\t * @throws {Error} If the payload is not a reader or valid buffer\n\t * @throws {$protobuf.util.ProtocolError} If required fields are missing\n\t */\n\tIncomingMessagesRequest.decode = function decode(reader, length) {\n\t\tif (!(reader instanceof $Reader)) {\n\t\t\treader = $Reader.create(reader)\n\t\t}\n\t\tvar end = length === undefined ? reader.len : reader.pos + length,\n\t\t\tmessage = new $root.IncomingMessagesRequest()\n\t\twhile (reader.pos < end) {\n\t\t\tvar tag = reader.uint32()\n\t\t\tswitch (tag >>> 3) {\n\t\t\t\tcase 1:\n\t\t\t\t\tif (!(message.messages && message.messages.length)) {\n\t\t\t\t\t\tmessage.messages = []\n\t\t\t\t\t}\n\t\t\t\t\tmessage.messages.push(\n\t\t\t\t\t\t$root.IncomingMessage.decode(reader, reader.uint32())\n\t\t\t\t\t)\n\t\t\t\t\tbreak\n\t\t\t\tdefault:\n\t\t\t\t\treader.skipType(tag & 7)\n\t\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\treturn message\n\t}\n\t\n\treturn IncomingMessagesRequest\n})()\n\n$root.IncomingMessage = (function () {\n\t/**\n\t * Properties of an IncomingMessage.\n\t * @exports IIncomingMessage\n\t * @interface IIncomingMessage\n\t * @property {Array.<Receiver>|null} [receivers] IncomingMessage receivers\n\t * @property {Sender|null} [sender] IncomingMessage sender\n\t * @property {string|null} [body] IncomingMessage body\n\t * @property {number|null} [expiry] IncomingMessage expiry\n\t * @property {string|null} [type] IncomingMessage type\n\t */\n\t\n\t/**\n\t * Constructs a new IncomingMessage.\n\t * @exports IncomingMessage\n\t * @classdesc Represents an IncomingMessage.\n\t * @implements IIncomingMessage\n\t * @constructor\n\t * @param {IIncomingMessage=} [properties] Properties to set\n\t */\n\tfunction IncomingMessage(properties) {\n\t\tthis.receivers = []\n\t\tif (properties) {\n\t\t\tfor (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n\t\t\t\tif (properties[keys[i]] != null) {\n\t\t\t\t\tthis[keys[i]] = properties[keys[i]]\n\t\t\t\t}\n\t\t}\n\t}\n\t\n\t/**\n\t * IncomingMessage receivers.\n\t * @member {Array.<Receiver>} receivers\n\t * @memberof IncomingMessage\n\t * @instance\n\t */\n\tIncomingMessage.prototype.receivers = $util.emptyArray\n\t\n\t/**\n\t * IncomingMessage sender.\n\t * @member {Sender|null|undefined} sender\n\t * @memberof IncomingMessage\n\t * @instance\n\t */\n\tIncomingMessage.prototype.sender = null\n\t\n\t/**\n\t * IncomingMessage body.\n\t * @member {string} body\n\t * @memberof IncomingMessage\n\t * @instance\n\t */\n\tIncomingMessage.prototype.body = ''\n\t\n\t/**\n\t * IncomingMessage expiry.\n\t * @member {number} expiry\n\t * @memberof IncomingMessage\n\t * @instance\n\t */\n\tIncomingMessage.prototype.expiry = 0\n\t\n\t/**\n\t * IncomingMessage type.\n\t * @member {string} type\n\t * @memberof IncomingMessage\n\t * @instance\n\t */\n\tIncomingMessage.prototype.type = ''\n\t\n\t/**\n\t * Creates a new IncomingMessage instance using the specified properties.\n\t * @function create\n\t * @memberof IncomingMessage\n\t * @static\n\t * @param {IIncomingMessage=} [properties] Properties to set\n\t * @returns {IncomingMessage} IncomingMessage instance\n\t */\n\tIncomingMessage.create = function create(properties) {\n\t\treturn new IncomingMessage(properties)\n\t}\n\t\n\t/**\n\t * Encodes the specified IncomingMessage message. Does not implicitly {@link IncomingMessage.verify|verify} messages.\n\t * @function encode\n\t * @memberof IncomingMessage\n\t * @static\n\t * @param {IncomingMessage} message IncomingMessage message or plain object to encode\n\t * @param {$protobuf.Writer} [writer] Writer to encode to\n\t * @returns {$protobuf.Writer} Writer\n\t */\n\tIncomingMessage.encode = function encode(message, writer) {\n\t\tif (!writer) {\n\t\t\twriter = $Writer.create()\n\t\t}\n\t\tif (message.receivers != null && message.receivers.length) {\n\t\t\tfor (var i = 0; i < message.receivers.length; ++i)\n\t\t\t\t$root.Receiver.encode(\n\t\t\t\t\tmessage.receivers[i],\n\t\t\t\t\twriter.uint32(/* id 1, wireType 2 =*/ 10).fork()\n\t\t\t\t).ldelim()\n\t\t}\n\t\tif (message.sender != null && message.hasOwnProperty('sender')) {\n\t\t\t$root.Sender.encode(\n\t\t\t\tmessage.sender,\n\t\t\t\twriter.uint32(/* id 2, wireType 2 =*/ 18).fork()\n\t\t\t).ldelim()\n\t\t}\n\t\tif (message.body != null && message.hasOwnProperty('body')) {\n\t\t\twriter.uint32(/* id 3, wireType 2 =*/ 26).string(message.body)\n\t\t}\n\t\tif (message.expiry != null && message.hasOwnProperty('expiry')) {\n\t\t\twriter.uint32(/* id 4, wireType 0 =*/ 32).uint32(message.expiry)\n\t\t}\n\t\tif (message.type != null && message.hasOwnProperty('type')) {\n\t\t\twriter.uint32(/* id 5, wireType 2 =*/ 42).string(message.type)\n\t\t}\n\t\treturn writer\n\t}\n\t\n\t/**\n\t * Decodes an IncomingMessage message from the specified reader or buffer.\n\t * @function decode\n\t * @memberof IncomingMessage\n\t * @static\n\t * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n\t * @param {number} [length] Message length if known beforehand\n\t * @returns {IncomingMessage} IncomingMessage\n\t * @throws {Error} If the payload is not a reader or valid buffer\n\t * @throws {$protobuf.util.ProtocolError} If required fields are missing\n\t */\n\tIncomingMessage.decode = function decode(reader, length) {\n\t\tif (!(reader instanceof $Reader)) {\n\t\t\treader = $Reader.create(reader)\n\t\t}\n\t\tvar end = length === undefined ? reader.len : reader.pos + length,\n\t\t\tmessage = new $root.IncomingMessage()\n\t\twhile (reader.pos < end) {\n\t\t\tvar tag = reader.uint32()\n\t\t\tswitch (tag >>> 3) {\n\t\t\t\tcase 1:\n\t\t\t\t\tif (!(message.receivers && message.receivers.length)) {\n\t\t\t\t\t\tmessage.receivers = []\n\t\t\t\t\t}\n\t\t\t\t\tmessage.receivers.push($root.Receiver.decode(reader, reader.uint32()))\n\t\t\t\t\tbreak\n\t\t\t\tcase 2:\n\t\t\t\t\tmessage.sender = $root.Sender.decode(reader, reader.uint32())\n\t\t\t\t\tbreak\n\t\t\t\tcase 3:\n\t\t\t\t\tmessage.body = reader.string()\n\t\t\t\t\tbreak\n\t\t\t\tcase 4:\n\t\t\t\t\tmessage.expiry = reader.uint32()\n\t\t\t\t\tbreak\n\t\t\t\tcase 5:\n\t\t\t\t\tmessage.type = reader.string()\n\t\t\t\t\tbreak\n\t\t\t\tdefault:\n\t\t\t\t\treader.skipType(tag & 7)\n\t\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\treturn message\n\t}\n\t\n\treturn IncomingMessage\n})()\n\n$root.ChannelStatsRequest = (function () {\n\t/**\n\t * Properties of a ChannelStatsRequest.\n\t * @exports IChannelStatsRequest\n\t * @interface IChannelStatsRequest\n\t * @property {Array.<ChannelId>|null} [channels] ChannelStatsRequest channels\n\t */\n\t\n\t/**\n\t * Constructs a new ChannelStatsRequest.\n\t * @exports ChannelStatsRequest\n\t * @classdesc Represents a ChannelStatsRequest.\n\t * @implements IChannelStatsRequest\n\t * @constructor\n\t * @param {IChannelStatsRequest=} [properties] Properties to set\n\t */\n\tfunction ChannelStatsRequest(properties) {\n\t\tthis.channels = []\n\t\tif (properties) {\n\t\t\tfor (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n\t\t\t\tif (properties[keys[i]] != null) {\n\t\t\t\t\tthis[keys[i]] = properties[keys[i]]\n\t\t\t\t}\n\t\t}\n\t}\n\t\n\t/**\n\t * ChannelStatsRequest channels.\n\t * @member {Array.<ChannelId>} channels\n\t * @memberof ChannelStatsRequest\n\t * @instance\n\t */\n\tChannelStatsRequest.prototype.channels = $util.emptyArray\n\t\n\t/**\n\t * Creates a new ChannelStatsRequest instance using the specified properties.\n\t * @function create\n\t * @memberof ChannelStatsRequest\n\t * @static\n\t * @param {IChannelStatsRequest=} [properties] Properties to set\n\t * @returns {ChannelStatsRequest} ChannelStatsRequest instance\n\t */\n\tChannelStatsRequest.create = function create(properties) {\n\t\treturn new ChannelStatsRequest(properties)\n\t}\n\t\n\t/**\n\t * Encodes the specified ChannelStatsRequest message. Does not implicitly {@link ChannelStatsRequest.verify|verify} messages.\n\t * @function encode\n\t * @memberof ChannelStatsRequest\n\t * @static\n\t * @param {ChannelStatsRequest} message ChannelStatsRequest message or plain object to encode\n\t * @param {$protobuf.Writer} [writer] Writer to encode to\n\t * @returns {$protobuf.Writer} Writer\n\t */\n\tChannelStatsRequest.encode = function encode(message, writer) {\n\t\tif (!writer) {\n\t\t\twriter = $Writer.create()\n\t\t}\n\t\tif (message.channels != null && message.channels.length) {\n\t\t\tfor (var i = 0; i < message.channels.length; ++i)\n\t\t\t\t$root.ChannelId.encode(\n\t\t\t\t\tmessage.channels[i],\n\t\t\t\t\twriter.uint32(/* id 1, wireType 2 =*/ 10).fork()\n\t\t\t\t).ldelim()\n\t\t}\n\t\treturn writer\n\t}\n\t\n\t/**\n\t * Decodes a ChannelStatsRequest message from the specified reader or buffer.\n\t * @function decode\n\t * @memberof ChannelStatsRequest\n\t * @static\n\t * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n\t * @param {number} [length] Message length if known beforehand\n\t * @returns {ChannelStatsRequest} ChannelStatsRequest\n\t * @throws {Error} If the payload is not a reader or valid buffer\n\t * @throws {$protobuf.util.ProtocolError} If required fields are missing\n\t */\n\tChannelStatsRequest.decode = function decode(reader, length) {\n\t\tif (!(reader instanceof $Reader)) {\n\t\t\treader = $Reader.create(reader)\n\t\t}\n\t\tvar end = length === undefined ? reader.len : reader.pos + length,\n\t\t\tmessage = new $root.ChannelStatsRequest()\n\t\twhile (reader.pos < end) {\n\t\t\tvar tag = reader.uint32()\n\t\t\tswitch (tag >>> 3) {\n\t\t\t\tcase 1:\n\t\t\t\t\tif (!(message.channels && message.channels.length)) {\n\t\t\t\t\t\tmessage.channels = []\n\t\t\t\t\t}\n\t\t\t\t\tmessage.channels.push($root.ChannelId.decode(reader, reader.uint32()))\n\t\t\t\t\tbreak\n\t\t\t\tdefault:\n\t\t\t\t\treader.skipType(tag & 7)\n\t\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\treturn message\n\t}\n\t\n\treturn ChannelStatsRequest\n})()\n\n$root.ChannelId = (function () {\n\t/**\n\t * Properties of a ChannelId.\n\t * @exports IChannelId\n\t * @interface IChannelId\n\t * @property {Uint8Array|null} [id] ChannelId id\n\t * @property {boolean|null} [isPrivate] ChannelId isPrivate\n\t * @property {Uint8Array|null} [signature] ChannelId signature\n\t */\n\t\n\t/**\n\t * Constructs a new ChannelId.\n\t * @exports ChannelId\n\t * @classdesc Represents a ChannelId.\n\t * @implements IChannelId\n\t * @constructor\n\t * @param {IChannelId=} [properties] Properties to set\n\t */\n\tfunction ChannelId(properties) {\n\t\tif (properties) {\n\t\t\tfor (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n\t\t\t\tif (properties[keys[i]] != null) {\n\t\t\t\t\tthis[keys[i]] = properties[keys[i]]\n\t\t\t\t}\n\t\t}\n\t}\n\t\n\t/**\n\t * ChannelId id.\n\t * @member {Uint8Array} id\n\t * @memberof ChannelId\n\t * @instance\n\t */\n\tChannelId.prototype.id = $util.newBuffer([])\n\t\n\t/**\n\t * ChannelId isPrivate.\n\t * @member {boolean} isPrivate\n\t * @memberof ChannelId\n\t * @instance\n\t */\n\tChannelId.prototype.isPrivate = false\n\t\n\t/**\n\t * ChannelId signature.\n\t * @member {Uint8Array} signature\n\t * @memberof ChannelId\n\t * @instance\n\t */\n\tChannelId.prototype.signature = $util.newBuffer([])\n\t\n\t/**\n\t * Creates a new ChannelId instance using the specified properties.\n\t * @function create\n\t * @memberof ChannelId\n\t * @static\n\t * @param {IChannelId=} [properties] Properties to set\n\t * @returns {ChannelId} ChannelId instance\n\t */\n\tChannelId.create = function create(properties) {\n\t\treturn new ChannelId(properties)\n\t}\n\t\n\t/**\n\t * Encodes the specified ChannelId message. Does not implicitly {@link ChannelId.verify|verify} messages.\n\t * @function encode\n\t * @memberof ChannelId\n\t * @static\n\t * @param {ChannelId} message ChannelId message or plain object to encode\n\t * @param {$protobuf.Writer} [writer] Writer to encode to\n\t * @returns {$protobuf.Writer} Writer\n\t */\n\tChannelId.encode = function encode(message, writer) {\n\t\tif (!writer) {\n\t\t\twriter = $Writer.create()\n\t\t}\n\t\tif (message.id != null && message.hasOwnProperty('id')) {\n\t\t\twriter.uint32(/* id 1, wireType 2 =*/ 10).bytes(message.id)\n\t\t}\n\t\tif (message.isPrivate != null && message.hasOwnProperty('isPrivate')) {\n\t\t\twriter.uint32(/* id 2, wireType 0 =*/ 16).bool(message.isPrivate)\n\t\t}\n\t\tif (message.signature != null && message.hasOwnProperty('signature')) {\n\t\t\twriter.uint32(/* id 3, wireType 2 =*/ 26).bytes(message.signature)\n\t\t}\n\t\treturn writer\n\t}\n\t\n\t/**\n\t * Decodes a ChannelId message from the specified reader or buffer.\n\t * @function decode\n\t * @memberof ChannelId\n\t * @static\n\t * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n\t * @param {number} [length] Message length if known beforehand\n\t * @returns {ChannelId} ChannelId\n\t * @throws {Error} If the payload is not a reader or valid buffer\n\t * @throws {$protobuf.util.ProtocolError} If required fields are missing\n\t */\n\tChannelId.decode = function decode(reader, length) {\n\t\tif (!(reader instanceof $Reader)) {\n\t\t\treader = $Reader.create(reader)\n\t\t}\n\t\tvar end = length === undefined ? reader.len : reader.pos + length,\n\t\t\tmessage = new $root.ChannelId()\n\t\twhile (reader.pos < end) {\n\t\t\tvar tag = reader.uint32()\n\t\t\tswitch (tag >>> 3) {\n\t\t\t\tcase 1:\n\t\t\t\t\tmessage.id = reader.bytes()\n\t\t\t\t\tbreak\n\t\t\t\tcase 2:\n\t\t\t\t\tmessage.isPrivate = reader.bool()\n\t\t\t\t\tbreak\n\t\t\t\tcase 3:\n\t\t\t\t\tmessage.signature = reader.bytes()\n\t\t\t\t\tbreak\n\t\t\t\tdefault:\n\t\t\t\t\treader.skipType(tag & 7)\n\t\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\treturn message\n\t}\n\t\n\treturn ChannelId\n})()\n\n$root.ServerStatsRequest = (function () {\n\t/**\n\t * Properties of a ServerStatsRequest.\n\t * @exports IServerStatsRequest\n\t * @interface IServerStatsRequest\n\t */\n\t\n\t/**\n\t * Constructs a new ServerStatsRequest.\n\t * @exports ServerStatsRequest\n\t * @classdesc Represents a ServerStatsRequest.\n\t * @implements IServerStatsRequest\n\t * @constructor\n\t * @param {IServerStatsRequest=} [properties] Properties to set\n\t */\n\tfunction ServerStatsRequest(properties) {\n\t\tif (properties) {\n\t\t\tfor (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n\t\t\t\tif (properties[keys[i]] != null) {\n\t\t\t\t\tthis[keys[i]] = properties[keys[i]]\n\t\t\t\t}\n\t\t}\n\t}\n\t\n\t/**\n\t * Creates a new ServerStatsRequest instance using the specified properties.\n\t * @function create\n\t * @memberof ServerStatsRequest\n\t * @static\n\t * @param {IServerStatsRequest=} [properties] Properties to set\n\t * @returns {ServerStatsRequest} ServerStatsRequest instance\n\t */\n\tServerStatsRequest.create = function create(properties) {\n\t\treturn new ServerStatsRequest(properties)\n\t}\n\t\n\t/**\n\t * Encodes the specified ServerStatsRequest message. Does not implicitly {@link ServerStatsRequest.verify|verify} messages.\n\t * @function encode\n\t * @memberof ServerStatsRequest\n\t * @static\n\t * @param {ServerStatsRequest} message ServerStatsRequest message or plain object to encode\n\t * @param {$protobuf.Writer} [writer] Writer to encode to\n\t * @returns {$protobuf.Writer} Writer\n\t */\n\tServerStatsRequest.encode = function encode(message, writer) {\n\t\tif (!writer) {\n\t\t\twriter = $Writer.create()\n\t\t}\n\t\treturn writer\n\t}\n\t\n\t/**\n\t * Decodes a ServerStatsRequest message from the specified reader or buffer.\n\t * @function decode\n\t * @memberof ServerStatsRequest\n\t * @static\n\t * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n\t * @param {number} [length] Message length if known beforehand\n\t * @returns {ServerStatsRequest} ServerStatsRequest\n\t * @throws {Error} If the payload is not a reader or valid buffer\n\t * @throws {$protobuf.util.ProtocolError} If required fields are missing\n\t */\n\tServerStatsRequest.decode = function decode(reader, length) {\n\t\tif (!(reader instanceof $Reader)) {\n\t\t\treader = $Reader.create(reader)\n\t\t}\n\t\tvar end = length === undefined ? reader.len : reader.pos + length,\n\t\t\tmessage = new $root.ServerStatsRequest()\n\t\twhile (reader.pos < end) {\n\t\t\tvar tag = reader.uint32()\n\t\t\tswitch (tag >>> 3) {\n\t\t\t\tdefault:\n\t\t\t\t\treader.skipType(tag & 7)\n\t\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\treturn message\n\t}\n\t\n\treturn ServerStatsRequest\n})()\n\n$root.Sender = (function () {\n\t/**\n\t * Properties of a Sender.\n\t * @exports ISender\n\t * @interface ISender\n\t * @property {SenderType|null} [type] Sender type\n\t * @property {Uint8Array|null} [id] Sender id\n\t */\n\t\n\t/**\n\t * Constructs a new Sender.\n\t * @exports Sender\n\t * @classdesc Represents a Sender.\n\t * @implements ISender\n\t * @constructor\n\t * @param {ISender=} [properties] Properties to set\n\t */\n\tfunction Sender(properties) {\n\t\tif (properties) {\n\t\t\tfor (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n\t\t\t\tif (properties[keys[i]] != null) {\n\t\t\t\t\tthis[keys[i]] = properties[keys[i]]\n\t\t\t\t}\n\t\t}\n\t}\n\t\n\t/**\n\t * Sender type.\n\t * @member {SenderType} type\n\t * @memberof Sender\n\t * @instance\n\t */\n\tSender.prototype.type = 0\n\t\n\t/**\n\t * Sender id.\n\t * @member {Uint8Array} id\n\t * @memberof Sender\n\t * @instance\n\t */\n\tSender.prototype.id = $util.newBuffer([])\n\t\n\t/**\n\t * Creates a new Sender instance using the specified properties.\n\t * @function create\n\t * @memberof Sender\n\t * @static\n\t * @param {ISender=} [properties] Properties to set\n\t * @returns {Sender} Sender instance\n\t */\n\tSender.create = function create(properties) {\n\t\treturn new Sender(properties)\n\t}\n\t\n\t/**\n\t * Encodes the specified Sender message. Does not implicitly {@link Sender.verify|verify} messages.\n\t * @function encode\n\t * @memberof Sender\n\t * @static\n\t * @param {Sender} message Sender message or plain object to encode\n\t * @param {$protobuf.Writer} [writer] Writer to encode to\n\t * @returns {$protobuf.Writer} Writer\n\t */\n\tSender.encode = function encode(message, writer) {\n\t\tif (!writer) {\n\t\t\twriter = $Writer.create()\n\t\t}\n\t\tif (message.type != null && message.hasOwnProperty('type')) {\n\t\t\twriter.uint32(/* id 1, wireType 0 =*/ 8).int32(message.type)\n\t\t}\n\t\tif (message.id != null && message.hasOwnProperty('id')) {\n\t\t\twriter.uint32(/* id 2, wireType 2 =*/ 18).bytes(message.id)\n\t\t}\n\t\treturn writer\n\t}\n\t\n\t/**\n\t * Decodes a Sender message from the specified reader or buffer.\n\t * @function decode\n\t * @memberof Sender\n\t * @static\n\t * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n\t * @param {number} [length] Message length if known beforehand\n\t * @returns {Sender} Sender\n\t * @throws {Error} If the payload is not a reader or valid buffer\n\t * @throws {$protobuf.util.ProtocolError} If required fields are missing\n\t */\n\tSender.decode = function decode(reader, length) {\n\t\tif (!(reader instanceof $Reader)) {\n\t\t\treader = $Reader.create(reader)\n\t\t}\n\t\tvar end = length === undefined ? reader.len : reader.pos + length,\n\t\t\tmessage = new $root.Sender()\n\t\twhile (reader.pos < end) {\n\t\t\tvar tag = reader.uint32()\n\t\t\tswitch (tag >>> 3) {\n\t\t\t\tcase 1:\n\t\t\t\t\tmessage.type = reader.int32()\n\t\t\t\t\tbreak\n\t\t\t\tcase 2:\n\t\t\t\t\tmessage.id = reader.bytes()\n\t\t\t\t\tbreak\n\t\t\t\tdefault:\n\t\t\t\t\treader.skipType(tag & 7)\n\t\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\treturn message\n\t}\n\t\n\treturn Sender\n})()\n\n/**\n * SenderType enum.\n * @exports SenderType\n * @enum {string}\n * @property {number} UNKNOWN=0 UNKNOWN value\n * @property {number} CLIENT=1 CLIENT value\n * @property {number} BACKEND=2 BACKEND value\n */\n$root.SenderType = (function () {\n\tvar valuesById = {},\n\t\tvalues = Object.create(valuesById)\n\tvalues[(valuesById[0] = 'UNKNOWN')] = 0\n\tvalues[(valuesById[1] = 'CLIENT')] = 1\n\tvalues[(valuesById[2] = 'BACKEND')] = 2\n\treturn values\n})()\n\n$root.Receiver = (function () {\n\t/**\n\t * Properties of a Receiver.\n\t * @exports IReceiver\n\t * @interface IReceiver\n\t * @property {Uint8Array|null} [id] Receiver id\n\t * @property {boolean|null} [isPrivate] Receiver isPrivate\n\t * @property {Uint8Array|null} [signature] Receiver signature\n\t */\n\t\n\t/**\n\t * Constructs a new Receiver.\n\t * @exports Receiver\n\t * @classdesc Represents a Receiver.\n\t * @implements IReceiver\n\t * @constructor\n\t * @param {IReceiver=} [properties] Properties to set\n\t */\n\tfunction Receiver(properties) {\n\t\tif (properties) {\n\t\t\tfor (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n\t\t\t\tif (properties[keys[i]] != null) {\n\t\t\t\t\tthis[keys[i]] = properties[keys[i]]\n\t\t\t\t}\n\t\t}\n\t}\n\t\n\t/**\n\t * Receiver id.\n\t * @member {Uint8Array} id\n\t * @memberof Receiver\n\t * @instance\n\t */\n\tReceiver.prototype.id = $util.newBuffer([])\n\t\n\t/**\n\t * Receiver isPrivate.\n\t * @member {boolean} isPrivate\n\t * @memberof Receiver\n\t * @instance\n\t */\n\tReceiver.prototype.isPrivate = false\n\t\n\t/**\n\t * Receiver signature.\n\t * @member {Uint8Array} signature\n\t * @memberof Receiver\n\t * @instance\n\t */\n\tReceiver.prototype.signature = $util.newBuffer([])\n\t\n\t/**\n\t * Creates a new Receiver instance using the specified properties.\n\t * @function create\n\t * @memberof Receiver\n\t * @static\n\t * @param {IReceiver=} [properties] Properties to set\n\t * @returns {Receiver} Receiver instance\n\t */\n\tReceiver.create = function create(properties) {\n\t\treturn new Receiver(properties)\n\t}\n\t\n\t/**\n\t * Encodes the specified Receiver message. Does not implicitly {@link Receiver.verify|verify} messages.\n\t * @function encode\n\t * @memberof Receiver\n\t * @static\n\t * @param {Receiver} message Receiver message or plain object to encode\n\t * @param {$protobuf.Writer} [writer] Writer to encode to\n\t * @returns {$protobuf.Writer} Writer\n\t */\n\tReceiver.encode = function encode(message, writer) {\n\t\tif (!writer) {\n\t\t\twriter = $Writer.create()\n\t\t}\n\t\tif (message.id != null && message.hasOwnProperty('id')) {\n\t\t\twriter.uint32(/* id 1, wireType 2 =*/ 10).bytes(message.id)\n\t\t}\n\t\tif (message.isPrivate != null && message.hasOwnProperty('isPrivate')) {\n\t\t\twriter.uint32(/* id 2, wireType 0 =*/ 16).bool(message.isPrivate)\n\t\t}\n\t\tif (message.signature != null && message.hasOwnProperty('signature')) {\n\t\t\twriter.uint32(/* id 3, wireType 2 =*/ 26).bytes(message.signature)\n\t\t}\n\t\treturn writer\n\t}\n\t\n\t/**\n\t * Decodes a Receiver message from the specified reader or buffer.\n\t * @function decode\n\t * @memberof Receiver\n\t * @static\n\t * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n\t * @param {number} [length] Message length if known beforehand\n\t * @returns {Receiver} Receiver\n\t * @throws {Error} If the payload is not a reader or valid buffer\n\t * @throws {$protobuf.util.ProtocolError} If required fields are missing\n\t */\n\tReceiver.decode = function decode(reader, length) {\n\t\tif (!(reader instanceof $Reader)) {\n\t\t\treader = $Reader.create(reader)\n\t\t}\n\t\tvar end = length === undefined ? reader.len : reader.pos + length,\n\t\t\tmessage = new $root.Receiver()\n\t\twhile (reader.pos < end) {\n\t\t\tvar tag = reader.uint32()\n\t\t\tswitch (tag >>> 3) {\n\t\t\t\tcase 1:\n\t\t\t\t\tmessage.id = reader.bytes()\n\t\t\t\t\tbreak\n\t\t\t\tcase 2:\n\t\t\t\t\tmessage.isPrivate = reader.bool()\n\t\t\t\t\tbreak\n\t\t\t\tcase 3:\n\t\t\t\t\tmessage.signature = reader.bytes()\n\t\t\t\t\tbreak\n\t\t\t\tdefault:\n\t\t\t\t\treader.skipType(tag & 7)\n\t\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\treturn message\n\t}\n\t\n\treturn Receiver\n})()\n\n$root.ResponseBatch = (function () {\n\t/**\n\t * Properties of a ResponseBatch.\n\t * @exports IResponseBatch\n\t * @interface IResponseBatch\n\t * @property {Array.<Response>|null} [responses] ResponseBatch responses\n\t */\n\t\n\t/**\n\t * Constructs a new ResponseBatch.\n\t * @exports ResponseBatch\n\t * @classdesc Represents a ResponseBatch.\n\t * @implements IResponseBatch\n\t * @constructor\n\t * @param {IResponseBatch=} [properties] Properties to set\n\t */\n\tfunction ResponseBatch(properties) {\n\t\tthis.responses = []\n\t\tif (properties) {\n\t\t\tfor (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n\t\t\t\tif (properties[keys[i]] != null) {\n\t\t\t\t\tthis[keys[i]] = properties[keys[i]]\n\t\t\t\t}\n\t\t}\n\t}\n\t\n\t/**\n\t * ResponseBatch responses.\n\t * @member {Array.<Response>} responses\n\t * @memberof ResponseBatch\n\t * @instance\n\t */\n\tResponseBatch.prototype.responses = $util.emptyArray\n\t\n\t/**\n\t * Creates a new ResponseBatch instance using the specified properties.\n\t * @function create\n\t * @memberof ResponseBatch\n\t * @static\n\t * @param {IResponseBatch=} [properties] Properties to set\n\t * @returns {ResponseBatch} ResponseBatch instance\n\t */\n\tResponseBatch.create = function create(properties) {\n\t\treturn new ResponseBatch(properties)\n\t}\n\t\n\t/**\n\t * Encodes the specified ResponseBatch message. Does not implicitly {@link ResponseBatch.verify|verify} messages.\n\t * @function encode\n\t * @memberof ResponseBatch\n\t * @static\n\t * @param {ResponseBatch} message ResponseBatch message or plain object to encode\n\t * @param {$protobuf.Writer} [writer] Writer to encode to\n\t * @returns {$protobuf.Writer} Writer\n\t */\n\tResponseBatch.encode = function encode(message, writer) {\n\t\tif (!writer) {\n\t\t\twriter = $Writer.create()\n\t\t}\n\t\tif (message.responses != null && message.responses.length) {\n\t\t\tfor (var i = 0; i < message.responses.length; ++i)\n\t\t\t\t$root.Response.encode(\n\t\t\t\t\tmessage.responses[i],\n\t\t\t\t\twriter.uint32(/* id 1, wireType 2 =*/ 10).fork()\n\t\t\t\t).ldelim()\n\t\t}\n\t\treturn writer\n\t}\n\t\n\t/**\n\t * Decodes a ResponseBatch message from the specified reader or buffer.\n\t * @function decode\n\t * @memberof ResponseBatch\n\t * @static\n\t * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n\t * @param {number} [length] Message length if known beforehand\n\t * @returns {ResponseBatch} ResponseBatch\n\t * @throws {Error} If the payload is not a reader or valid buffer\n\t * @throws {$protobuf.util.ProtocolError} If required fields are missing\n\t */\n\tResponseBatch.decode = function decode(reader, length) {\n\t\tif (!(reader instanceof $Reader)) {\n\t\t\treader = $Reader.create(reader)\n\t\t}\n\t\tvar end = length === undefined ? reader.len : reader.pos + length,\n\t\t\tmessage = new $root.ResponseBatch()\n\t\twhile (reader.pos < end) {\n\t\t\tvar tag = reader.uint32()\n\t\t\tswitch (tag >>> 3) {\n\t\t\t\tcase 1:\n\t\t\t\t\tif (!(message.responses && message.responses.length)) {\n\t\t\t\t\t\tmessage.responses = []\n\t\t\t\t\t}\n\t\t\t\t\tmessage.responses.push($root.Response.decode(reader, reader.uint32()))\n\t\t\t\t\tbreak\n\t\t\t\tdefault:\n\t\t\t\t\treader.skipType(tag & 7)\n\t\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\treturn message\n\t}\n\t\n\treturn ResponseBatch\n})()\n\n$root.Response = (function () {\n\t/**\n\t * Properties of a Response.\n\t * @exports IResponse\n\t * @interface IResponse\n\t * @property {OutgoingMessagesResponse|null} [outgoingMessages] Response outgoingMessages\n\t * @property {ChannelStatsResponse|null} [channelStats] Response channelStats\n\t * @property {JsonResponse|null} [serverStats] Response serverStats\n\t */\n\t\n\t/**\n\t * Constructs a new Response.\n\t * @exports Response\n\t * @classdesc Represents a Response.\n\t * @implements IResponse\n\t * @constructor\n\t * @param {IResponse=} [properties] Properties to set\n\t */\n\tfunction Response(properties) {\n\t\tif (properties) {\n\t\t\tfor (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n\t\t\t\tif (properties[keys[i]] != null) {\n\t\t\t\t\tthis[keys[i]] = properties[keys[i]]\n\t\t\t\t}\n\t\t}\n\t}\n\t\n\t/**\n\t * Response outgoingMessages.\n\t * @member {OutgoingMessagesResponse|null|undefined} outgoingMessages\n\t * @memberof Response\n\t * @instance\n\t */\n\tResponse.prototype.outgoingMessages = null\n\t\n\t/**\n\t * Response channelStats.\n\t * @member {ChannelStatsResponse|null|undefined} channelStats\n\t * @memberof Response\n\t * @instance\n\t */\n\tResponse.prototype.channelStats = null\n\t\n\t/**\n\t * Response serverStats.\n\t * @member {JsonResponse|null|undefined} serverStats\n\t * @memberof Response\n\t * @instance\n\t */\n\tResponse.prototype.serverStats = null\n\t\n\t// OneOf field names bound to virtual getters and setters\n\tvar $oneOfFields\n\t\n\t/**\n\t * Response command.\n\t * @member {\"outgoingMessages\"|\"channelStats\"|\"serverStats\"|undefined} command\n\t * @memberof Response\n\t * @instance\n\t */\n\tObject.defineProperty(Response.prototype, 'command', {\n\t\tget: $util.oneOfGetter(\n\t\t\t($oneOfFields = ['outgoingMessages', 'channelStats', 'serverStats'])\n\t\t),\n\t\tset: $util.oneOfSetter($oneOfFields),\n\t})\n\t\n\t/**\n\t * Creates a new Response instance using the specified properties.\n\t * @function create\n\t * @memberof Response\n\t * @static\n\t * @param {IResponse=} [properties] Properties to set\n\t * @returns {Response} Response instance\n\t */\n\tResponse.create = function create(properties) {\n\t\treturn new Response(properties)\n\t}\n\t\n\t/**\n\t * Encodes the specified Response message. Does not implicitly {@link Response.verify|verify} messages.\n\t * @function encode\n\t * @memberof Response\n\t * @static\n\t * @param {Response} message Response message or plain object to encode\n\t * @param {$protobuf.Writer} [writer] Writer to encode to\n\t * @returns {$protobuf.Writer} Writer\n\t */\n\tResponse.encode = function encode(message, writer) {\n\t\tif (!writer) {\n\t\t\twriter = $Writer.create()\n\t\t}\n\t\tif (\n\t\t\tmessage.outgoingMessages != null &&\n\t\t\tmessage.hasOwnProperty('outgoingMessages')\n\t\t) {\n\t\t\t$root.OutgoingMessagesResponse.encode(\n\t\t\t\tmessage.outgoingMessages,\n\t\t\t\twriter.uint32(/* id 1, wireType 2 =*/ 10).fork()\n\t\t\t).ldelim()\n\t\t}\n\t\tif (\n\t\t\tmessage.channelStats != null &&\n\t\t\tmessage.hasOwnProperty('channelStats')\n\t\t) {\n\t\t\t$root.ChannelStatsResponse.encode(\n\t\t\t\tmessage.channelStats,\n\t\t\t\twriter.uint32(/* id 2, wireType 2 =*/ 18).fork()\n\t\t\t).ldelim()\n\t\t}\n\t\tif (message.serverStats != null && message.hasOwnProperty('serverStats')) {\n\t\t\t$root.JsonResponse.encode(\n\t\t\t\tmessage.serverStats,\n\t\t\t\twriter.uint32(/* id 3, wireType 2 =*/ 26).fork()\n\t\t\t).ldelim()\n\t\t}\n\t\treturn writer\n\t}\n\t\n\t/**\n\t * Decodes a Response message from the specified reader or buffer.\n\t * @function decode\n\t * @memberof Response\n\t * @static\n\t * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n\t * @param {number} [length] Message length if known beforehand\n\t * @returns {Response} Response\n\t * @throws {Error} If the payload is not a reader or valid buffer\n\t * @throws {$protobuf.util.ProtocolError} If required fields are missing\n\t */\n\tResponse.decode = function decode(reader, length) {\n\t\tif (!(reader instanceof $Reader)) {\n\t\t\treader = $Reader.create(reader)\n\t\t}\n\t\tvar end = length === undefined ? reader.len : reader.pos + length,\n\t\t\tmessage = new $root.Response()\n\t\twhile (reader.pos < end) {\n\t\t\tvar tag = reader.uint32()\n\t\t\tswitch (tag >>> 3) {\n\t\t\t\tcase 1:\n\t\t\t\t\tmessage.outgoingMessages = $root.OutgoingMessagesResponse.decode(\n\t\t\t\t\t\treader,\n\t\t\t\t\t\treader.uint32()\n\t\t\t\t\t)\n\t\t\t\t\tbreak\n\t\t\t\tcase 2:\n\t\t\t\t\tmessage.channelStats = $root.ChannelStatsResponse.decode(\n\t\t\t\t\t\treader,\n\t\t\t\t\t\treader.uint32()\n\t\t\t\t\t)\n\t\t\t\t\tbreak\n\t\t\t\tcase 3:\n\t\t\t\t\tmessage.serverStats = $root.JsonResponse.decode(\n\t\t\t\t\t\treader,\n\t\t\t\t\t\treader.uint32()\n\t\t\t\t\t)\n\t\t\t\t\tbreak\n\t\t\t\tdefault:\n\t\t\t\t\treader.skipType(tag & 7)\n\t\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\treturn message\n\t}\n\t\n\treturn Response\n})()\n\n$root.OutgoingMessagesResponse = (function () {\n\t/**\n\t * Properties of an OutgoingMessagesResponse.\n\t * @exports IOutgoingMessagesResponse\n\t * @interface IOutgoingMessagesResponse\n\t * @property {Array.<OutgoingMessage>|null} [messages] OutgoingMessagesResponse messages\n\t */\n\t\n\t/**\n\t * Constructs a new OutgoingMessagesResponse.\n\t * @exports OutgoingMessagesResponse\n\t * @classdesc Represents an OutgoingMessagesResponse.\n\t * @implements IOutgoingMessagesResponse\n\t * @constructor\n\t * @param {IOutgoingMessagesResponse=} [properties] Properties to set\n\t */\n\tfunction OutgoingMessagesResponse(properties) {\n\t\tthis.messages = []\n\t\tif (properties) {\n\t\t\tfor (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n\t\t\t\tif (properties[keys[i]] != null) {\n\t\t\t\t\tthis[keys[i]] = properties[keys[i]]\n\t\t\t\t}\n\t\t}\n\t}\n\t\n\t/**\n\t * OutgoingMessagesResponse messages.\n\t * @member {Array.<OutgoingMessage>} messages\n\t * @memberof OutgoingMessagesResponse\n\t * @instance\n\t */\n\tOutgoingMessagesResponse.prototype.messages = $util.emptyArray\n\t\n\t/**\n\t * Creates a new OutgoingMessagesResponse instance using the specified properties.\n\t * @function create\n\t * @memberof OutgoingMessagesResponse\n\t * @static\n\t * @param {IOutgoingMessagesResponse=} [properties] Properties to set\n\t * @returns {OutgoingMessagesResponse} OutgoingMessagesResponse instance\n\t */\n\tOutgoingMessagesResponse.create = function create(properties) {\n\t\treturn new OutgoingMessagesResponse(properties)\n\t}\n\t\n\t/**\n\t * Encodes the specified OutgoingMessagesResponse message. Does not implicitly {@link OutgoingMessagesResponse.verify|verify} messages.\n\t * @function encode\n\t * @memberof OutgoingMessagesResponse\n\t * @static\n\t * @param {OutgoingMessagesResponse} message OutgoingMessagesResponse message or plain object to encode\n\t * @param {$protobuf.Writer} [writer] Writer to encode to\n\t * @returns {$protobuf.Writer} Writer\n\t */\n\tOutgoingMessagesResponse.encode = function encode(message, writer) {\n\t\tif (!writer) {\n\t\t\twriter = $Writer.create()\n\t\t}\n\t\tif (message.messages != null && message.messages.length) {\n\t\t\tfor (var i = 0; i < message.messages.length; ++i)\n\t\t\t\t$root.OutgoingMessage.encode(\n\t\t\t\t\tmessage.messages[i],\n\t\t\t\t\twriter.uint32(/* id 1, wireType 2 =*/ 10).fork()\n\t\t\t\t).ldelim()\n\t\t}\n\t\treturn writer\n\t}\n\t\n\t/**\n\t * Decodes an OutgoingMessagesResponse message from the specified reader or buffer.\n\t * @function decode\n\t * @memberof OutgoingMessagesResponse\n\t * @static\n\t * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n\t * @param {number} [length] Message length if known beforehand\n\t * @returns {OutgoingMessagesResponse} OutgoingMessagesResponse\n\t * @throws {Error} If the payload is not a reader or valid buffer\n\t * @throws {$protobuf.util.ProtocolError} If required fields are missing\n\t */\n\tOutgoingMessagesResponse.decode = function decode(reader, length) {\n\t\tif (!(reader instanceof $Reader)) {\n\t\t\treader = $Reader.create(reader)\n\t\t}\n\t\tvar end = length === undefined ? reader.len : reader.pos + length,\n\t\t\tmessage = new $root.OutgoingMessagesResponse()\n\t\twhile (reader.pos < end) {\n\t\t\tvar tag = reader.uint32()\n\t\t\tswitch (tag >>> 3) {\n\t\t\t\tcase 1:\n\t\t\t\t\tif (!(message.messages && message.messages.length)) {\n\t\t\t\t\t\tmessage.messages = []\n\t\t\t\t\t}\n\t\t\t\t\tmessage.messages.push(\n\t\t\t\t\t\t$root.OutgoingMessage.decode(reader, reader.uint32())\n\t\t\t\t\t)\n\t\t\t\t\tbreak\n\t\t\t\tdefault:\n\t\t\t\t\treader.skipType(tag & 7)\n\t\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\treturn message\n\t}\n\t\n\treturn OutgoingMessagesResponse\n})()\n\n$root.OutgoingMessage = (function () {\n\t/**\n\t * Properties of an OutgoingMessage.\n\t * @exports IOutgoingMessage\n\t * @interface IOutgoingMessage\n\t * @property {Uint8Array|null} [id] OutgoingMessage id\n\t * @property {string|null} [body] OutgoingMessage body\n\t * @property {number|null} [expiry] OutgoingMessage expiry\n\t * @property {number|null} [created] OutgoingMessage created\n\t * @property {Sender|null} [sender] OutgoingMessage sender\n\t */\n\t\n\t/**\n\t * Constructs a new OutgoingMessage.\n\t * @exports OutgoingMessage\n\t * @classdesc Represents an OutgoingMessage.\n\t * @implements IOutgoingMessage\n\t * @constructor\n\t * @param {IOutgoingMessage=} [properties] Properties to set\n\t */\n\tfunction OutgoingMessage(properties) {\n\t\tif (properties) {\n\t\t\tfor (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n\t\t\t\tif (properties[keys[i]] != null) {\n\t\t\t\t\tthis[keys[i]] = properties[keys[i]]\n\t\t\t\t}\n\t\t}\n\t}\n\t\n\t/**\n\t * OutgoingMessage id.\n\t * @member {Uint8Array} id\n\t * @memberof OutgoingMessage\n\t * @instance\n\t */\n\tOutgoingMessage.prototype.id = $util.newBuffer([])\n\t\n\t/**\n\t * OutgoingMessage body.\n\t * @member {string} body\n\t * @memberof OutgoingMessage\n\t * @instance\n\t */\n\tOutgoingMessage.prototype.body = ''\n\t\n\t/**\n\t * OutgoingMessage expiry.\n\t * @member {number} expiry\n\t * @memberof OutgoingMessage\n\t * @instance\n\t */\n\tOutgoingMessage.prototype.expiry = 0\n\t\n\t/**\n\t * OutgoingMessage created.\n\t * @member {number} created\n\t * @memberof OutgoingMessage\n\t * @instance\n\t */\n\tOutgoingMessage.prototype.created = 0\n\t\n\t/**\n\t * OutgoingMessage sender.\n\t * @member {Sender|null|undefined} sender\n\t * @memberof OutgoingMessage\n\t * @instance\n\t */\n\tOutgoingMessage.prototype.sender = null\n\t\n\t/**\n\t * Creates a new OutgoingMessage instance using the specified properties.\n\t * @function create\n\t * @memberof OutgoingMessage\n\t * @static\n\t * @param {IOutgoingMessage=} [properties] Properties to set\n\t * @returns {OutgoingMessage} OutgoingMessage instance\n\t */\n\tOutgoingMessage.create = function create(properties) {\n\t\treturn new OutgoingMessage(properties)\n\t}\n\t\n\t/**\n\t * Encodes the specified OutgoingMessage message. Does not implicitly {@link OutgoingMessage.verify|verify} messages.\n\t * @function encode\n\t * @memberof OutgoingMessage\n\t * @static\n\t * @param {OutgoingMessage} message OutgoingMessage message or plain object to encode\n\t * @param {$protobuf.Writer} [writer] Writer to encode to\n\t * @returns {$protobuf.Writer} Writer\n\t */\n\tOutgoingMessage.encode = function encode(message, writer) {\n\t\tif (!writer) {\n\t\t\twriter = $Writer.create()\n\t\t}\n\t\tif (message.id != null && message.hasOwnProperty('id')) {\n\t\t\twriter.uint32(/* id 1, wireType 2 =*/ 10).bytes(message.id)\n\t\t}\n\t\tif (message.body != null && message.hasOwnProperty('body')) {\n\t\t\twriter.uint32(/* id 2, wireType 2 =*/ 18).string(message.body)\n\t\t}\n\t\tif (message.expiry != null && message.hasOwnProperty('expiry')) {\n\t\t\twriter.uint32(/* id 3, wireType 0 =*/ 24).uint32(message.expiry)\n\t\t}\n\t\tif (message.created != null && message.hasOwnProperty('created')) {\n\t\t\twriter.uint32(/* id 4, wireType 5 =*/ 37).fixed32(message.created)\n\t\t}\n\t\tif (message.sender != null && message.hasOwnProperty('sender')) {\n\t\t\t$root.Sender.encode(\n\t\t\t\tmessage.sender,\n\t\t\t\twriter.uint32(/* id 5, wireType 2 =*/ 42).fork()\n\t\t\t).ldelim()\n\t\t}\n\t\treturn writer\n\t}\n\t\n\t/**\n\t * Decodes an OutgoingMessage message from the specified reader or buffer.\n\t * @function decode\n\t * @memberof OutgoingMessage\n\t * @static\n\t * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n\t * @param {number} [length] Message length if known beforehand\n\t * @returns {OutgoingMessage} OutgoingMessage\n\t * @throws {Error} If the payload is not a reader or valid buffer\n\t * @throws {$protobuf.util.ProtocolError} If required fields are missing\n\t */\n\tOutgoingMessage.decode = function decode(reader, length) {\n\t\tif (!(reader instanceof $Reader)) {\n\t\t\treader = $Reader.create(reader)\n\t\t}\n\t\tvar end = length === undefined ? reader.len : reader.pos + length,\n\t\t\tmessage = new $root.OutgoingMessage()\n\t\twhile (reader.pos < end) {\n\t\t\tvar tag = reader.uint32()\n\t\t\tswitch (tag >>> 3) {\n\t\t\t\tcase 1:\n\t\t\t\t\tmessage.id = reader.bytes()\n\t\t\t\t\tbreak\n\t\t\t\tcase 2:\n\t\t\t\t\tmessage.body = reader.string()\n\t\t\t\t\tbreak\n\t\t\t\tcase 3:\n\t\t\t\t\tmessage.expiry = reader.uint32()\n\t\t\t\t\tbreak\n\t\t\t\tcase 4:\n\t\t\t\t\tmessage.created = reader.fixed32()\n\t\t\t\t\tbreak\n\t\t\t\tcase 5:\n\t\t\t\t\tmessage.sender = $root.Sender.decode(reader, reader.uint32())\n\t\t\t\t\tbreak\n\t\t\t\tdefault:\n\t\t\t\t\treader.skipType(tag & 7)\n\t\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\treturn message\n\t}\n\t\n\treturn OutgoingMessage\n})()\n\n$root.ChannelStatsResponse = (function () {\n\t/**\n\t * Properties of a ChannelStatsResponse.\n\t * @exports IChannelStatsResponse\n\t * @interface IChannelStatsResponse\n\t * @property {Array.<ChannelStats>|null} [channels] ChannelStatsResponse channels\n\t */\n\t\n\t/**\n\t * Constructs a new ChannelStatsResponse.\n\t * @exports ChannelStatsResponse\n\t * @classdesc Represents a ChannelStatsResponse.\n\t * @implements IChannelStatsResponse\n\t * @constructor\n\t * @param {IChannelStatsResponse=} [properties] Properties to set\n\t */\n\tfunction ChannelStatsResponse(properties) {\n\t\tthis.channels = []\n\t\tif (properties) {\n\t\t\tfor (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n\t\t\t\tif (properties[keys[i]] != null) {\n\t\t\t\t\tthis[keys[i]] = properties[keys[i]]\n\t\t\t\t}\n\t\t}\n\t}\n\t\n\t/**\n\t * ChannelStatsResponse channels.\n\t * @member {Array.<ChannelStats>} channels\n\t * @memberof ChannelStatsResponse\n\t * @instance\n\t */\n\tChannelStatsResponse.prototype.channels = $util.emptyArray\n\t\n\t/**\n\t * Creates a new ChannelStatsResponse instance using the specified properties.\n\t * @function create\n\t * @memberof ChannelStatsResponse\n\t * @static\n\t * @param {IChannelStatsResponse=} [properties] Properties to set\n\t * @returns {ChannelStatsResponse} ChannelStatsResponse instance\n\t */\n\tChannelStatsResponse.create = function create(properties) {\n\t\treturn new ChannelStatsResponse(properties)\n\t}\n\t\n\t/**\n\t * Encodes the specified ChannelStatsResponse message. Does not implicitly {@link ChannelStatsResponse.verify|verify} messages.\n\t * @function encode\n\t * @memberof ChannelStatsResponse\n\t * @static\n\t * @param {ChannelStatsResponse} message ChannelStatsResponse message or plain object to encode\n\t * @param {$protobuf.Writer} [writer] Writer to encode to\n\t * @returns {$protobuf.Writer} Writer\n\t */\n\tChannelStatsResponse.encode = function encode(message, writer) {\n\t\tif (!writer) {\n\t\t\twriter = $Writer.create()\n\t\t}\n\t\tif (message.channels != null && message.channels.length) {\n\t\t\tfor (var i = 0; i < message.channels.length; ++i)\n\t\t\t\t$root.ChannelStats.encode(\n\t\t\t\t\tmessage.channels[i],\n\t\t\t\t\twriter.uint32(/* id 1, wireType 2 =*/ 10).fork()\n\t\t\t\t).ldelim()\n\t\t}\n\t\treturn writer\n\t}\n\t\n\t/**\n\t * Decodes a ChannelStatsResponse message from the specified reader or buffer.\n\t * @function decode\n\t * @memberof ChannelStatsResponse\n\t * @static\n\t * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n\t * @param {number} [length] Message length if known beforehand\n\t * @returns {ChannelStatsResponse} ChannelStatsResponse\n\t * @throws {Error} If the payload is not a reader or valid buffer\n\t * @throws {$protobuf.util.ProtocolError} If required fields are missing\n\t */\n\tChannelStatsResponse.decode = function decode(reader, length) {\n\t\tif (!(reader instanceof $Reader)) {\n\t\t\treader = $Reader.create(reader)\n\t\t}\n\t\tvar end = length === undefined ? reader.len : reader.pos + length,\n\t\t\tmessage = new $root.ChannelStatsResponse()\n\t\twhile (reader.pos < end) {\n\t\t\tvar tag = reader.uint32()\n\t\t\tswitch (tag >>> 3) {\n\t\t\t\tcase 1:\n\t\t\t\t\tif (!(message.channels && message.channels.length)) {\n\t\t\t\t\t\tmessage.channels = []\n\t\t\t\t\t}\n\t\t\t\t\tmessage.channels.push(\n\t\t\t\t\t\t$root.ChannelStats.decode(reader, reader.uint32())\n\t\t\t\t\t)\n\t\t\t\t\tbreak\n\t\t\t\tdefault:\n\t\t\t\t\treader.skipType(tag & 7)\n\t\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\treturn message\n\t}\n\t\n\treturn ChannelStatsResponse\n})()\n\n$root.ChannelStats = (function () {\n\t/**\n\t * Properties of a ChannelStats.\n\t * @exports IChannelStats\n\t * @interface IChannelStats\n\t * @property {Uint8Array|null} [id] ChannelStats id\n\t * @property {boolean|null} [isPrivate] ChannelStats isPrivate\n\t * @property {boolean|null} [isOnline] ChannelStats isOnline\n\t */\n\t\n\t/**\n\t * Constructs a new ChannelStats.\n\t * @exports ChannelStats\n\t * @classdesc Represents a ChannelStats.\n\t * @implements IChannelStats\n\t * @constructor\n\t * @param {IChannelStats=} [properties] Properties to set\n\t */\n\tfunction ChannelStats(properties) {\n\t\tif (properties) {\n\t\t\tfor (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n\t\t\t\tif (properties[keys[i]] != null) {\n\t\t\t\t\tthis[keys[i]] = properties[keys[i]]\n\t\t\t\t}\n\t\t}\n\t}\n\t\n\t/**\n\t * ChannelStats id.\n\t * @member {Uint8Array} id\n\t * @memberof ChannelStats\n\t * @instance\n\t */\n\tChannelStats.prototype.id = $util.newBuffer([])\n\t\n\t/**\n\t * ChannelStats isPrivate.\n\t * @member {boolean} isPrivate\n\t * @memberof ChannelStats\n\t * @instance\n\t */\n\tChannelStats.prototype.isPrivate = false\n\t\n\t/**\n\t * ChannelStats isOnline.\n\t * @member {boolean} isOnline\n\t * @memberof ChannelStats\n\t * @instance\n\t */\n\tChannelStats.prototype.isOnline = false\n\t\n\t/**\n\t * Creates a new ChannelStats instance using the specified properties.\n\t * @function create\n\t * @memberof ChannelStats\n\t * @static\n\t * @param {IChannelStats=} [properties] Properties to set\n\t * @returns {ChannelStats} ChannelStats instance\n\t */\n\tChannelStats.create = function create(properties) {\n\t\treturn new ChannelStats(properties)\n\t}\n\t\n\t/**\n\t * Encodes the specified ChannelStats message. Does not implicitly {@link ChannelStats.verify|verify} messages.\n\t * @function encode\n\t * @memberof ChannelStats\n\t * @static\n\t * @param {ChannelStats} message ChannelStats message or plain object to encode\n\t * @param {$protobuf.Writer} [writer] Writer to encode to\n\t * @returns {$protobuf.Writer} Writer\n\t */\n\tChannelStats.encode = function encode(message, writer) {\n\t\tif (!writer) {\n\t\t\twriter = $Writer.create()\n\t\t}\n\t\tif (message.id != null && message.hasOwnProperty('id')) {\n\t\t\twriter.uint32(/* id 1, wireType 2 =*/ 10).bytes(message.id)\n\t\t}\n\t\tif (message.isPrivate != null && message.hasOwnProperty('isPrivate')) {\n\t\t\twriter.uint32(/* id 2, wireType 0 =*/ 16).bool(message.isPrivate)\n\t\t}\n\t\tif (message.isOnline != null && message.hasOwnProperty('isOnline')) {\n\t\t\twriter.uint32(/* id 3, wireType 0 =*/ 24).bool(message.isOnline)\n\t\t}\n\t\treturn writer\n\t}\n\t\n\t/**\n\t * Decodes a ChannelStats message from the specified reader or buffer.\n\t * @function decode\n\t * @memberof ChannelStats\n\t * @static\n\t * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n\t * @param {number} [length] Message length if known beforehand\n\t * @returns {ChannelStats} ChannelStats\n\t * @throws {Error} If the payload is not a reader or valid buffer\n\t * @throws {$protobuf.util.ProtocolError} If required fields are missing\n\t */\n\tChannelStats.decode = function decode(reader, length) {\n\t\tif (!(reader instanceof $Reader)) {\n\t\t\treader = $Reader.create(reader)\n\t\t}\n\t\tvar end = length === undefined ? reader.len : reader.pos + length,\n\t\t\tmessage = new $root.ChannelStats()\n\t\twhile (reader.pos < end) {\n\t\t\tvar tag = reader.uint32()\n\t\t\tswitch (tag >>> 3) {\n\t\t\t\tcase 1:\n\t\t\t\t\tmessage.id = reader.bytes()\n\t\t\t\t\tbreak\n\t\t\t\tcase 2:\n\t\t\t\t\tmessage.isPrivate = reader.bool()\n\t\t\t\t\tbreak\n\t\t\t\tcase 3:\n\t\t\t\t\tmessage.isOnline = reader.bool()\n\t\t\t\t\tbreak\n\t\t\t\tdefault:\n\t\t\t\t\treader.skipType(tag & 7)\n\t\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\treturn message\n\t}\n\t\n\treturn ChannelStats\n})()\n\n$root.JsonResponse = (function () {\n\t/**\n\t * Properties of a JsonResponse.\n\t * @exports IJsonResponse\n\t * @interface IJsonResponse\n\t * @property {string|null} [json] JsonResponse json\n\t */\n\t\n\t/**\n\t * Constructs a new JsonResponse.\n\t * @exports JsonResponse\n\t * @classdesc Represents a JsonResponse.\n\t * @implements IJsonResponse\n\t * @constructor\n\t * @param {IJsonResponse=} [properties] Properties to set\n\t */\n\tfunction JsonResponse(properties) {\n\t\tif (properties) {\n\t\t\tfor (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n\t\t\t\tif (properties[keys[i]] != null) {\n\t\t\t\t\tthis[keys[i]] = properties[keys[i]]\n\t\t\t\t}\n\t\t}\n\t}\n\t\n\t/**\n\t * JsonResponse json.\n\t * @member {string} json\n\t * @memberof JsonResponse\n\t * @instance\n\t */\n\tJsonResponse.prototype.json = ''\n\t\n\t/**\n\t * Creates a new JsonResponse instance using the specified properties.\n\t * @function create\n\t * @memberof JsonResponse\n\t * @static\n\t * @param {IJsonResponse=} [properties] Properties to set\n\t * @returns {JsonResponse} JsonResponse instance\n\t */\n\tJsonResponse.create = function create(properties) {\n\t\treturn new JsonResponse(properties)\n\t}\n\t\n\t/**\n\t * Encodes the specified JsonResponse message. Does not implicitly {@link JsonResponse.verify|verify} messages.\n\t * @function encode\n\t * @memberof JsonResponse\n\t * @static\n\t * @param {JsonResponse} message JsonResponse message or plain object to encode\n\t * @param {$protobuf.Writer} [writer] Writer to encode to\n\t * @returns {$protobuf.Writer} Writer\n\t */\n\tJsonResponse.encode = function encode(message, writer) {\n\t\tif (!writer) {\n\t\t\twriter = $Writer.create()\n\t\t}\n\t\tif (message.json != null && message.hasOwnProperty('json')) {\n\t\t\twriter.uint32(/* id 1, wireType 2 =*/ 10).string(message.json)\n\t\t}\n\t\treturn writer\n\t}\n\t\n\t/**\n\t * Decodes a JsonResponse message from the specified reader or buffer.\n\t * @function decode\n\t * @memberof JsonResponse\n\t * @static\n\t * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n\t * @param {number} [length] Message length if known beforehand\n\t * @returns {JsonResponse} JsonResponse\n\t * @throws {Error} If the payload is not a reader or valid buffer\n\t * @throws {$protobuf.util.ProtocolError} If required fields are missing\n\t */\n\tJsonResponse.decode = function decode(reader, length) {\n\t\tif (!(reader instanceof $Reader)) {\n\t\t\treader = $Reader.create(reader)\n\t\t}\n\t\tvar end = length === undefined ? reader.len : reader.pos + length,\n\t\t\tmessage = new $root.JsonResponse()\n\t\twhile (reader.pos < end) {\n\t\t\tvar tag = reader.uint32()\n\t\t\tswitch (tag >>> 3) {\n\t\t\t\tcase 1:\n\t\t\t\t\tmessage.json = reader.string()\n\t\t\t\t\tbreak\n\t\t\t\tdefault:\n\t\t\t\t\treader.skipType(tag & 7)\n\t\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\treturn message\n\t}\n\t\n\treturn JsonResponse\n})()\n","import { $root } from './model'\n\n// Protobuf message models\n// @ts-ignore\n//export const Response = $root['Response']\n// @ts-ignore\nexport const ResponseBatch = $root['ResponseBatch']\n// @ts-ignore\n//export const Request = $root['Request']\n// @ts-ignore\nexport const RequestBatch = $root['RequestBatch']\n// @ts-ignore\n//export const IncomingMessagesRequest = $root['In/comingMessagesRequest']\n// @ts-ignore\nexport const IncomingMessage = $root['IncomingMessage']\n// @ts-ignore\nexport const Receiver = $root['Receiver']\n","import { LoggerBrowser, LoggerType } from '../logger/browser'\nimport Type from '../tools/type'\nimport { ConnectionType, type TypeConnector } from '../types/pull'\nimport type {\n\tConnectorParent,\n\tConnectorCallbacks,\n\tConnectorConfig,\n} from '../types/pull'\n\nexport abstract class AbstractConnector implements TypeConnector {\n\tprivate _logger: null | LoggerBrowser = null\n\n\tprotected _connected: boolean = false\n\n\tprotected _connectionType: ConnectionType\n\n\tprotected _disconnectCode: number = 0\n\tprotected _disconnectReason: string = ''\n\n\tprotected _parent: ConnectorParent\n\n\tprotected _callbacks: ConnectorCallbacks\n\n\tprotected constructor(config: ConnectorConfig) {\n\t\tthis._parent = config.parent\n\t\tthis._connectionType = ConnectionType.Undefined\n\n\t\tthis._callbacks = {\n\t\t\tonOpen: Type.isFunction(config.onOpen) ? config.onOpen : () => {},\n\t\t\tonDisconnect: Type.isFunction(config.onDisconnect)\n\t\t\t\t? config.onDisconnect\n\t\t\t\t: () => {},\n\t\t\tonError: Type.isFunction(config.onError) ? config.onError : () => {},\n\t\t\tonMessage: Type.isFunction(config.onMessage)\n\t\t\t\t? config.onMessage\n\t\t\t\t: () => {},\n\t\t} as ConnectorCallbacks\n\t}\n\n\tsetLogger(logger: LoggerBrowser): void {\n\t\tthis._logger = logger\n\t}\n\n\tgetLogger(): LoggerBrowser {\n\t\tif (null === this._logger) {\n\t\t\tthis._logger = LoggerBrowser.build(`NullLogger`)\n\n\t\t\tthis._logger.setConfig({\n\t\t\t\t[LoggerType.desktop]: false,\n\t\t\t\t[LoggerType.log]: false,\n\t\t\t\t[LoggerType.info]: false,\n\t\t\t\t[LoggerType.warn]: false,\n\t\t\t\t[LoggerType.error]: true,\n\t\t\t\t[LoggerType.trace]: false,\n\t\t\t})\n\t\t}\n\n\t\treturn this._logger\n\t}\n\n\tdestroy(): void {}\n\n\tget connected() {\n\t\treturn this._connected\n\t}\n\n\tset connected(value) {\n\t\tif (value == this._connected) {\n\t\t\treturn\n\t\t}\n\n\t\tthis._connected = value\n\n\t\tif (this._connected) {\n\t\t\tthis._callbacks.onOpen()\n\t\t} else {\n\t\t\tthis._callbacks.onDisconnect({\n\t\t\t\tcode: this.disconnectCode,\n\t\t\t\treason: this.disconnectReason,\n\t\t\t})\n\t\t}\n\t}\n\n\tget disconnectCode(): number {\n\t\treturn this._disconnectCode\n\t}\n\n\tget disconnectReason(): string {\n\t\treturn this._disconnectReason\n\t}\n\n\tget connectionPath(): string {\n\t\treturn this._parent.getConnectionPath(this._connectionType)\n\t}\n\n\t/**\n\t * Make connect to the server\n\t */\n\tabstract connect(): void\n\n\t/**\n\t * Make disconnect from the server\n\t * @param code\n\t * @param reason\n\t */\n\tabstract disconnect(code: number, reason: string): void\n\n\t/**\n\t * Sends some data to the server\n\t * @param {ArrayBuffer|string} buffer Data to send.\n\t * @return {boolean}\n\t */\n\tabstract send(buffer: ArrayBuffer | string): boolean\n}\n","import Text from '../tools/text'\nimport { AbstractConnector } from './abstract-connector'\nimport { ConnectionType } from '../types/pull'\nimport type { ConnectorConfig } from '../types/pull'\n\nexport class WebSocketConnector extends AbstractConnector {\n\tprivate _socket: null | WebSocket\n\n\tprivate readonly _onSocketOpenHandler: () => void\n\tprivate readonly _onSocketCloseHandler: (event: CloseEvent) => void\n\tprivate readonly _onSocketErrorHandler: (event: Event) => void\n\tprivate readonly _onSocketMessageHandler: (event: MessageEvent) => void\n\n\tconstructor(config: ConnectorConfig) {\n\t\tsuper(config)\n\n\t\tthis._connectionType = ConnectionType.WebSocket\n\t\tthis._socket = null\n\n\t\tthis._onSocketOpenHandler = this._onSocketOpen.bind(this)\n\t\tthis._onSocketCloseHandler = this._onSocketClose.bind(this)\n\t\tthis._onSocketErrorHandler = this._onSocketError.bind(this)\n\t\tthis._onSocketMessageHandler = this._onSocketMessage.bind(this)\n\t}\n\n\toverride destroy() {\n\t\tsuper.destroy()\n\n\t\tif (this._socket) {\n\t\t\tthis._socket.close()\n\t\t\tthis._socket = null\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\toverride connect(): void {\n\t\tif (this._socket) {\n\t\t\tif (this._socket.readyState === 1) {\n\t\t\t\t/**\n\t\t\t\t * @memo already connected\n\t\t\t\t */\n\t\t\t\treturn\n\t\t\t} else {\n\t\t\t\tthis.clearEventListener()\n\n\t\t\t\tthis._socket.close()\n\t\t\t\tthis._socket = null\n\t\t\t}\n\t\t}\n\n\t\tthis._createSocket()\n\t}\n\n\tget socket(): null | WebSocket {\n\t\treturn this._socket\n\t}\n\n\t/**\n\t * @inheritDoc\n\t * @param code\n\t * @param reason\n\t */\n\toverride disconnect(code: number, reason: string): void {\n\t\tif (this._socket !== null) {\n\t\t\tthis.clearEventListener()\n\n\t\t\tthis._socket.close(code, reason)\n\t\t}\n\t\tthis._socket = null\n\t\tthis._disconnectCode = code\n\t\tthis._disconnectReason = reason\n\t\tthis.connected = false\n\t}\n\n\t/**\n\t * Via websocket connection\n\t * @inheritDoc\n\t */\n\toverride send(buffer: ArrayBuffer | string): boolean {\n\t\tif (!this._socket || this._socket.readyState !== 1) {\n\t\t\tthis.getLogger().error(\n\t\t\t\tnew Error(`${Text.getDateForLog()}: Pull: WebSocket is not connected`)\n\t\t\t)\n\n\t\t\treturn false\n\t\t}\n\n\t\tthis._socket.send(buffer)\n\t\treturn true\n\t}\n\n\t// region Event Handlers ////\n\tprivate _onSocketOpen(): void {\n\t\tthis.connected = true\n\t}\n\n\tprivate _onSocketClose(event: CloseEvent) {\n\t\tthis._socket = null\n\t\tthis._disconnectCode = Number(event.code)\n\t\tthis._disconnectReason = event.reason\n\t\tthis.connected = false\n\t}\n\n\tprivate _onSocketError(event: Event): void {\n\t\tthis._callbacks.onError(new Error(`Socket error: ${event}`))\n\t}\n\n\tprivate _onSocketMessage(event: MessageEvent): void {\n\t\tthis._callbacks.onMessage(event.data)\n\t}\n\t// endregion ////\n\n\t// region Tools ////\n\tprivate clearEventListener(): void {\n\t\tif (this._socket) {\n\t\t\tthis._socket.removeEventListener('open', this._onSocketOpenHandler)\n\n\t\t\tthis._socket.removeEventListener('close', this._onSocketCloseHandler)\n\n\t\t\tthis._socket.removeEventListener('error', this._onSocketErrorHandler)\n\n\t\t\tthis._socket.removeEventListener('message', this._onSocketMessageHandler)\n\t\t}\n\t}\n\n\tprivate _createSocket(): void {\n\t\tif (this._socket) {\n\t\t\tthrow new Error('Socket already exists')\n\t\t}\n\n\t\tif (!this.connectionPath) {\n\t\t\tthrow new Error('Websocket connection path is not defined')\n\t\t}\n\n\t\tthis._socket = new WebSocket(this.connectionPath)\n\t\tthis._socket.binaryType = 'arraybuffer'\n\n\t\tthis._socket.addEventListener('open', this._onSocketOpenHandler)\n\n\t\tthis._socket.addEventListener('close', this._onSocketCloseHandler)\n\n\t\tthis._socket.addEventListener('error', this._onSocketErrorHandler)\n\n\t\tthis._socket.addEventListener('message', this._onSocketMessageHandler)\n\t}\n\t// endregion ////\n}\n","import Type from '../tools/type'\nimport Text from '../tools/text'\nimport { AbstractConnector } from './abstract-connector'\nimport { ConnectionType } from '../types/pull'\nimport type { ConnectorConfig } from '../types/pull'\n\nconst LONG_POLLING_TIMEOUT = 60\n\nexport class LongPollingConnector extends AbstractConnector {\n\tprivate _active: boolean\n\n\tprivate _requestTimeout: null | number\n\tprivate _failureTimeout: null | number\n\tprivate readonly _xhr: XMLHttpRequest\n\tprivate _requestAborted: boolean\n\n\tconstructor(config: ConnectorConfig) {\n\t\tsuper(config)\n\n\t\tthis._active = false\n\t\tthis._connectionType = ConnectionType.LongPolling\n\n\t\tthis._requestTimeout = null\n\t\tthis._failureTimeout = null\n\t\tthis._xhr = this.createXhr()\n\t\tthis._requestAborted = false\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\toverride connect(): void {\n\t\tthis._active = true\n\t\tthis.performRequest()\n\t}\n\n\t/**\n\t * @inheritDoc\n\t * @param code\n\t * @param reason\n\t */\n\toverride disconnect(code: number, reason: string): void {\n\t\tthis._active = false\n\n\t\tthis.clearTimeOut()\n\n\t\tif (this._xhr) {\n\t\t\tthis._requestAborted = true\n\t\t\tthis._xhr.abort()\n\t\t}\n\n\t\tthis._disconnectCode = code\n\t\tthis._disconnectReason = reason\n\t\tthis.connected = false\n\t}\n\n\tprivate performRequest(): void {\n\t\tif (!this._active) {\n\t\t\treturn\n\t\t}\n\n\t\tif (!this.connectionPath) {\n\t\t\tthrow new Error('Long polling connection path is not defined')\n\t\t}\n\n\t\tif (this._xhr.readyState !== 0 && this._xhr.readyState !== 4) {\n\t\t\treturn\n\t\t}\n\n\t\tthis.clearTimeOut()\n\n\t\tthis._failureTimeout = setTimeout(() => {\n\t\t\tthis.connected = true\n\t\t}, 5_000)\n\n\t\tthis._requestTimeout = setTimeout(\n\t\t\tthis.onRequestTimeout.bind(this),\n\t\t\tLONG_POLLING_TIMEOUT * 1_000\n\t\t)\n\n\t\tthis._xhr.open('GET', this.connectionPath)\n\t\tthis._xhr.send()\n\t}\n\n\tprivate onRequestTimeout() {\n\t\tthis._requestAborted = true\n\t\tthis._xhr.abort()\n\t\tthis.performRequest()\n\t}\n\n\tprivate onXhrReadyStateChange(): void {\n\t\tif (this._xhr.readyState === 4) {\n\t\t\tif (!this._requestAborted || this._xhr.status == 200) {\n\t\t\t\tthis.onResponse(this._xhr.response)\n\t\t\t}\n\n\t\t\tthis._requestAborted = false\n\t\t}\n\t}\n\n\t/**\n\t * Via http request\n\t * @inheritDoc\n\t */\n\toverride send(buffer: ArrayBuffer | string): boolean {\n\t\tconst path = this._parent.getPublicationPath()\n\t\tif (!path) {\n\t\t\tthis.getLogger().error(\n\t\t\t\tnew Error(`${Text.getDateForLog()}: Pull: publication path is empty`)\n\t\t\t)\n\t\t\treturn false\n\t\t}\n\n\t\tconst xhr = new XMLHttpRequest()\n\t\txhr.open('POST', path)\n\t\txhr.send(buffer)\n\n\t\treturn true\n\t}\n\n\tprivate onResponse(response: any): void {\n\t\tthis.clearTimeOut()\n\n\t\tif (this._xhr.status === 200) {\n\t\t\tthis.connected = true\n\t\t\tif (Type.isStringFilled(response) || response instanceof ArrayBuffer) {\n\t\t\t\tthis._callbacks.onMessage(response)\n\t\t\t} else {\n\t\t\t\tthis._parent.session.mid = null\n\t\t\t}\n\t\t\tthis.performRequest()\n\t\t} else if (this._xhr.status === 304) {\n\t\t\tthis.connected = true\n\t\t\tif (\n\t\t\t\tthis._xhr.getResponseHeader('Expires') ===\n\t\t\t\t'Thu, 01 Jan 1973 11:11:01 GMT'\n\t\t\t) {\n\t\t\t\tconst lastMessageId = this._xhr.getResponseHeader('Last-Message-Id')\n\t\t\t\tif (Type.isStringFilled(lastMessageId)) {\n\t\t\t\t\tthis._parent.setLastMessageId(lastMessageId || '')\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.performRequest()\n\t\t} else {\n\t\t\tthis._callbacks.onError(new Error('Could not connect to the server'))\n\n\t\t\tthis.connected = false\n\t\t}\n\t}\n\n\t// region Tools ////\n\tprivate clearTimeOut(): void {\n\t\tif (this._failureTimeout) {\n\t\t\tclearTimeout(this._failureTimeout)\n\t\t\tthis._failureTimeout = null\n\t\t}\n\n\t\tif (this._requestTimeout) {\n\t\t\tclearTimeout(this._requestTimeout)\n\t\t\tthis._requestTimeout = null\n\t\t}\n\t}\n\n\tprivate createXhr(): XMLHttpRequest {\n\t\tconst result = new XMLHttpRequest()\n\n\t\tif (this._parent.isProtobufSupported() && !this._parent.isJsonRpc()) {\n\t\t\tresult.responseType = 'arraybuffer'\n\t\t}\n\n\t\tresult.addEventListener(\n\t\t\t'readystatechange',\n\t\t\tthis.onXhrReadyStateChange.bind(this)\n\t\t)\n\n\t\treturn result\n\t}\n\t// endregion ////\n}\n","import { LoggerBrowser, LoggerType } from '../logger/browser'\nimport Type from '../tools/type'\nimport Text from '../tools/text'\nimport Browser from '../tools/browser'\nimport { StorageManager } from './storage-manager'\nimport { JsonRpc } from './json-rpc'\nimport { SharedConfig } from './shared-config'\nimport { ChannelManager } from './channel-manager'\nimport {\n\t//Response,\n\tResponseBatch,\n\t//Request,\n\tRequestBatch,\n\t//IncomingMessagesRequest,\n\tIncomingMessage,\n\tReceiver,\n} from './protobuf'\nimport type { TypeB24 } from '../types/b24'\nimport {\n\tCloseReasons,\n\tConnectionType,\n\tPullStatus,\n\tRpcMethod,\n\tSenderType,\n\tServerMode,\n\tSubscriptionType,\n\tSystemCommands,\n\tLsKeys,\n\ttype StorageManagerParams,\n\ttype TypePullClientParams,\n\ttype TypePullClientSession,\n\ttype TypeStorageManager,\n\ttype SharedConfigParams,\n\ttype TypeChannelManagerParams,\n\ttype TypeConnector,\n\ttype RpcError,\n\ttype TypePullClientConfig,\n\ttype TypePullMessage,\n\ttype TypeSubscriptionOptions,\n\ttype TypeSubscriptionCommandHandler,\n\ttype TypePullClientEmitConfig,\n\ttype CommandHandlerFunctionV1,\n\ttype CommandHandlerFunctionV2,\n\ttype ConnectorParent,\n\ttype UserStatusCallback,\n\ttype TypePublicIdDescriptor,\n\ttype TypePullClientMessageBatch,\n\ttype TypeChanel,\n\ttype TypeSessionEvent,\n\ttype TypePullClientMessageBody,\n} from '../types/pull'\nimport type { AjaxResult } from '../core/http/ajax-result'\nimport type { Payload } from '../types/payloads'\nimport type { NumberString } from '../types/common'\nimport { WebSocketConnector } from './web-socket-connector'\nimport { LongPollingConnector } from './long-polling-connector'\nimport type { AjaxError } from '../core/http/ajax-error'\n\n/**\n * @memo api revision - check module/pull/include.php\n */\nconst REVISION = 19\nconst RESTORE_WEBSOCKET_TIMEOUT = 30 * 60\nconst OFFLINE_STATUS_DELAY = 5_000\nconst CONFIG_CHECK_INTERVAL = 60 * 1000\nconst MAX_IDS_TO_STORE = 10\nconst PING_TIMEOUT = 10\nconst JSON_RPC_PING = 'ping'\nconst JSON_RPC_PONG = 'pong'\nconst LS_SESSION = 'bx-pull-session'\nconst LS_SESSION_CACHE_TIME = 20\n\nconst EmptyConfig = {\n\tapi: {},\n\tchannels: {},\n\tpublicChannels: {},\n\tserver: { timeShift: 0 },\n\tclientId: null,\n\tjwt: null,\n\texp: 0,\n} as TypePullClientConfig\n\n/**\n * @todo fix logic for _loggingEnabled\n */\nexport class PullClient implements ConnectorParent {\n\t// region Params ////\n\tprivate _logger: null | LoggerBrowser = null\n\tprivate _restClient: TypeB24\n\tprivate _status: PullStatus\n\tprivate _context: string\n\tprivate readonly _guestMode: boolean\n\tprivate readonly _guestUserId: number\n\tprivate _userId: number\n\n\tprivate _configGetMethod: string\n\tprivate _getPublicListMethod: string\n\n\tprivate _siteId: string\n\tprivate _enabled: boolean\n\n\tprivate _unloading: boolean = false\n\tprivate _starting: boolean = false\n\tprivate _debug: boolean = false\n\tprivate _connectionAttempt: number = 0\n\tprivate _connectionType: ConnectionType = ConnectionType.WebSocket\n\tprivate _reconnectTimeout: null | number = null\n\tprivate _restartTimeout: null | number = null\n\tprivate _restoreWebSocketTimeout: null | number = null\n\n\tprivate _skipStorageInit: boolean\n\tprivate _skipCheckRevision: boolean\n\n\tprivate _subscribers: Record<string, any> = {}\n\tprivate _watchTagsQueue: Map<string, boolean> = new Map()\n\tprivate _watchUpdateInterval: number = 1_740_000\n\tprivate _watchForceUpdateInterval: number = 5_000\n\tprivate _configTimestamp: number = 0\n\tprivate _session: TypePullClientSession = {\n\t\tmid: null,\n\t\ttag: null,\n\t\ttime: null,\n\t\thistory: {},\n\t\tlastMessageIds: [],\n\t\tmessageCount: 0,\n\t}\n\n\tprivate _connectors: Record<ConnectionType, null | TypeConnector> = {\n\t\t[ConnectionType.Undefined]: null,\n\t\t[ConnectionType.WebSocket]: null,\n\t\t[ConnectionType.LongPolling]: null,\n\t}\n\n\tprivate _isSecure: boolean\n\n\tprivate _config: null | TypePullClientConfig = null\n\n\tprivate _storage: null | TypeStorageManager = null\n\tprivate _sharedConfig: SharedConfig\n\tprivate _channelManager: ChannelManager\n\tprivate _jsonRpcAdapter: null | JsonRpc = null\n\n\t/**\n\t * @depricate\n\t */\n\t// private _notificationPopup: null = null\n\n\t// timers ////\n\tprivate _checkInterval: null | number = null\n\tprivate _offlineTimeout: null | number = null\n\tprivate _watchUpdateTimeout: null | number = null\n\n\tprivate _pingWaitTimeout: null | number = null\n\n\t// manual stop workaround ////\n\tprivate _isManualDisconnect: boolean = false\n\n\tprivate _loggingEnabled: boolean = false\n\n\t// bound event handlers ////\n\tprivate _onPingTimeoutHandler: () => void\n\n\t// [userId] => array of callbacks\n\tprivate _userStatusCallbacks: Record<number, UserStatusCallback[]> = {}\n\n\tprivate _connectPromise: null | {\n\t\tresolve: (response: any) => void\n\t\treject: (error: string | RpcError | Error) => void\n\t} = null\n\n\tprivate _startingPromise: null | Promise<boolean> = null\n\t// endregion ////\n\n\t// region Init ////\n\t/**\n\t * @param params\n\t */\n\tconstructor(params: TypePullClientParams) {\n\t\tthis._restClient = params.b24\n\t\tthis._status = PullStatus.Offline\n\t\tthis._context = 'master'\n\n\t\t// region RestApplication ////\n\t\tif (params.restApplication) {\n\t\t\tif (typeof params.configGetMethod === 'undefined') {\n\t\t\t\tparams.configGetMethod = 'pull.application.config.get'\n\t\t\t}\n\n\t\t\tif (typeof params.skipCheckRevision === 'undefined') {\n\t\t\t\tparams.skipCheckRevision = true\n\t\t\t}\n\n\t\t\tif (Type.isStringFilled(params.restApplication)) {\n\t\t\t\tparams.siteId = params.restApplication\n\t\t\t}\n\n\t\t\tparams.serverEnabled = true\n\t\t}\n\t\t// endregion ////\n\n\t\t// region Params ////\n\t\tthis._guestMode = params.guestMode\n\t\t\t? Text.toBoolean(params.guestMode)\n\t\t\t: false\n\n\t\tthis._guestUserId = params.guestUserId\n\t\t\t? Text.toInteger(params.guestUserId)\n\t\t\t: 0\n\n\t\tif (this._guestMode && this._guestUserId > 0) {\n\t\t\tthis._userId = this._guestUserId\n\t\t} else {\n\t\t\tthis._guestMode = false\n\t\t\tthis._userId = params.userId ? Text.toInteger(params.userId) : 0\n\t\t}\n\n\t\tthis._siteId = params.siteId ?? 'none'\n\n\t\t// eslint-disable-next-line\n\t\tthis._enabled = !Type.isUndefined(params.serverEnabled)\n\t\t\t? params.serverEnabled === true\n\t\t\t: true\n\n\t\t// eslint-disable-next-line\n\t\tthis._configGetMethod = !Type.isStringFilled(params.configGetMethod)\n\t\t\t? 'pull.config.get'\n\t\t\t: params.configGetMethod || ''\n\n\t\t// eslint-disable-next-line\n\t\tthis._getPublicListMethod = !Type.isStringFilled(params.getPublicListMethod)\n\t\t\t? 'pull.channel.public.list'\n\t\t\t: params.getPublicListMethod || ''\n\n\t\tthis._skipStorageInit = params.skipStorageInit === true\n\t\tthis._skipCheckRevision = params.skipCheckRevision === true\n\n\t\tif (!Type.isUndefined(params.configTimestamp)) {\n\t\t\tthis._configTimestamp = Text.toInteger(params.configTimestamp)\n\t\t}\n\t\t// endregion ////\n\n\t\tthis._isSecure = document?.location.href.indexOf('https') === 0\n\n\t\tif (this._userId && !this._skipStorageInit) {\n\t\t\tthis._storage = new StorageManager({\n\t\t\t\tuserId: this._userId,\n\t\t\t\tsiteId: this._siteId,\n\t\t\t} as StorageManagerParams)\n\t\t}\n\n\t\tthis._sharedConfig = new SharedConfig({\n\t\t\tonWebSocketBlockChanged: this.onWebSocketBlockChanged.bind(this),\n\t\t\tstorage: this._storage,\n\t\t} as SharedConfigParams)\n\n\t\tthis._channelManager = new ChannelManager({\n\t\t\tb24: this._restClient,\n\t\t\tgetPublicListMethod: this._getPublicListMethod,\n\t\t} as TypeChannelManagerParams)\n\n\t\tthis._loggingEnabled = this._sharedConfig.isLoggingEnabled()\n\n\t\t// bound event handlers ////\n\t\tthis._onPingTimeoutHandler = this.onPingTimeout.bind(this)\n\t}\n\n\tsetLogger(logger: LoggerBrowser): void {\n\t\tthis._logger = logger\n\t\tthis._jsonRpcAdapter?.setLogger(this.getLogger())\n\t\tthis._storage?.setLogger(this.getLogger())\n\t\tthis._sharedConfig.setLogger(this.getLogger())\n\t\tthis._channelManager.setLogger(this.getLogger())\n\n\t\tthis._connectors.webSocket?.setLogger(this.getLogger())\n\t\tthis._connectors.longPolling?.setLogger(this.getLogger())\n\t}\n\n\tgetLogger(): LoggerBrowser {\n\t\tif (null === this._logger) {\n\t\t\tthis._logger = LoggerBrowser.build(`NullLogger`)\n\n\t\t\tthis._logger.setConfig({\n\t\t\t\t[LoggerType.desktop]: false,\n\t\t\t\t[LoggerType.log]: false,\n\t\t\t\t[LoggerType.info]: false,\n\t\t\t\t[LoggerType.warn]: false,\n\t\t\t\t[LoggerType.error]: true,\n\t\t\t\t[LoggerType.trace]: false,\n\t\t\t})\n\t\t}\n\n\t\treturn this._logger\n\t}\n\n\tdestroy(): void {\n\t\tthis.stop(CloseReasons.NORMAL_CLOSURE, 'manual stop')\n\n\t\tthis.onBeforeUnload()\n\t}\n\n\tprivate init(): void {\n\t\tthis._connectors.webSocket = new WebSocketConnector({\n\t\t\tparent: this,\n\t\t\tonOpen: this.onWebSocketOpen.bind(this),\n\t\t\tonMessage: this.onIncomingMessage.bind(this),\n\t\t\tonDisconnect: this.onWebSocketDisconnect.bind(this),\n\t\t\tonError: this.onWebSocketError.bind(this),\n\t\t})\n\n\t\tthis._connectors.longPolling = new LongPollingConnector({\n\t\t\tparent: this,\n\t\t\tonOpen: this.onLongPollingOpen.bind(this),\n\t\t\tonMessage: this.onIncomingMessage.bind(this),\n\t\t\tonDisconnect: this.onLongPollingDisconnect.bind(this),\n\t\t\tonError: this.onLongPollingError.bind(this),\n\t\t})\n\n\t\tthis._connectionType = this.isWebSocketAllowed()\n\t\t\t? ConnectionType.WebSocket\n\t\t\t: ConnectionType.LongPolling\n\n\t\twindow.addEventListener('beforeunload', this.onBeforeUnload.bind(this))\n\t\twindow.addEventListener('offline', this.onOffline.bind(this))\n\t\twindow.addEventListener('online', this.onOnline.bind(this))\n\n\t\t/**\n\t\t * @memo Not use under Node.js\n\t\t */\n\t\t/*/\n\t\tif (BX && BX.addCustomEvent)\n\t\t{\n\t\t\tBX.addCustomEvent('BXLinkOpened', this.connect.bind(this))\n\t\t}\n\n\t\tif (BX && BX.desktop)\n\t\t{\n\t\t\tBX.addCustomEvent('onDesktopReload', () => {\n\t\t\t\tthis._session.mid = null\n\t\t\t\tthis._session.tag = null\n\t\t\t\tthis._session.time = null\n\t\t\t})\n\n\t\t\tBX.desktop.addCustomEvent('BXLoginSuccess', () => this.restart(1_000, 'desktop login'))\n\t\t}\n\t\t//*/\n\n\t\tthis._jsonRpcAdapter = new JsonRpc({\n\t\t\tconnector: this._connectors.webSocket,\n\t\t\thandlers: {\n\t\t\t\t'incoming.message': this.handleRpcIncomingMessage.bind(this),\n\t\t\t},\n\t\t})\n\t}\n\t// endregion ////\n\n\t// region Get-Set ////\n\tget connector(): null | TypeConnector {\n\t\treturn this._connectors[this._connectionType]\n\t}\n\n\tget status(): PullStatus {\n\t\treturn this._status\n\t}\n\n\t/**\n\t * @param status\n\t */\n\tset status(status: PullStatus) {\n\t\tif (this._status === status) {\n\t\t\treturn\n\t\t}\n\n\t\tthis._status = status\n\t\tif (this._offlineTimeout) {\n\t\t\tclearTimeout(this._offlineTimeout)\n\t\t\tthis._offlineTimeout = null\n\t\t}\n\n\t\tif (status === PullStatus.Offline) {\n\t\t\tthis.sendPullStatusDelayed(status, OFFLINE_STATUS_DELAY)\n\t\t} else {\n\t\t\tthis.sendPullStatus(status)\n\t\t}\n\t}\n\n\tget session(): TypePullClientSession {\n\t\treturn this._session\n\t}\n\t// endregion ////\n\n\t// region Public /////\n\t/**\n\t * Creates a subscription to incoming messages.\n\t *\n\t * @param {TypeSubscriptionOptions | TypeSubscriptionCommandHandler} params\n\t * @returns { () => void } - Unsubscribe callback function\n\t */\n\tpublic subscribe(\n\t\tparams: TypeSubscriptionOptions | TypeSubscriptionCommandHandler\n\t): () => void {\n\t\tif (!Type.isPlainObject(params)) {\n\t\t\treturn this.attachCommandHandler(params as TypeSubscriptionCommandHandler)\n\t\t}\n\n\t\tparams = params as TypeSubscriptionOptions\n\n\t\tparams.type = params.type || SubscriptionType.Server\n\t\tparams.command = params.command || null\n\n\t\tif (\n\t\t\tparams.type == SubscriptionType.Server ||\n\t\t\tparams.type == SubscriptionType.Client\n\t\t) {\n\t\t\tif (typeof params.moduleId === 'undefined') {\n\t\t\t\tthrow new TypeError(\n\t\t\t\t\t`${Text.getDateForLog()}: Pull.subscribe: parameter moduleId is not specified`\n\t\t\t\t)\n\t\t\t}\n\n\t\t\tif (typeof this._subscribers[params.type] === 'undefined') {\n\t\t\t\tthis._subscribers[params.type] = {}\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\ttypeof this._subscribers[params.type][params.moduleId] === 'undefined'\n\t\t\t) {\n\t\t\t\tthis._subscribers[params.type][params.moduleId] = {\n\t\t\t\t\tcallbacks: [],\n\t\t\t\t\tcommands: {},\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (params.command) {\n\t\t\t\tif (\n\t\t\t\t\ttypeof this._subscribers[params.type][params.moduleId]['commands'][\n\t\t\t\t\t\tparams.command\n\t\t\t\t\t] === 'undefined'\n\t\t\t\t) {\n\t\t\t\t\tthis._subscribers[params.type][params.moduleId]['commands'][\n\t\t\t\t\t\tparams.command\n\t\t\t\t\t] = []\n\t\t\t\t}\n\n\t\t\t\tthis._subscribers[params.type][params.moduleId]['commands'][\n\t\t\t\t\tparams.command\n\t\t\t\t].push(params.callback)\n\n\t\t\t\treturn () => {\n\t\t\t\t\tif (\n\t\t\t\t\t\ttypeof params.type === 'undefined' ||\n\t\t\t\t\t\ttypeof params.moduleId === 'undefined' ||\n\t\t\t\t\t\ttypeof params.command === 'undefined' ||\n\t\t\t\t\t\tnull === params.command\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._subscribers[params.type][params.moduleId]['commands'][\n\t\t\t\t\t\tparams.command\n\t\t\t\t\t] = this._subscribers[params.type][params.moduleId]['commands'][\n\t\t\t\t\t\tparams.command\n\t\t\t\t\t].filter((element: any) => {\n\t\t\t\t\t\treturn element !== params.callback\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis._subscribers[params.type][params.moduleId]['callbacks'].push(\n\t\t\t\t\tparams.callback\n\t\t\t\t)\n\n\t\t\t\treturn () => {\n\t\t\t\t\tif (\n\t\t\t\t\t\ttypeof params.type === 'undefined' ||\n\t\t\t\t\t\ttypeof params.moduleId === 'undefined'\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._subscribers[params.type][params.moduleId]['callbacks'] =\n\t\t\t\t\t\tthis._subscribers[params.type][params.moduleId]['callbacks'].filter(\n\t\t\t\t\t\t\t(element: any) => {\n\t\t\t\t\t\t\t\treturn element !== params.callback\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif (typeof this._subscribers[params.type] === 'undefined') {\n\t\t\t\tthis._subscribers[params.type] = []\n\t\t\t}\n\n\t\t\tthis._subscribers[params.type].push(params.callback)\n\n\t\t\treturn () => {\n\t\t\t\tif (typeof params.type === 'undefined') {\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\tthis._subscribers[params.type] = this._subscribers[params.type].filter(\n\t\t\t\t\t(element: any) => {\n\t\t\t\t\t\treturn element !== params.callback\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @param {TypeSubscriptionCommandHandler} handler\n\t * @returns {() => void} - Unsubscribe callback function\n\t */\n\tprivate attachCommandHandler(\n\t\thandler: TypeSubscriptionCommandHandler\n\t): () => void {\n\t\tif (\n\t\t\ttypeof handler.getModuleId !== 'function' ||\n\t\t\ttypeof handler.getModuleId() !== 'string'\n\t\t) {\n\t\t\tthis.getLogger().error(\n\t\t\t\t`${Text.getDateForLog()}: Pull.attachCommandHandler: result of handler.getModuleId() is not a string.`\n\t\t\t)\n\t\t\treturn () => {}\n\t\t}\n\n\t\tlet type = SubscriptionType.Server\n\t\tif (typeof handler.getSubscriptionType === 'function') {\n\t\t\ttype = handler.getSubscriptionType()\n\t\t}\n\n\t\treturn this.subscribe({\n\t\t\ttype: type,\n\t\t\tmoduleId: handler.getModuleId(),\n\t\t\tcallback: (data: TypePullMessage) => {\n\t\t\t\tlet method = null\n\n\t\t\t\tif (typeof handler.getMap === 'function') {\n\t\t\t\t\tconst mapping = handler.getMap()\n\t\t\t\t\tif (mapping && typeof mapping === 'object') {\n\t\t\t\t\t\tconst rowMapping = mapping[data.command]\n\t\t\t\t\t\tif (typeof rowMapping === 'function') {\n\t\t\t\t\t\t\tmethod = rowMapping.bind(handler)\n\t\t\t\t\t\t} else if (\n\t\t\t\t\t\t\ttypeof rowMapping === 'string' &&\n\t\t\t\t\t\t\ttypeof handler[rowMapping] === 'function'\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tmethod = handler[rowMapping].bind(handler)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n\t\t\t\t * handler.handleSomeCommandName: CommandHandlerFunction\n\t\t\t\t */\n\t\t\t\tif (!method) {\n\t\t\t\t\tconst methodName = `handle${Text.capitalize(data.command)}`\n\t\t\t\t\tif (typeof handler[methodName] === 'function') {\n\t\t\t\t\t\tmethod = handler[methodName].bind(handler)\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (method) {\n\t\t\t\t\tif (this._debug && this._context !== 'master') {\n\t\t\t\t\t\tthis.getLogger().warn(\n\t\t\t\t\t\t\t`${Text.getDateForLog()}: Pull.attachCommandHandler: result of handler.getModuleId() is not a string`,\n\t\t\t\t\t\t\tdata\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\n\t\t\t\t\tmethod(data.params, data.extra, data.command)\n\t\t\t\t}\n\t\t\t},\n\t\t})\n\t}\n\n\t/**\n\t * @param config\n\t */\n\tpublic async start(\n\t\tconfig:\n\t\t\t| null\n\t\t\t| (TypePullClientConfig & {\n\t\t\t\t\tskipReconnectToLastSession?: boolean\n\t\t\t  }) = null\n\t): Promise<boolean> {\n\t\tlet allowConfigCaching = true\n\n\t\tif (this.isConnected()) {\n\t\t\treturn Promise.resolve(true)\n\t\t}\n\n\t\tif (this._starting && this._startingPromise) {\n\t\t\treturn this._startingPromise\n\t\t}\n\n\t\tif (!this._userId) {\n\t\t\tthrow new Error('Not set userId')\n\t\t}\n\n\t\tif (this._siteId === 'none') {\n\t\t\tthrow new Error('Not set siteId')\n\t\t}\n\n\t\tlet skipReconnectToLastSession = false\n\t\tif (!!config && Type.isPlainObject(config)) {\n\t\t\tif (typeof config?.skipReconnectToLastSession !== 'undefined') {\n\t\t\t\tskipReconnectToLastSession = config.skipReconnectToLastSession\n\t\t\t\tdelete config.skipReconnectToLastSession\n\t\t\t}\n\n\t\t\tthis._config = config\n\t\t\tallowConfigCaching = false\n\t\t}\n\n\t\tif (!this._enabled) {\n\t\t\treturn Promise.reject({\n\t\t\t\tex: {\n\t\t\t\t\terror: 'PULL_DISABLED',\n\t\t\t\t\terror_description: 'Push & Pull server is disabled',\n\t\t\t\t},\n\t\t\t})\n\t\t}\n\n\t\tconst now = Date.now()\n\t\tlet oldSession\n\t\tif (!skipReconnectToLastSession && this._storage) {\n\t\t\toldSession = this._storage.get(LS_SESSION, null)\n\t\t}\n\n\t\tif (\n\t\t\tType.isPlainObject(oldSession) &&\n\t\t\toldSession.hasOwnProperty('ttl') &&\n\t\t\toldSession.ttl >= now\n\t\t) {\n\t\t\tthis._session.mid = oldSession.mid\n\t\t}\n\n\t\tthis._starting = true\n\t\treturn (this._startingPromise = new Promise((resolve, reject) => {\n\t\t\tthis.loadConfig('client_start')\n\t\t\t\t.then((config) => {\n\t\t\t\t\tthis.setConfig(config, allowConfigCaching)\n\t\t\t\t\tthis.init()\n\t\t\t\t\tthis.updateWatch(true)\n\t\t\t\t\tthis.startCheckConfig()\n\n\t\t\t\t\tthis.connect().then(\n\t\t\t\t\t\t() => resolve(true),\n\t\t\t\t\t\t(error) => reject(error)\n\t\t\t\t\t)\n\t\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\t\tthis._starting = false\n\t\t\t\t\tthis.status = PullStatus.Offline\n\t\t\t\t\tthis.stopCheckConfig()\n\t\t\t\t\tthis.getLogger().error(\n\t\t\t\t\t\t`${Text.getDateForLog()}: Pull: could not read push-server config `,\n\t\t\t\t\t\terror\n\t\t\t\t\t)\n\t\t\t\t\treject(error)\n\t\t\t\t})\n\t\t}))\n\t}\n\n\t/**\n\t * @param disconnectCode\n\t * @param disconnectReason\n\t */\n\tpublic restart(\n\t\tdisconnectCode: number | CloseReasons = CloseReasons.NORMAL_CLOSURE,\n\t\tdisconnectReason: string = 'manual restart'\n\t): void {\n\t\tif (this._restartTimeout) {\n\t\t\tclearTimeout(this._restartTimeout)\n\t\t\tthis._restartTimeout = null\n\t\t}\n\n\t\tthis.getLogger().log(\n\t\t\t`${Text.getDateForLog()}: Pull: restarting with code ${disconnectCode}`\n\t\t)\n\n\t\tthis.disconnect(disconnectCode, disconnectReason)\n\n\t\tif (this._storage) {\n\t\t\tthis._storage.remove(LsKeys.PullConfig)\n\t\t}\n\n\t\tthis._config = null\n\n\t\tconst loadConfigReason = `${disconnectCode}_${disconnectReason.replaceAll(' ', '_')}`\n\t\tthis.loadConfig(loadConfigReason).then(\n\t\t\t(config) => {\n\t\t\t\tthis.setConfig(config, true)\n\t\t\t\tthis.updateWatch()\n\t\t\t\tthis.startCheckConfig()\n\t\t\t\tthis.connect().catch((error) => {\n\t\t\t\t\tthis.getLogger().error(error)\n\t\t\t\t})\n\t\t\t},\n\t\t\t(error) => {\n\t\t\t\tthis.getLogger().error(\n\t\t\t\t\t`${Text.getDateForLog()}: Pull: could not read push-server config `,\n\t\t\t\t\terror\n\t\t\t\t)\n\n\t\t\t\tthis.status = PullStatus.Offline\n\t\t\t\tif (this._reconnectTimeout) {\n\t\t\t\t\tclearTimeout(this._reconnectTimeout)\n\t\t\t\t\tthis._reconnectTimeout = null\n\t\t\t\t}\n\n\t\t\t\tif (error?.status == 401 || error?.status == 403) {\n\t\t\t\t\tthis.stopCheckConfig()\n\t\t\t\t\tthis.onCustomEvent('onPullError', ['AUTHORIZE_ERROR'])\n\t\t\t\t}\n\t\t\t}\n\t\t)\n\t}\n\n\tpublic stop(\n\t\tdisconnectCode: number | CloseReasons = CloseReasons.NORMAL_CLOSURE,\n\t\tdisconnectReason: string = 'manual stop'\n\t): void {\n\t\tthis.disconnect(disconnectCode, disconnectReason)\n\n\t\tthis.stopCheckConfig()\n\t}\n\n\tpublic reconnect(\n\t\tdisconnectCode: number | CloseReasons,\n\t\tdisconnectReason: string,\n\t\tdelay: number = 1\n\t): void {\n\t\tthis.disconnect(disconnectCode, disconnectReason)\n\n\t\tthis.scheduleReconnect(delay)\n\t}\n\n\t/**\n\t * @param lastMessageId\n\t */\n\tpublic setLastMessageId(lastMessageId: string): void {\n\t\tthis._session.mid = lastMessageId\n\t}\n\n\t/**\n\t * Send a single message to the specified users.\n\t *\n\t * @param users User ids of the message receivers.\n\t * @param moduleId Name of the module to receive a message,\n\t * @param command Command name.\n\t * @param {object} params Command parameters.\n\t * @param [expiry] Message expiry time in seconds.\n\t * @return {Promise}\n\t */\n\tpublic async sendMessage(\n\t\tusers: number[],\n\t\tmoduleId: string,\n\t\tcommand: string,\n\t\tparams: any,\n\t\texpiry?: number\n\t): Promise<any> {\n\t\tconst message = {\n\t\t\tuserList: users,\n\t\t\tbody: {\n\t\t\t\tmodule_id: moduleId,\n\t\t\t\tcommand: command,\n\t\t\t\tparams: params,\n\t\t\t},\n\t\t\texpiry: expiry,\n\t\t}\n\n\t\tif (this.isJsonRpc()) {\n\t\t\treturn this._jsonRpcAdapter?.executeOutgoingRpcCommand(\n\t\t\t\tRpcMethod.Publish,\n\t\t\t\tmessage\n\t\t\t)\n\t\t} else {\n\t\t\treturn this.sendMessageBatch([message])\n\t\t}\n\t}\n\n\t/**\n\t * Send a single message to the specified public channels.\n\t *\n\t * @param  publicChannels Public ids of the channels to receive a message.\n\t * @param moduleId Name of the module to receive a message,\n\t * @param command Command name.\n\t * @param {object} params Command parameters.\n\t * @param [expiry] Message expiry time in seconds.\n\t * @return {Promise}\n\t */\n\tpublic async sendMessageToChannels(\n\t\tpublicChannels: string[],\n\t\tmoduleId: string,\n\t\tcommand: string,\n\t\tparams: any,\n\t\texpiry?: number\n\t): Promise<any> {\n\t\tconst message = {\n\t\t\tchannelList: publicChannels,\n\t\t\tbody: {\n\t\t\t\tmodule_id: moduleId,\n\t\t\t\tcommand: command,\n\t\t\t\tparams: params,\n\t\t\t},\n\t\t\texpiry: expiry,\n\t\t}\n\n\t\tif (this.isJsonRpc()) {\n\t\t\treturn this._jsonRpcAdapter?.executeOutgoingRpcCommand(\n\t\t\t\tRpcMethod.Publish,\n\t\t\t\tmessage\n\t\t\t)\n\t\t} else {\n\t\t\treturn this.sendMessageBatch([message])\n\t\t}\n\t}\n\n\t/**\n\t * @param debugFlag\n\t */\n\tpublic capturePullEvent(debugFlag: boolean = true): void {\n\t\tthis._debug = debugFlag\n\t}\n\n\t/**\n\t * @param loggingFlag\n\t */\n\tpublic enableLogging(loggingFlag: boolean = true): void {\n\t\tthis._sharedConfig.setLoggingEnabled(loggingFlag)\n\t\tthis._loggingEnabled = loggingFlag\n\t}\n\n\t/**\n\t * Returns list channels that the connection is subscribed to.\n\t *\n\t * @returns {Promise}\n\t */\n\tpublic async listChannels(): Promise<any> {\n\t\treturn (\n\t\t\tthis._jsonRpcAdapter?.executeOutgoingRpcCommand(\n\t\t\t\tRpcMethod.ListChannels,\n\t\t\t\t{}\n\t\t\t) || Promise.reject(new Error('jsonRpcAdapter not init'))\n\t\t)\n\t}\n\n\t/**\n\t * Returns \"last seen\" time in seconds for the users.\n\t * Result format: Object{userId: int}\n\t * If the user is currently connected - will return 0.\n\t * If the user is offline - will return the diff between the current timestamp and the last seen timestamp in seconds.\n\t * If the user was never online - the record for the user will be missing from the result object.\n\t *\n\t * @param {integer[]} userList List of user ids.\n\t * @returns {Promise}\n\t */\n\tpublic async getUsersLastSeen(\n\t\tuserList: number[]\n\t): Promise<Record<number, number>> {\n\t\tif (\n\t\t\t!Type.isArray(userList) ||\n\t\t\t!userList.every((item) => typeof item === 'number')\n\t\t) {\n\t\t\tthrow new Error('userList must be an array of numbers')\n\t\t}\n\n\t\tconst result: Record<number, number> = {}\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis._jsonRpcAdapter\n\t\t\t\t?.executeOutgoingRpcCommand(RpcMethod.GetUsersLastSeen, {\n\t\t\t\t\tuserList: userList,\n\t\t\t\t})\n\t\t\t\t.then((response: any) => {\n\t\t\t\t\tconst unresolved = []\n\t\t\t\t\t// eslint-disable-next-line unicorn/no-for-loop\n\t\t\t\t\tfor (let i = 0; i < userList.length; i++) {\n\t\t\t\t\t\tif (!response.hasOwnProperty(userList[i])) {\n\t\t\t\t\t\t\tunresolved.push(userList[i])\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (unresolved.length === 0) {\n\t\t\t\t\t\treturn resolve(result)\n\t\t\t\t\t}\n\n\t\t\t\t\tconst params = {\n\t\t\t\t\t\tuserIds: unresolved,\n\t\t\t\t\t\tsendToQueueSever: true,\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._restClient\n\t\t\t\t\t\t.callMethod('pull.api.user.getLastSeen', params)\n\t\t\t\t\t\t.then((response: AjaxResult) => {\n\t\t\t\t\t\t\tconst data = (\n\t\t\t\t\t\t\t\tresponse.getData() as Payload<\n\t\t\t\t\t\t\t\t\tRecord<NumberString, NumberString>\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t).result\n\t\t\t\t\t\t\tfor (const userId in data) {\n\t\t\t\t\t\t\t\tresult[Number(userId)] = Number(data[userId])\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn resolve(result)\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch((error) => {\n\t\t\t\t\t\t\tthis.getLogger().error(error)\n\t\t\t\t\t\t\treject(error)\n\t\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\t\tthis.getLogger().error(error)\n\t\t\t\t\treject(error)\n\t\t\t\t})\n\t\t})\n\t}\n\n\t/**\n\t * Pings server.\n\t * In case of success promise will be resolved, otherwise - rejected.\n\t *\n\t * @param {number} timeout Request timeout in seconds\n\t * @returns {Promise}\n\t */\n\tpublic async ping(timeout: number = 5): Promise<void> {\n\t\treturn this._jsonRpcAdapter?.executeOutgoingRpcCommand(\n\t\t\tRpcMethod.Ping,\n\t\t\t{},\n\t\t\ttimeout\n\t\t)\n\t}\n\n\t/**\n\t * @param userId {number}\n\t * @param callback {UserStatusCallback}\n\t * @returns {Promise}\n\t */\n\tpublic async subscribeUserStatusChange(\n\t\tuserId: number,\n\t\tcallback: UserStatusCallback\n\t): Promise<void> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis._jsonRpcAdapter\n\t\t\t\t?.executeOutgoingRpcCommand(RpcMethod.SubscribeStatusChange, {\n\t\t\t\t\tuserId,\n\t\t\t\t})\n\t\t\t\t.then(() => {\n\t\t\t\t\tif (!this._userStatusCallbacks[userId]) {\n\t\t\t\t\t\tthis._userStatusCallbacks[userId] = []\n\t\t\t\t\t}\n\n\t\t\t\t\tif (Type.isFunction(callback)) {\n\t\t\t\t\t\tthis._userStatusCallbacks[userId].push(callback)\n\t\t\t\t\t}\n\n\t\t\t\t\treturn resolve()\n\t\t\t\t})\n\t\t\t\t.catch((error) => reject(error))\n\t\t})\n\t}\n\n\t/**\n\t * @param {number} userId\n\t * @param {UserStatusCallback} callback\n\t * @returns {Promise}\n\t */\n\tpublic async unsubscribeUserStatusChange(\n\t\tuserId: number,\n\t\tcallback: UserStatusCallback\n\t): Promise<void> {\n\t\tif (this._userStatusCallbacks[userId]) {\n\t\t\tthis._userStatusCallbacks[userId] = this._userStatusCallbacks[\n\t\t\t\tuserId\n\t\t\t].filter((cb) => cb !== callback)\n\n\t\t\tif (this._userStatusCallbacks[userId].length === 0) {\n\t\t\t\treturn this._jsonRpcAdapter?.executeOutgoingRpcCommand(\n\t\t\t\t\tRpcMethod.UnsubscribeStatusChange,\n\t\t\t\t\t{\n\t\t\t\t\t\tuserId,\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t}\n\t\t}\n\n\t\treturn Promise.resolve()\n\t}\n\t// endregion ////\n\n\t// region Get ////\n\tpublic getRevision(): number | null {\n\t\treturn this._config && this._config.api\n\t\t\t? this._config.api.revision_web\n\t\t\t: null\n\t}\n\n\tpublic getServerVersion(): number {\n\t\treturn this._config && this._config.server ? this._config.server.version : 0\n\t}\n\n\tpublic getServerMode(): string | null {\n\t\treturn this._config && this._config.server ? this._config.server.mode : null\n\t}\n\n\tpublic getConfig(): null | TypePullClientConfig {\n\t\treturn this._config\n\t}\n\n\tpublic getDebugInfo(): any {\n\t\tif (!JSON || !JSON.stringify) {\n\t\t\treturn {}\n\t\t}\n\n\t\tlet configDump\n\t\tif (this._config && this._config.channels) {\n\t\t\tconfigDump = {\n\t\t\t\tChannelID: this._config.channels.private?.id || 'n/a',\n\t\t\t\tChannelDie: this._config.channels.private?.end || 'n/a',\n\t\t\t\tChannelDieShared: this._config.channels.shared?.end || 'n/a',\n\t\t\t}\n\t\t} else {\n\t\t\tconfigDump = {\n\t\t\t\tConfigError: 'config is not loaded',\n\t\t\t}\n\t\t}\n\n\t\tlet websocketMode = '-'\n\t\tif (\n\t\t\tthis._connectors.webSocket &&\n\t\t\t(this._connectors.webSocket as WebSocketConnector)?.socket\n\t\t) {\n\t\t\tif (this.isJsonRpc()) {\n\t\t\t\twebsocketMode = 'json-rpc'\n\t\t\t} else {\n\t\t\t\twebsocketMode =\n\t\t\t\t\t// eslint-disable-next-line unicorn/no-negated-condition\n\t\t\t\t\t(\n\t\t\t\t\t\tthis._connectors.webSocket as WebSocketConnector\n\t\t\t\t\t)?.socket?.url.search('binaryMode=true') != -1\n\t\t\t\t\t\t? 'protobuf'\n\t\t\t\t\t\t: 'text'\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tUserId: this._userId + (this._userId > 0 ? '' : '(guest)'),\n\t\t\t'Guest userId':\n\t\t\t\tthis._guestMode && this._guestUserId !== 0 ? this._guestUserId : '-',\n\t\t\t'Browser online': navigator.onLine ? 'Y' : 'N',\n\t\t\tConnect: this.isConnected() ? 'Y' : 'N',\n\t\t\t'Server type': this.isSharedMode() ? 'cloud' : 'local',\n\t\t\t'WebSocket supported': this.isWebSocketSupported() ? 'Y' : 'N',\n\t\t\t'WebSocket connected':\n\t\t\t\tthis._connectors.webSocket && this._connectors.webSocket.connected\n\t\t\t\t\t? 'Y'\n\t\t\t\t\t: 'N',\n\t\t\t'WebSocket mode': websocketMode,\n\n\t\t\t'Try connect': this._reconnectTimeout ? 'Y' : 'N',\n\t\t\t'Try number': this._connectionAttempt,\n\n\t\t\tPath: this.connector?.connectionPath || '-',\n\t\t\t...configDump,\n\n\t\t\t'Last message': this._session.mid || '-',\n\t\t\t'Session history': this._session.history,\n\t\t\t'Watch tags': this._watchTagsQueue.entries(),\n\t\t}\n\t}\n\n\t/**\n\t * @process\n\t * @param connectionType\n\t */\n\tpublic getConnectionPath(connectionType: ConnectionType): string {\n\t\tlet path\n\t\tconst params: any = {}\n\n\t\tswitch (connectionType) {\n\t\t\tcase ConnectionType.WebSocket:\n\t\t\t\tpath = this._isSecure\n\t\t\t\t\t? this._config?.server.websocket_secure\n\t\t\t\t\t: this._config?.server.websocket\n\t\t\t\tbreak\n\t\t\tcase ConnectionType.LongPolling:\n\t\t\t\tpath = this._isSecure\n\t\t\t\t\t? this._config?.server.long_pooling_secure\n\t\t\t\t\t: this._config?.server.long_polling\n\t\t\t\tbreak\n\t\t\tdefault:\n\t\t\t\tthrow new Error(`Unknown connection type ${connectionType}`)\n\t\t}\n\n\t\tif (!Type.isStringFilled(path)) {\n\t\t\tthrow new Error(`Empty path`)\n\t\t}\n\n\t\tif (typeof this._config?.jwt === 'string' && this._config?.jwt !== '') {\n\t\t\tparams['token'] = this._config?.jwt\n\t\t} else {\n\t\t\tconst channels: string[] = []\n\n\t\t\tif (this._config?.channels?.private) {\n\t\t\t\tchannels.push(this._config.channels.private?.id || '')\n\t\t\t}\n\n\t\t\tif (this._config?.channels.private?.id) {\n\t\t\t\tchannels.push(this._config.channels.private.id)\n\t\t\t}\n\n\t\t\tif (this._config?.channels.shared?.id) {\n\t\t\t\tchannels.push(this._config.channels.shared.id)\n\t\t\t}\n\n\t\t\tif (channels.length === 0) {\n\t\t\t\tthrow new Error(`Empty channels`)\n\t\t\t}\n\n\t\t\tparams['CHANNEL_ID'] = channels.join('/')\n\t\t}\n\n\t\tif (this.isJsonRpc()) {\n\t\t\tparams.jsonRpc = 'true'\n\t\t} else if (this.isProtobufSupported()) {\n\t\t\tparams.binaryMode = 'true'\n\t\t}\n\n\t\tif (this.isSharedMode()) {\n\t\t\tif (!this._config?.clientId) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t'Push-server is in shared mode, but clientId is not set'\n\t\t\t\t)\n\t\t\t}\n\n\t\t\tparams.clientId = this._config.clientId\n\t\t}\n\t\tif (this._session.mid) {\n\t\t\tparams.mid = this._session.mid\n\t\t}\n\t\tif (this._session.tag) {\n\t\t\tparams.tag = this._session.tag\n\t\t}\n\t\tif (this._session.time) {\n\t\t\tparams.time = this._session.time\n\t\t}\n\t\tparams.revision = REVISION\n\n\t\treturn `${path}?${Text.buildQueryString(params)}`\n\t}\n\n\t/**\n\t * @process\n\t */\n\tpublic getPublicationPath(): string {\n\t\tconst path = this._isSecure\n\t\t\t? this._config?.server.publish_secure\n\t\t\t: this._config?.server.publish\n\n\t\tif (!path) {\n\t\t\treturn ''\n\t\t}\n\n\t\tconst channels: string[] = []\n\n\t\tif (this._config?.channels.private?.id) {\n\t\t\tchannels.push(this._config.channels.private.id)\n\t\t}\n\n\t\tif (this._config?.channels.shared?.id) {\n\t\t\tchannels.push(this._config.channels.shared.id)\n\t\t}\n\n\t\tconst params = {\n\t\t\tCHANNEL_ID: channels.join('/'),\n\t\t}\n\n\t\treturn path + '?' + Text.buildQueryString(params)\n\t}\n\t// endregion ////\n\n\t// region Is* ////\n\tpublic isConnected(): boolean {\n\t\treturn this.connector ? this.connector.connected : false\n\t}\n\n\tpublic isWebSocketSupported(): boolean {\n\t\treturn typeof window.WebSocket !== 'undefined'\n\t}\n\n\tpublic isWebSocketAllowed(): boolean {\n\t\tif (this._sharedConfig.isWebSocketBlocked()) {\n\t\t\treturn false\n\t\t}\n\n\t\treturn this.isWebSocketEnabled()\n\t}\n\n\tpublic isWebSocketEnabled(): boolean {\n\t\tif (!this.isWebSocketSupported()) {\n\t\t\treturn false\n\t\t}\n\n\t\tif (!this._config) {\n\t\t\treturn false\n\t\t}\n\n\t\tif (!this._config.server) {\n\t\t\treturn false\n\t\t}\n\n\t\treturn this._config.server.websocket_enabled\n\t}\n\n\tpublic isPublishingSupported(): boolean {\n\t\treturn this.getServerVersion() > 3\n\t}\n\n\tpublic isPublishingEnabled(): boolean {\n\t\tif (!this.isPublishingSupported()) {\n\t\t\treturn false\n\t\t}\n\n\t\treturn this._config?.server.publish_enabled === true\n\t}\n\n\tpublic isProtobufSupported(): boolean {\n\t\treturn this.getServerVersion() == 4 && !Browser.isIE()\n\t}\n\n\tpublic isJsonRpc(): boolean {\n\t\treturn this.getServerVersion() >= 5\n\t}\n\n\tpublic isSharedMode(): boolean {\n\t\treturn this.getServerMode() === ServerMode.Shared\n\t}\n\t// endregion ////\n\n\t// region Events ////\n\t/**\n\t * @param {TypePullClientEmitConfig} params\n\t * @returns {boolean}\n\t */\n\tprivate emit(params: TypePullClientEmitConfig): boolean {\n\t\tif (\n\t\t\tparams.type == SubscriptionType.Server ||\n\t\t\tparams.type == SubscriptionType.Client\n\t\t) {\n\t\t\tif (typeof this._subscribers[params.type] === 'undefined') {\n\t\t\t\tthis._subscribers[params.type] = {}\n\t\t\t}\n\n\t\t\tif (typeof params.moduleId === 'undefined') {\n\t\t\t\tthrow new TypeError(\n\t\t\t\t\t`${Text.getDateForLog()}: Pull.emit: parameter moduleId is not specified`\n\t\t\t\t)\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\ttypeof this._subscribers[params.type][params.moduleId] === 'undefined'\n\t\t\t) {\n\t\t\t\tthis._subscribers[params.type][params.moduleId] = {\n\t\t\t\t\tcallbacks: [],\n\t\t\t\t\tcommands: {},\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\tthis._subscribers[params.type][params.moduleId]['callbacks'].length > 0\n\t\t\t) {\n\t\t\t\t// eslint-disable-next-line unicorn/no-array-for-each\n\t\t\t\tthis._subscribers[params.type][params.moduleId]['callbacks'].forEach(\n\t\t\t\t\t(callback: CommandHandlerFunctionV1) => {\n\t\t\t\t\t\tcallback(params.data as Record<string, any>, {\n\t\t\t\t\t\t\ttype: params.type,\n\t\t\t\t\t\t\tmoduleId: params.moduleId,\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\t!(typeof params.data === 'undefined') &&\n\t\t\t\t!(typeof params.data['command'] === 'undefined') &&\n\t\t\t\tthis._subscribers[params.type][params.moduleId]['commands'][\n\t\t\t\t\tparams.data['command']\n\t\t\t\t] &&\n\t\t\t\tthis._subscribers[params.type][params.moduleId]['commands'][\n\t\t\t\t\tparams.data['command']\n\t\t\t\t].length > 0\n\t\t\t) {\n\t\t\t\tthis._subscribers[params.type][params.moduleId]['commands'][\n\t\t\t\t\tparams.data['command']\n\t\t\t\t\t// eslint-disable-next-line unicorn/no-array-for-each\n\t\t\t\t].forEach((callback: CommandHandlerFunctionV2) => {\n\t\t\t\t\tif (typeof params.data === 'undefined') {\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\n\t\t\t\t\tcallback(\n\t\t\t\t\t\tparams.data['params'],\n\t\t\t\t\t\tparams.data['extra'],\n\t\t\t\t\t\tparams.data['command'],\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: params.type,\n\t\t\t\t\t\t\tmoduleId: params.moduleId as string,\n\t\t\t\t\t\t}\n\t\t\t\t\t)\n\t\t\t\t})\n\t\t\t}\n\n\t\t\treturn true\n\t\t} else {\n\t\t\tif (typeof this._subscribers[params.type] === 'undefined') {\n\t\t\t\tthis._subscribers[params.type] = []\n\t\t\t}\n\n\t\t\tif (this._subscribers[params.type].length <= 0) {\n\t\t\t\treturn true\n\t\t\t}\n\n\t\t\t// eslint-disable-next-line unicorn/no-array-for-each\n\t\t\tthis._subscribers[params.type].forEach(\n\t\t\t\t(callback: CommandHandlerFunctionV1) => {\n\t\t\t\t\tcallback(params.data as Record<string, any>, {\n\t\t\t\t\t\ttype: params.type,\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t)\n\n\t\t\treturn true\n\t\t}\n\t}\n\n\t/**\n\t * @process\n\t *\n\t * @param message\n\t */\n\tprivate broadcastMessage(message: TypePullClientMessageBody): void {\n\t\tconst moduleId = (message.module_id = message.module_id.toLowerCase())\n\t\tconst command = message.command\n\n\t\tif (!message.extra) {\n\t\t\tmessage.extra = {}\n\t\t}\n\n\t\tif (message.extra.server_time_unix) {\n\t\t\tmessage.extra.server_time_ago =\n\t\t\t\t(Date.now() - message.extra.server_time_unix * 1000) / 1000 -\n\t\t\t\t(this._config?.server.timeShift || 0)\n\t\t\tmessage.extra.server_time_ago =\n\t\t\t\tmessage.extra.server_time_ago > 0 ? message.extra.server_time_ago : 0\n\t\t}\n\n\t\tthis.logMessage(message)\n\t\ttry {\n\t\t\tif (\n\t\t\t\tmessage.extra.sender &&\n\t\t\t\tmessage.extra.sender.type === SenderType.Client\n\t\t\t) {\n\t\t\t\tthis.onCustomEvent(\n\t\t\t\t\t'onPullClientEvent-' + moduleId,\n\t\t\t\t\t[command, message.params, message.extra],\n\t\t\t\t\ttrue\n\t\t\t\t)\n\t\t\t\tthis.onCustomEvent(\n\t\t\t\t\t'onPullClientEvent',\n\t\t\t\t\t[moduleId, command, message.params, message.extra],\n\t\t\t\t\ttrue\n\t\t\t\t)\n\n\t\t\t\tthis.emit({\n\t\t\t\t\ttype: SubscriptionType.Client,\n\t\t\t\t\tmoduleId: moduleId,\n\t\t\t\t\tdata: {\n\t\t\t\t\t\tcommand: command,\n\t\t\t\t\t\tparams: Type.clone(message.params),\n\t\t\t\t\t\textra: Type.clone(message.extra),\n\t\t\t\t\t},\n\t\t\t\t})\n\t\t\t} else if (moduleId === 'pull') {\n\t\t\t\tthis.handleInternalPullEvent(command, message)\n\t\t\t} else if (moduleId == 'online') {\n\t\t\t\tif ((message?.extra?.server_time_ago || 0) < 240) {\n\t\t\t\t\tthis.onCustomEvent(\n\t\t\t\t\t\t'onPullOnlineEvent',\n\t\t\t\t\t\t[command, message.params, message.extra],\n\t\t\t\t\t\ttrue\n\t\t\t\t\t)\n\n\t\t\t\t\tthis.emit({\n\t\t\t\t\t\ttype: SubscriptionType.Online,\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\tcommand: command,\n\t\t\t\t\t\t\tparams: Type.clone(message.params),\n\t\t\t\t\t\t\textra: Type.clone(message.extra),\n\t\t\t\t\t\t},\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tif (command === 'userStatusChange') {\n\t\t\t\t\tthis.emitUserStatusChange(\n\t\t\t\t\t\tmessage.params.user_id,\n\t\t\t\t\t\tmessage.params.online\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.onCustomEvent(\n\t\t\t\t\t'onPullEvent-' + moduleId,\n\t\t\t\t\t[command, message.params, message.extra],\n\t\t\t\t\ttrue\n\t\t\t\t)\n\t\t\t\tthis.onCustomEvent(\n\t\t\t\t\t'onPullEvent',\n\t\t\t\t\t[moduleId, command, message.params, message.extra],\n\t\t\t\t\ttrue\n\t\t\t\t)\n\n\t\t\t\tthis.emit({\n\t\t\t\t\ttype: SubscriptionType.Server,\n\t\t\t\t\tmoduleId: moduleId,\n\t\t\t\t\tdata: {\n\t\t\t\t\t\tcommand: command,\n\t\t\t\t\t\tparams: Type.clone(message.params),\n\t\t\t\t\t\textra: Type.clone(message.extra),\n\t\t\t\t\t},\n\t\t\t\t})\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tthis.getLogger().warn(\n\t\t\t\t'\\n========= PULL ERROR ===========\\n' +\n\t\t\t\t\t'Error type: broadcastMessages execute error\\n' +\n\t\t\t\t\t'Error event: ',\n\t\t\t\terror,\n\t\t\t\t'\\n' + 'Message: ',\n\t\t\t\tmessage,\n\t\t\t\t'\\n' + '================================\\n'\n\t\t\t)\n\t\t}\n\n\t\tif (message.extra && message.extra.revision_web) {\n\t\t\tthis.checkRevision(Text.toInteger(message.extra.revision_web))\n\t\t}\n\t}\n\n\t/**\n\t * @process\n\t *\n\t * @param messages\n\t */\n\tprivate broadcastMessages(messages: TypePullClientMessageBody[]): void {\n\t\tfor (const message of messages) {\n\t\t\tthis.broadcastMessage(message)\n\t\t}\n\t}\n\n\t// endregion ////\n\n\t// region sendMessage ////\n\t/**\n\t * Sends batch of messages to the multiple public channels.\n\t *\n\t * @param messageBatchList Array of messages to send.\n\t * @return void\n\t */\n\tprivate async sendMessageBatch(\n\t\tmessageBatchList: TypePullClientMessageBatch[]\n\t): Promise<any> {\n\t\tif (!this.isPublishingEnabled()) {\n\t\t\tthis.getLogger().error(\n\t\t\t\t`Client publishing is not supported or is disabled`\n\t\t\t)\n\t\t\treturn Promise.reject(\n\t\t\t\tnew Error(`Client publishing is not supported or is disabled`)\n\t\t\t)\n\t\t}\n\n\t\tif (this.isJsonRpc()) {\n\t\t\tconst rpcRequest =\n\t\t\t\tthis._jsonRpcAdapter?.createPublishRequest(messageBatchList)\n\t\t\tthis.connector?.send(JSON.stringify(rpcRequest))\n\n\t\t\treturn Promise.resolve(true)\n\t\t} else {\n\t\t\tconst userIds: Record<number, number> = {}\n\n\t\t\tfor (const messageBatch of messageBatchList) {\n\t\t\t\tif (typeof messageBatch.userList !== 'undefined') {\n\t\t\t\t\tfor (const user of messageBatch.userList) {\n\t\t\t\t\t\tconst userId = Number(user)\n\t\t\t\t\t\tuserIds[userId] = userId\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._channelManager\n\t\t\t\t?.getPublicIds(Object.values(userIds))\n\t\t\t\t.then((publicIds) => {\n\t\t\t\t\tconst response = this.connector?.send(\n\t\t\t\t\t\tthis.encodeMessageBatch(messageBatchList, publicIds)\n\t\t\t\t\t)\n\n\t\t\t\t\treturn Promise.resolve(response)\n\t\t\t\t})\n\t\t}\n\t}\n\n\t/**\n\t * @param messageBatchList\n\t * @param publicIds\n\t */\n\tprivate encodeMessageBatch(\n\t\tmessageBatchList: TypePullClientMessageBatch[],\n\t\tpublicIds: Record<number, TypeChanel>\n\t): ArrayBuffer | string {\n\t\tconst messages: any[] = []\n\n\t\t// eslint-disable-next-line unicorn/no-array-for-each\n\t\tmessageBatchList.forEach((messageFields) => {\n\t\t\tconst messageBody = messageFields.body\n\n\t\t\tlet receivers: any[] = []\n\t\t\tif (messageFields.userList) {\n\t\t\t\treceivers = this.createMessageReceivers(\n\t\t\t\t\tmessageFields.userList,\n\t\t\t\t\tpublicIds\n\t\t\t\t)\n\t\t\t}\n\n\t\t\tif (messageFields.channelList) {\n\t\t\t\tif (!Type.isArray(messageFields.channelList)) {\n\t\t\t\t\tthrow new TypeError('messageFields.publicChannels must be an array')\n\t\t\t\t}\n\n\t\t\t\t// eslint-disable-next-line unicorn/no-array-for-each\n\t\t\t\tmessageFields.channelList.forEach((publicChannel) => {\n\t\t\t\t\tlet publicId\n\t\t\t\t\tlet signature\n\t\t\t\t\tif (\n\t\t\t\t\t\ttypeof publicChannel === 'string' &&\n\t\t\t\t\t\tpublicChannel.includes('.')\n\t\t\t\t\t) {\n\t\t\t\t\t\tconst fields = publicChannel.toString().split('.')\n\t\t\t\t\t\tpublicId = fields[0]\n\t\t\t\t\t\tsignature = fields[1]\n\t\t\t\t\t} else if (\n\t\t\t\t\t\ttypeof publicChannel === 'object' &&\n\t\t\t\t\t\t'publicId' in publicChannel &&\n\t\t\t\t\t\t'signature' in publicChannel\n\t\t\t\t\t) {\n\t\t\t\t\t\tpublicId = publicChannel?.publicId\n\t\t\t\t\t\tsignature = publicChannel?.signature\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t\"Public channel MUST be either a string, formatted like \\\"{publicId}.{signature}\\\" or an object with fields 'publicId' and 'signature'\"\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\n\t\t\t\t\treceivers.push(\n\t\t\t\t\t\tReceiver.create({\n\t\t\t\t\t\t\tid: this.encodeId(publicId),\n\t\t\t\t\t\t\tsignature: this.encodeId(signature),\n\t\t\t\t\t\t})\n\t\t\t\t\t)\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tconst message = IncomingMessage.create({\n\t\t\t\treceivers: receivers,\n\t\t\t\tbody: JSON.stringify(messageBody),\n\t\t\t\texpiry: messageFields.expiry || 0,\n\t\t\t})\n\t\t\tmessages.push(message)\n\t\t})\n\n\t\tconst requestBatch = RequestBatch.create({\n\t\t\trequests: [\n\t\t\t\t{\n\t\t\t\t\tincomingMessages: {\n\t\t\t\t\t\tmessages: messages,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t],\n\t\t})\n\n\t\treturn RequestBatch.encode(requestBatch).finish()\n\t}\n\n\t/**\n\t * @memo fix return type\n\t * @param users\n\t * @param publicIds\n\t */\n\tprivate createMessageReceivers(\n\t\tusers: number[],\n\t\tpublicIds: Record<number, TypeChanel>\n\t): any[] {\n\t\tconst result = []\n\n\t\tfor (const userId of users) {\n\t\t\tif (!publicIds[userId] || !publicIds[userId].publicId) {\n\t\t\t\tthrow new Error(`Could not determine public id for user ${userId}`)\n\t\t\t}\n\n\t\t\tresult.push(\n\t\t\t\tReceiver.create({\n\t\t\t\t\tid: this.encodeId(publicIds[userId].publicId),\n\t\t\t\t\tsignature: this.encodeId(publicIds[userId].signature),\n\t\t\t\t})\n\t\t\t)\n\t\t}\n\n\t\treturn result\n\t}\n\t// endregion ////\n\n\t// region _userStatusCallbacks ////\n\t/**\n\t * @param userId\n\t * @param isOnline\n\t */\n\tprivate emitUserStatusChange(userId: number, isOnline: boolean): void {\n\t\tif (this._userStatusCallbacks[userId]) {\n\t\t\tfor (const callback of this._userStatusCallbacks[userId]) {\n\t\t\t\tcallback({\n\t\t\t\t\tuserId,\n\t\t\t\t\tisOnline,\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate restoreUserStatusSubscription(): void {\n\t\tfor (const userId in this._userStatusCallbacks) {\n\t\t\tif (\n\t\t\t\tthis._userStatusCallbacks.hasOwnProperty(userId) &&\n\t\t\t\tthis._userStatusCallbacks[userId].length > 0\n\t\t\t) {\n\t\t\t\tthis._jsonRpcAdapter?.executeOutgoingRpcCommand(\n\t\t\t\t\tRpcMethod.SubscribeStatusChange,\n\t\t\t\t\t{\n\t\t\t\t\t\tuserId: userId,\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t}\n\t\t}\n\t}\n\t// endregion ////\n\n\t// region Config ////\n\t/**\n\t * @param logTag\n\t */\n\tprivate async loadConfig(logTag?: string): Promise<TypePullClientConfig> {\n\t\tif (!this._config) {\n\t\t\tthis._config = Object.assign({}, EmptyConfig)\n\n\t\t\tlet config: any\n\t\t\tif (this._storage) {\n\t\t\t\tconfig = this._storage.get(LsKeys.PullConfig, null)\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\tthis.isConfigActual(config) &&\n\t\t\t\tthis.checkRevision(config.api.revision_web)\n\t\t\t) {\n\t\t\t\treturn Promise.resolve(config)\n\t\t\t} else if (this._storage) {\n\t\t\t\tthis._storage.remove(LsKeys.PullConfig)\n\t\t\t}\n\t\t} else if (\n\t\t\tthis.isConfigActual(this._config) &&\n\t\t\tthis.checkRevision(this._config.api.revision_web)\n\t\t) {\n\t\t\treturn Promise.resolve(this._config)\n\t\t} else {\n\t\t\tthis._config = Object.assign({}, EmptyConfig)\n\t\t}\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis._restClient.getHttpClient().setLogTag(logTag)\n\n\t\t\tthis._restClient\n\t\t\t\t.callMethod(this._configGetMethod, {\n\t\t\t\t\tCACHE: 'N',\n\t\t\t\t})\n\t\t\t\t.then((response) => {\n\t\t\t\t\tconst data = response.getData().result\n\n\t\t\t\t\tconst timeShift = Math.floor(\n\t\t\t\t\t\t(Date.now() - new Date(data.serverTime).getTime()) / 1000\n\t\t\t\t\t)\n\n\t\t\t\t\tdelete data.serverTime\n\n\t\t\t\t\tconst config = Object.assign({}, data)\n\t\t\t\t\tconfig.server.timeShift = timeShift\n\n\t\t\t\t\tresolve(config)\n\t\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\t\tif (\n\t\t\t\t\t\terror?.answerError?.error === 'AUTHORIZE_ERROR' ||\n\t\t\t\t\t\terror?.answerError?.error === 'WRONG_AUTH_TYPE'\n\t\t\t\t\t) {\n\t\t\t\t\t\t;(error as AjaxError).status = 403\n\t\t\t\t\t}\n\n\t\t\t\t\treject(error)\n\t\t\t\t})\n\t\t\t\t.finally(() => {\n\t\t\t\t\tthis._restClient.getHttpClient().clearLogTag()\n\t\t\t\t})\n\t\t})\n\t}\n\n\t/**\n\t * @param config\n\t */\n\tprivate isConfigActual(config: any): boolean {\n\t\tif (!Type.isPlainObject(config)) {\n\t\t\treturn false\n\t\t}\n\n\t\tif (Number(config.server.config_timestamp) !== this._configTimestamp) {\n\t\t\treturn false\n\t\t}\n\n\t\tconst now = new Date()\n\n\t\tif (\n\t\t\tType.isNumber(config.exp) &&\n\t\t\tconfig.exp > 0 &&\n\t\t\tconfig.exp < now.getTime() / 1000\n\t\t) {\n\t\t\treturn false\n\t\t}\n\n\t\tconst channelCount = Object.keys(config.channels).length\n\t\tif (channelCount === 0) {\n\t\t\treturn false\n\t\t}\n\n\t\tfor (const channelType in config.channels) {\n\t\t\tif (!config.channels.hasOwnProperty(channelType)) {\n\t\t\t\tcontinue\n\t\t\t}\n\n\t\t\tconst channel = config.channels[channelType]\n\t\t\tconst channelEnd = new Date(channel.end)\n\n\t\t\tif (channelEnd < now) {\n\t\t\t\treturn false\n\t\t\t}\n\t\t}\n\n\t\treturn true\n\t}\n\n\tprivate startCheckConfig(): void {\n\t\tif (this._checkInterval) {\n\t\t\tclearInterval(this._checkInterval)\n\t\t\tthis._checkInterval = null\n\t\t}\n\n\t\tthis._checkInterval = setInterval(\n\t\t\tthis.checkConfig.bind(this),\n\t\t\tCONFIG_CHECK_INTERVAL\n\t\t)\n\t}\n\n\tprivate stopCheckConfig(): void {\n\t\tif (this._checkInterval) {\n\t\t\tclearInterval(this._checkInterval)\n\t\t}\n\t\tthis._checkInterval = null\n\t}\n\n\tprivate checkConfig(): boolean {\n\t\tif (this.isConfigActual(this._config)) {\n\t\t\tif (!this.checkRevision(Text.toInteger(this._config?.api.revision_web))) {\n\t\t\t\treturn false\n\t\t\t}\n\t\t} else {\n\t\t\tthis.logToConsole('Stale config detected. Restarting')\n\t\t\tthis.restart(CloseReasons.CONFIG_EXPIRED, 'config expired')\n\t\t}\n\n\t\treturn true\n\t}\n\n\t/**\n\t * @param config\n\t * @param allowCaching\n\t */\n\tprivate setConfig(config: TypePullClientConfig, allowCaching: boolean): void {\n\t\tfor (const key in config) {\n\t\t\tif (config.hasOwnProperty(key) && this._config?.hasOwnProperty(key)) {\n\t\t\t\t// @ts-ignore\n\t\t\t\tthis._config[key] = config[key]\n\t\t\t}\n\t\t}\n\n\t\tif (config.publicChannels) {\n\t\t\tthis.setPublicIds(Object.values(config.publicChannels))\n\t\t}\n\n\t\tthis._configTimestamp = Number(config.server.config_timestamp)\n\n\t\tif (this._storage && allowCaching) {\n\t\t\ttry {\n\t\t\t\tthis._storage.set(LsKeys.PullConfig, config)\n\t\t\t} catch (error) {\n\t\t\t\t/**\n\t\t\t\t * @memotry to delete the key \"history\"\n\t\t\t\t * (landing site change history, see http://jabber.bx/view.php?id=136492)\n\t\t\t\t */\n\t\t\t\tif (localStorage && localStorage.removeItem) {\n\t\t\t\t\tlocalStorage.removeItem('history')\n\t\t\t\t}\n\t\t\t\tthis.getLogger().error(\n\t\t\t\t\t`${Text.getDateForLog()}: Pull: Could not cache config in local storage. Error: `,\n\t\t\t\t\terror\n\t\t\t\t)\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate setPublicIds(publicIds: TypePublicIdDescriptor[]): void {\n\t\tthis._channelManager.setPublicIds(publicIds)\n\t}\n\n\t/**\n\t * @param serverRevision\n\t */\n\tprivate checkRevision(serverRevision: number): boolean {\n\t\tif (this._skipCheckRevision) {\n\t\t\treturn true\n\t\t}\n\n\t\tif (serverRevision > 0 && serverRevision !== REVISION) {\n\t\t\tthis._enabled = false\n\t\t\tthis.showNotification('PULL_OLD_REVISION')\n\t\t\tthis.disconnect(CloseReasons.NORMAL_CLOSURE, 'check_revision')\n\n\t\t\tthis.onCustomEvent('onPullRevisionUp', [serverRevision, REVISION])\n\n\t\t\tthis.emit({\n\t\t\t\ttype: SubscriptionType.Revision,\n\t\t\t\tdata: {\n\t\t\t\t\tserver: serverRevision,\n\t\t\t\t\tclient: REVISION,\n\t\t\t\t},\n\t\t\t})\n\n\t\t\tthis.logToConsole(\n\t\t\t\t`Pull revision changed from ${REVISION} to ${serverRevision}. Reload required`\n\t\t\t)\n\n\t\t\treturn false\n\t\t}\n\n\t\treturn true\n\t}\n\t// endregion ////\n\n\t// region Connect|ReConnect|DisConnect ////\n\tprivate disconnect(disconnectCode: number, disconnectReason: string): void {\n\t\tif (this.connector) {\n\t\t\tthis._isManualDisconnect = true\n\t\t\tthis.connector.disconnect(disconnectCode, disconnectReason)\n\t\t}\n\t}\n\n\tprivate restoreWebSocketConnection(): void {\n\t\tif (this._connectionType === ConnectionType.WebSocket) {\n\t\t\treturn\n\t\t}\n\n\t\tthis._connectors.webSocket?.connect()\n\t}\n\n\t/**\n\t * @param connectionDelay\n\t */\n\tprivate scheduleReconnect(connectionDelay: number = 0): void {\n\t\tif (!this._enabled) {\n\t\t\treturn\n\t\t}\n\n\t\tif (!connectionDelay) {\n\t\t\t/**\n\t\t\t * never fallback to long polling\n\t\t\t * @memo remove long polling support later\n\t\t\t */\n\t\t\t/*/\n\t\t\tif(\n\t\t\t\tthis._connectionAttempt > 3\n\t\t\t\t&& this._connectionType === ConnectionType.WebSocket\n\t\t\t\t&& !this._sharedConfig.isLongPollingBlocked()\n\t\t\t)\n\t\t\t{\n\t\t\t\t// Websocket seems to be closed by network filter. Trying to fall back to long polling ////\n\t\t\t\tthis._sharedConfig.setWebSocketBlocked(true)\n\t\t\t\tthis._connectionType = ConnectionType.LongPolling\n\t\t\t\tthis._connectionAttempt = 1\n\t\t\t\tconnectionDelay = 1\n\t\t\t}\n\t\t\telse\n\t\t\t//*/\n\t\t\t{\n\t\t\t\tconnectionDelay = this.getConnectionAttemptDelay(\n\t\t\t\t\tthis._connectionAttempt\n\t\t\t\t)\n\t\t\t}\n\t\t}\n\t\tif (this._reconnectTimeout) {\n\t\t\tclearTimeout(this._reconnectTimeout)\n\t\t\tthis._reconnectTimeout = null\n\t\t}\n\n\t\tthis.logToConsole(\n\t\t\t`Pull: scheduling reconnection in ${connectionDelay} seconds; attempt # ${this._connectionAttempt}`\n\t\t)\n\n\t\tthis._reconnectTimeout = setTimeout(() => {\n\t\t\tthis.connect().catch((error) => {\n\t\t\t\tthis.getLogger().error(error)\n\t\t\t})\n\t\t}, connectionDelay * 1_000)\n\t}\n\n\tprivate scheduleRestoreWebSocketConnection(): void {\n\t\tthis.logToConsole(\n\t\t\t`Pull: scheduling restoration of websocket connection in ${RESTORE_WEBSOCKET_TIMEOUT} seconds`\n\t\t)\n\n\t\tif (this._restoreWebSocketTimeout) {\n\t\t\treturn\n\t\t}\n\n\t\tthis._restoreWebSocketTimeout = setTimeout(() => {\n\t\t\tthis._restoreWebSocketTimeout = 0\n\t\t\tthis.restoreWebSocketConnection()\n\t\t}, RESTORE_WEBSOCKET_TIMEOUT * 1_000)\n\t}\n\n\t/**\n\t * @returns {Promise}\n\t */\n\tprivate async connect(): Promise<void> {\n\t\tif (!this._enabled) {\n\t\t\treturn Promise.reject()\n\t\t}\n\t\tif (this.connector?.connected) {\n\t\t\treturn Promise.resolve()\n\t\t}\n\n\t\tif (this._reconnectTimeout) {\n\t\t\tclearTimeout(this._reconnectTimeout)\n\t\t\tthis._reconnectTimeout = null\n\t\t}\n\n\t\tthis.status = PullStatus.Connecting\n\t\tthis._connectionAttempt++\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis._connectPromise = {\n\t\t\t\tresolve,\n\t\t\t\treject,\n\t\t\t}\n\t\t\tthis.connector?.connect()\n\t\t})\n\t}\n\n\t/**\n\t * @param disconnectCode\n\t * @param disconnectReason\n\t * @param restartDelay\n\t */\n\tprivate scheduleRestart(\n\t\tdisconnectCode: number,\n\t\tdisconnectReason: string,\n\t\trestartDelay: number = 0\n\t): void {\n\t\tif (this._restartTimeout) {\n\t\t\tclearTimeout(this._restartTimeout)\n\t\t\tthis._restartTimeout = null\n\t\t}\n\n\t\tif (restartDelay < 1) {\n\t\t\trestartDelay = Math.ceil(Math.random() * 30) + 5\n\t\t}\n\n\t\tthis._restartTimeout = setTimeout(\n\t\t\t() => this.restart(disconnectCode, disconnectReason),\n\t\t\trestartDelay * 1_000\n\t\t)\n\t}\n\t// endregion ////\n\n\t// region Handlers ////\n\t/**\n\t * @param messageFields\n\t */\n\tprivate handleRpcIncomingMessage(messageFields: any): object {\n\t\tthis._session.mid = messageFields.mid\n\t\tconst body = messageFields.body\n\n\t\tif (!messageFields.body.extra) {\n\t\t\tbody.extra = {}\n\t\t}\n\t\tbody.extra.sender = messageFields.sender\n\n\t\tif (\n\t\t\t'user_params' in messageFields &&\n\t\t\tType.isPlainObject(messageFields.user_params)\n\t\t) {\n\t\t\tObject.assign(body.params, messageFields.user_params)\n\t\t}\n\n\t\tif (\n\t\t\t'dictionary' in messageFields &&\n\t\t\tType.isPlainObject(messageFields.dictionary)\n\t\t) {\n\t\t\tObject.assign(body.params, messageFields.dictionary)\n\t\t}\n\n\t\tif (this.checkDuplicate(messageFields.mid)) {\n\t\t\tthis.addMessageToStat(body)\n\t\t\tthis.trimDuplicates()\n\t\t\tthis.broadcastMessage(body)\n\t\t}\n\n\t\tthis.connector?.send(`mack:${messageFields.mid}`)\n\n\t\treturn {}\n\t}\n\n\t/**\n\t * @param events\n\t */\n\tprivate handleIncomingEvents(events: TypeSessionEvent[]): void {\n\t\tconst messages: TypePullClientMessageBody[] = []\n\t\tif (events.length === 0) {\n\t\t\tthis._session.mid = null\n\t\t\treturn\n\t\t}\n\n\t\tfor (const event of events) {\n\t\t\tthis.updateSessionFromEvent(event)\n\n\t\t\tif (event.mid && !this.checkDuplicate(event.mid)) {\n\t\t\t\tcontinue\n\t\t\t}\n\n\t\t\tthis.addMessageToStat(\n\t\t\t\tevent.text as { module_id: string; command: string }\n\t\t\t)\n\t\t\tmessages.push(event.text as TypePullClientMessageBody)\n\t\t}\n\t\tthis.trimDuplicates()\n\t\tthis.broadcastMessages(messages)\n\t}\n\n\t/**\n\t * @param event\n\t */\n\tprivate updateSessionFromEvent(event: TypeSessionEvent): void {\n\t\tthis._session.mid = event.mid || null\n\t\tthis._session.tag = event.tag || null\n\t\tthis._session.time = event.time || null\n\t}\n\n\t/**\n\t * @process\n\t *\n\t * @param command\n\t * @param message\n\t */\n\tprivate handleInternalPullEvent(\n\t\tcommand: string,\n\t\tmessage: TypePullClientMessageBody\n\t): void {\n\t\tswitch (command.toUpperCase()) {\n\t\t\tcase SystemCommands.CHANNEL_EXPIRE: {\n\t\t\t\tif (message.params.action === 'reconnect') {\n\t\t\t\t\tconst typeChanel = message.params?.channel.type as string\n\t\t\t\t\tif (typeChanel === 'private' && this._config?.channels?.private) {\n\t\t\t\t\t\tthis._config.channels.private = message.params.new_channel\n\t\t\t\t\t\tthis.logToConsole(\n\t\t\t\t\t\t\t`Pull: new config for ${message.params.channel.type} channel set: ${this._config.channels.private}`\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t\tif (typeChanel === 'shared' && this._config?.channels?.shared) {\n\t\t\t\t\t\tthis._config.channels.shared = message.params.new_channel\n\t\t\t\t\t\tthis.logToConsole(\n\t\t\t\t\t\t\t`Pull: new config for ${message.params.channel.type} channel set: ${this._config.channels.shared}`\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.reconnect(CloseReasons.CONFIG_REPLACED, 'config was replaced')\n\t\t\t\t} else {\n\t\t\t\t\tthis.restart(CloseReasons.CHANNEL_EXPIRED, 'channel expired received')\n\t\t\t\t}\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tcase SystemCommands.CONFIG_EXPIRE: {\n\t\t\t\tthis.restart(CloseReasons.CONFIG_EXPIRED, 'config expired received')\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tcase SystemCommands.SERVER_RESTART: {\n\t\t\t\tthis.reconnect(\n\t\t\t\t\tCloseReasons.SERVER_RESTARTED,\n\t\t\t\t\t'server was restarted',\n\t\t\t\t\t15\n\t\t\t\t)\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tdefault:\n\t\t}\n\t}\n\n\t// region Handlers For Message ////\n\t/**\n\t * @param response\n\t */\n\tprivate onIncomingMessage(response: string | ArrayBuffer): void {\n\t\tif (this.isJsonRpc()) {\n\t\t\tif (response === JSON_RPC_PING) {\n\t\t\t\tthis.onJsonRpcPing()\n\t\t\t} else {\n\t\t\t\tthis._jsonRpcAdapter?.parseJsonRpcMessage(response as string)\n\t\t\t}\n\t\t} else {\n\t\t\tconst events = this.extractMessages(response)\n\t\t\tthis.handleIncomingEvents(events)\n\t\t}\n\t}\n\n\t// region onLongPolling ////\n\tprivate onLongPollingOpen(): void {\n\t\tthis._unloading = false\n\t\tthis._starting = false\n\t\tthis._connectionAttempt = 0\n\t\tthis._isManualDisconnect = false\n\t\tthis.status = PullStatus.Online\n\n\t\tthis.logToConsole('Pull: Long polling connection with push-server opened')\n\t\tif (this.isWebSocketEnabled()) {\n\t\t\tthis.scheduleRestoreWebSocketConnection()\n\t\t}\n\t\tif (this._connectPromise) {\n\t\t\tthis._connectPromise.resolve({})\n\t\t}\n\t}\n\n\t/**\n\t * @param response\n\t */\n\tprivate onLongPollingDisconnect(response: {\n\t\tcode: number\n\t\treason: string\n\t}): void {\n\t\tif (this._connectionType === ConnectionType.LongPolling) {\n\t\t\tthis.status = PullStatus.Offline\n\t\t}\n\n\t\tthis.logToConsole(\n\t\t\t`Pull: Long polling connection with push-server closed. Code: ${response.code}, reason: ${response.reason}`\n\t\t)\n\t\tif (!this._isManualDisconnect) {\n\t\t\tthis.scheduleReconnect()\n\t\t}\n\t\tthis._isManualDisconnect = false\n\t\tthis.clearPingWaitTimeout()\n\t}\n\n\t/**\n\t * @param error\n\t */\n\tprivate onLongPollingError(error: Error): void {\n\t\tthis._starting = false\n\t\tif (this._connectionType === ConnectionType.LongPolling) {\n\t\t\tthis.status = PullStatus.Offline\n\t\t}\n\n\t\tthis.getLogger().error(\n\t\t\t`${Text.getDateForLog()}: Pull: Long polling connection error `,\n\t\t\terror\n\t\t)\n\n\t\tthis.scheduleReconnect()\n\t\tif (this._connectPromise) {\n\t\t\tthis._connectPromise.reject(error)\n\t\t}\n\n\t\tthis.clearPingWaitTimeout()\n\t}\n\t// endregion ////\n\n\t// region onWebSocket ////\n\t/**\n\t * @param response\n\t */\n\tprivate onWebSocketBlockChanged(response: {\n\t\tisWebSocketBlocked: boolean\n\t}): void {\n\t\tconst isWebSocketBlocked = response.isWebSocketBlocked\n\n\t\tif (\n\t\t\tisWebSocketBlocked &&\n\t\t\tthis._connectionType === ConnectionType.WebSocket &&\n\t\t\t!this.isConnected()\n\t\t) {\n\t\t\tif (this._reconnectTimeout) {\n\t\t\t\tclearTimeout(this._reconnectTimeout)\n\t\t\t\tthis._reconnectTimeout = null\n\t\t\t}\n\n\t\t\tthis._connectionAttempt = 0\n\t\t\tthis._connectionType = ConnectionType.LongPolling\n\t\t\tthis.scheduleReconnect(1)\n\t\t} else if (\n\t\t\t!isWebSocketBlocked &&\n\t\t\tthis._connectionType === ConnectionType.LongPolling\n\t\t) {\n\t\t\tif (this._reconnectTimeout) {\n\t\t\t\tclearTimeout(this._reconnectTimeout)\n\t\t\t\tthis._reconnectTimeout = null\n\t\t\t}\n\t\t\tif (this._restoreWebSocketTimeout) {\n\t\t\t\tclearTimeout(this._restoreWebSocketTimeout)\n\t\t\t\tthis._restoreWebSocketTimeout = null\n\t\t\t}\n\n\t\t\tthis._connectionAttempt = 0\n\t\t\tthis._connectionType = ConnectionType.WebSocket\n\t\t\tthis.scheduleReconnect(1)\n\t\t}\n\t}\n\n\tprivate onWebSocketOpen(): void {\n\t\tthis._unloading = false\n\t\tthis._starting = false\n\t\tthis._connectionAttempt = 0\n\t\tthis._isManualDisconnect = false\n\t\tthis.status = PullStatus.Online\n\t\tthis._sharedConfig.setWebSocketBlocked(false)\n\n\t\t// to prevent fallback to long polling in case of networking problems\n\t\tthis._sharedConfig.setLongPollingBlocked(true)\n\n\t\tif (this._connectionType == ConnectionType.LongPolling) {\n\t\t\tthis._connectionType = ConnectionType.WebSocket\n\t\t\tthis._connectors.longPolling?.disconnect(\n\t\t\t\tCloseReasons.CONFIG_REPLACED,\n\t\t\t\t'Fire at onWebSocketOpen'\n\t\t\t)\n\t\t}\n\n\t\tif (this._restoreWebSocketTimeout) {\n\t\t\tclearTimeout(this._restoreWebSocketTimeout)\n\t\t\tthis._restoreWebSocketTimeout = null\n\t\t}\n\t\tthis.logToConsole('Pull: Websocket connection with push-server opened')\n\t\tif (this._connectPromise) {\n\t\t\tthis._connectPromise.resolve({})\n\t\t}\n\n\t\tthis.restoreUserStatusSubscription()\n\t}\n\n\t/**\n\t * @param response\n\t */\n\tprivate onWebSocketDisconnect(response: {\n\t\tcode: number\n\t\treason: string\n\t}): void {\n\t\tif (this._connectionType === ConnectionType.WebSocket) {\n\t\t\tthis.status = PullStatus.Offline\n\t\t}\n\n\t\tthis.logToConsole(\n\t\t\t`Pull: Websocket connection with push-server closed. Code: ${response.code}, reason: ${response.reason}`,\n\t\t\ttrue\n\t\t)\n\t\tif (!this._isManualDisconnect) {\n\t\t\tif (response.code == CloseReasons.WRONG_CHANNEL_ID) {\n\t\t\t\tthis.scheduleRestart(\n\t\t\t\t\tCloseReasons.WRONG_CHANNEL_ID,\n\t\t\t\t\t'wrong channel signature'\n\t\t\t\t)\n\t\t\t} else {\n\t\t\t\tthis.scheduleReconnect()\n\t\t\t}\n\t\t}\n\n\t\t// to prevent fallback to long polling in case of networking problems\n\t\tthis._sharedConfig.setLongPollingBlocked(true)\n\t\tthis._isManualDisconnect = false\n\n\t\tthis.clearPingWaitTimeout()\n\t}\n\n\t/**\n\t * @param error\n\t */\n\tprivate onWebSocketError(error: Error): void {\n\t\tthis._starting = false\n\t\tif (this._connectionType === ConnectionType.WebSocket) {\n\t\t\tthis.status = PullStatus.Offline\n\t\t}\n\n\t\tthis.getLogger().error(\n\t\t\t`${Text.getDateForLog()}: Pull: WebSocket connection error `,\n\t\t\terror\n\t\t)\n\t\tthis.scheduleReconnect()\n\t\tif (this._connectPromise) {\n\t\t\tthis._connectPromise.reject(error)\n\t\t}\n\n\t\tthis.clearPingWaitTimeout()\n\t}\n\t// endregion ////\n\t// endregion ////\n\n\t// endregion ////\n\n\t// region extractMessages ////\n\t/**\n\t * @param pullEvent\n\t */\n\tprivate extractMessages(pullEvent: string | ArrayBuffer): TypeSessionEvent[] {\n\t\tif (pullEvent instanceof ArrayBuffer) {\n\t\t\treturn this.extractProtobufMessages(pullEvent)\n\t\t} else if (Type.isStringFilled(pullEvent)) {\n\t\t\treturn this.extractPlainTextMessages(pullEvent)\n\t\t}\n\n\t\tthrow new Error('Error pullEvent type')\n\t}\n\n\t/**\n\t * @param pullEvent\n\t */\n\tprivate extractProtobufMessages(pullEvent: ArrayBuffer): TypeSessionEvent[] {\n\t\tconst result = []\n\n\t\ttry {\n\t\t\tconst responseBatch = ResponseBatch.decode(new Uint8Array(pullEvent))\n\t\t\tfor (let i = 0; i < responseBatch.responses.length; i++) {\n\t\t\t\tconst response = responseBatch.responses[i]\n\t\t\t\tif (response.command !== 'outgoingMessages') {\n\t\t\t\t\tcontinue\n\t\t\t\t}\n\n\t\t\t\tconst messages = response.outgoingMessages.messages\n\t\t\t\tfor (const message of messages) {\n\t\t\t\t\tlet messageFields\n\t\t\t\t\ttry {\n\t\t\t\t\t\tmessageFields = JSON.parse(message.body)\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tthis.getLogger().error(\n\t\t\t\t\t\t\t`${Text.getDateForLog()}: Pull: Could not parse message body `,\n\t\t\t\t\t\t\terror\n\t\t\t\t\t\t)\n\t\t\t\t\t\tcontinue\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!messageFields.extra) {\n\t\t\t\t\t\tmessageFields.extra = {}\n\t\t\t\t\t}\n\t\t\t\t\tmessageFields.extra.sender = {\n\t\t\t\t\t\ttype: message.sender.type,\n\t\t\t\t\t}\n\n\t\t\t\t\tif (message.sender.id instanceof Uint8Array) {\n\t\t\t\t\t\tmessageFields.extra.sender.id = this.decodeId(message.sender.id)\n\t\t\t\t\t}\n\n\t\t\t\t\tconst compatibleMessage = {\n\t\t\t\t\t\tmid: this.decodeId(message.id),\n\t\t\t\t\t\ttext: messageFields,\n\t\t\t\t\t}\n\n\t\t\t\t\tresult.push(compatibleMessage)\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tthis.getLogger().error(\n\t\t\t\t`${Text.getDateForLog()}: Pull: Could not parse message `,\n\t\t\t\terror\n\t\t\t)\n\t\t}\n\n\t\treturn result\n\t}\n\n\t/**\n\t * @param pullEvent\n\t */\n\tprivate extractPlainTextMessages(pullEvent: string): TypeSessionEvent[] {\n\t\tconst result = []\n\n\t\tconst dataArray = pullEvent.match(/#!NGINXNMS!#(.*?)#!NGINXNME!#/gm)\n\t\tif (dataArray === null) {\n\t\t\tconst text =\n\t\t\t\t'\\n========= PULL ERROR ===========\\n' +\n\t\t\t\t'Error type: parseResponse error parsing message\\n' +\n\t\t\t\t'\\n' +\n\t\t\t\t`Data string: ${pullEvent}` +\n\t\t\t\t'\\n' +\n\t\t\t\t'================================\\n\\n'\n\t\t\tthis.getLogger().warn(text)\n\n\t\t\treturn []\n\t\t}\n\t\tfor (let i = 0; i < dataArray.length; i++) {\n\t\t\t// eslint-disable-next-line unicorn/prefer-string-slice\n\t\t\tdataArray[i] = dataArray[i].substring(12, dataArray[i].length - 12)\n\t\t\tif (dataArray[i].length <= 0) {\n\t\t\t\tcontinue\n\t\t\t}\n\n\t\t\tlet data\n\t\t\ttry {\n\t\t\t\tdata = JSON.parse(dataArray[i])\n\t\t\t} catch {\n\t\t\t\tcontinue\n\t\t\t}\n\n\t\t\tresult.push(data as TypeSessionEvent)\n\t\t}\n\n\t\treturn result\n\t}\n\n\t/**\n\t * Converts message id from byte[] to string\n\t * @param {Uint8Array} encodedId\n\t * @return {string}\n\t */\n\tprivate decodeId(encodedId: Uint8Array): string {\n\t\tlet result = ''\n\t\tfor (const element_ of encodedId) {\n\t\t\tconst hexByte = element_.toString(16)\n\t\t\tif (hexByte.length === 1) {\n\t\t\t\tresult += '0'\n\t\t\t}\n\t\t\tresult += hexByte\n\t\t}\n\n\t\treturn result\n\t}\n\n\t/**\n\t * Converts message id from hex-encoded string to byte[]\n\t * @param {string} id Hex-encoded string.\n\t * @return {Uint8Array}\n\t */\n\tprivate encodeId(id: string): Uint8Array {\n\t\tif (!id) {\n\t\t\treturn new Uint8Array()\n\t\t}\n\n\t\tconst result = []\n\t\tfor (let i = 0; i < id.length; i += 2) {\n\t\t\tresult.push(Number.parseInt(id.slice(i, i + 2), 16))\n\t\t}\n\n\t\treturn new Uint8Array(result)\n\t}\n\t// endregion ////\n\n\t// region Events.Status /////\n\tprivate onOffline(): void {\n\t\tthis.disconnect(CloseReasons.NORMAL_CLOSURE, 'offline')\n\t}\n\n\tprivate onOnline(): void {\n\t\tthis.connect().catch((error) => {\n\t\t\tthis.getLogger().error(error)\n\t\t})\n\t}\n\n\tprivate onBeforeUnload(): void {\n\t\tthis._unloading = true\n\n\t\tconst session = Type.clone(this.session)\n\t\tsession.ttl = Date.now() + LS_SESSION_CACHE_TIME * 1000\n\t\tif (this._storage) {\n\t\t\ttry {\n\t\t\t\tthis._storage.set(\n\t\t\t\t\tLS_SESSION,\n\t\t\t\t\tJSON.stringify(session)\n\t\t\t\t\t//LS_SESSION_CACHE_TIME\n\t\t\t\t)\n\t\t\t} catch (error) {\n\t\t\t\tthis.getLogger().error(\n\t\t\t\t\t`${Text.getDateForLog()}: Pull: Could not save session info in local storage. Error: `,\n\t\t\t\t\terror\n\t\t\t\t)\n\t\t\t}\n\t\t}\n\n\t\tthis.scheduleReconnect(15)\n\t}\n\t// endregion ////\n\n\t// region PullStatus ////\n\t/**\n\t * @param status\n\t * @param delay\n\t */\n\tprivate sendPullStatusDelayed(status: PullStatus, delay: number): void {\n\t\tif (this._offlineTimeout) {\n\t\t\tclearTimeout(this._offlineTimeout)\n\t\t\tthis._offlineTimeout = null\n\t\t}\n\n\t\tthis._offlineTimeout = setTimeout(() => {\n\t\t\tthis._offlineTimeout = null\n\t\t\tthis.sendPullStatus(status)\n\t\t}, delay)\n\t}\n\n\t/**\n\t * @param status\n\t */\n\tprivate sendPullStatus(status: PullStatus): void {\n\t\tif (this._unloading) {\n\t\t\treturn\n\t\t}\n\n\t\tthis.onCustomEvent('onPullStatus', [status])\n\n\t\tthis.emit({\n\t\t\ttype: SubscriptionType.Status,\n\t\t\tdata: {\n\t\t\t\tstatus: status,\n\t\t\t},\n\t\t})\n\t}\n\t// endregion ////\n\n\t// region _watchTagsQueue ////\n\t/**\n\t * @memo if private?\n\t * @param tagId\n\t * @param force\n\t */\n\tprivate extendWatch(tagId: string, force: boolean = false): void {\n\t\tif (this._watchTagsQueue.get(tagId)) {\n\t\t\treturn\n\t\t}\n\n\t\tthis._watchTagsQueue.set(tagId, true)\n\t\tif (force) {\n\t\t\tthis.updateWatch(force)\n\t\t}\n\t}\n\n\t/**\n\t * @param force\n\t */\n\tprivate updateWatch(force: boolean = false): void {\n\t\tif (this._watchUpdateTimeout) {\n\t\t\tclearTimeout(this._watchUpdateTimeout)\n\t\t\tthis._watchUpdateTimeout = null\n\t\t}\n\n\t\tthis._watchUpdateTimeout = setTimeout(\n\t\t\t() => {\n\t\t\t\t/**\n\t\t\t\t * @memo test this\n\t\t\t\t */\n\t\t\t\tconst watchTags = [...this._watchTagsQueue.keys()]\n\n\t\t\t\tif (watchTags.length > 0) {\n\t\t\t\t\tthis._restClient\n\t\t\t\t\t\t.callMethod('pull.watch.extend', {\n\t\t\t\t\t\t\ttags: watchTags,\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.then((response: AjaxResult) => {\n\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t * @memo test this\n\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\tconst updatedTags: NumberString[] = (\n\t\t\t\t\t\t\t\tresponse.getData() as Payload<NumberString[]>\n\t\t\t\t\t\t\t).result\n\n\t\t\t\t\t\t\tfor (const tagId of updatedTags) {\n\t\t\t\t\t\t\t\tthis.clearWatch(tagId)\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tthis.updateWatch()\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch(() => {\n\t\t\t\t\t\t\tthis.updateWatch()\n\t\t\t\t\t\t})\n\t\t\t\t} else {\n\t\t\t\t\tthis.updateWatch()\n\t\t\t\t}\n\t\t\t},\n\t\t\tforce ? this._watchForceUpdateInterval : this._watchUpdateInterval\n\t\t)\n\t}\n\n\t/**\n\t * @param tagId\n\t */\n\tprivate clearWatch(tagId: string): void {\n\t\tthis._watchTagsQueue.delete(tagId)\n\t}\n\t// endregion ////\n\n\t// region Ping ////\n\tprivate onJsonRpcPing(): void {\n\t\tthis.updatePingWaitTimeout()\n\t\tthis.connector?.send(JSON_RPC_PONG)\n\t}\n\n\tprivate updatePingWaitTimeout(): void {\n\t\tif (this._pingWaitTimeout) {\n\t\t\tclearTimeout(this._pingWaitTimeout)\n\t\t\tthis._pingWaitTimeout = null\n\t\t}\n\n\t\tthis._pingWaitTimeout = setTimeout(\n\t\t\tthis._onPingTimeoutHandler,\n\t\t\tPING_TIMEOUT * 2 * 1_000\n\t\t)\n\t}\n\n\tprivate clearPingWaitTimeout(): void {\n\t\tif (this._pingWaitTimeout) {\n\t\t\tclearTimeout(this._pingWaitTimeout)\n\t\t}\n\n\t\tthis._pingWaitTimeout = null\n\t}\n\n\tprivate onPingTimeout(): void {\n\t\tthis._pingWaitTimeout = null\n\t\tif (!this._enabled || !this.isConnected()) {\n\t\t\treturn\n\t\t}\n\n\t\tthis.getLogger().warn(\n\t\t\t`No pings are received in ${PING_TIMEOUT * 2} seconds. Reconnecting`\n\t\t)\n\t\tthis.disconnect(CloseReasons.STUCK, 'connection stuck')\n\n\t\tthis.scheduleReconnect()\n\t}\n\t// endregion ////\n\n\t// region Time ////\n\t/**\n\t * Returns reconnect delay in seconds\n\t *\n\t * @param attemptNumber\n\t * @return {number}\n\t */\n\tprivate getConnectionAttemptDelay(attemptNumber: number): number {\n\t\tlet result\n\t\tif (attemptNumber < 1) {\n\t\t\tresult = 0.5\n\t\t} else if (attemptNumber < 3) {\n\t\t\tresult = 15\n\t\t} else if (attemptNumber < 5) {\n\t\t\tresult = 45\n\t\t} else if (attemptNumber < 10) {\n\t\t\tresult = 600\n\t\t} else {\n\t\t\tresult = 3_600\n\t\t}\n\n\t\treturn result + result * Math.random() * 0.2\n\t}\n\t// endregion ////\n\n\t// region Tools ////\n\t/**\n\t * @param mid\n\t */\n\tprivate checkDuplicate(mid: string): boolean {\n\t\tif (this._session.lastMessageIds.includes(mid)) {\n\t\t\tthis.getLogger().warn(`Duplicate message ${mid} skipped`)\n\t\t\treturn false\n\t\t} else {\n\t\t\tthis._session.lastMessageIds.push(mid)\n\t\t\treturn true\n\t\t}\n\t}\n\n\tprivate trimDuplicates(): void {\n\t\tif (this._session.lastMessageIds.length > MAX_IDS_TO_STORE) {\n\t\t\tthis._session.lastMessageIds =\n\t\t\t\tthis._session.lastMessageIds.slice(-MAX_IDS_TO_STORE)\n\t\t}\n\t}\n\t// endregion ////\n\n\t// region Logging ////\n\t/**\n\t * @param message\n\t */\n\tprivate logMessage(message: TypePullClientMessageBody): void {\n\t\tif (!this._debug) {\n\t\t\treturn\n\t\t}\n\n\t\tif (\n\t\t\tmessage.extra?.sender &&\n\t\t\tmessage.extra.sender.type === SenderType.Client\n\t\t) {\n\t\t\tthis.getLogger().info(\n\t\t\t\t`onPullClientEvent-${message.module_id}`,\n\t\t\t\tmessage.command,\n\t\t\t\tmessage.params,\n\t\t\t\tmessage.extra\n\t\t\t)\n\t\t} else if (message.module_id == 'online') {\n\t\t\tthis.getLogger().info(\n\t\t\t\t`onPullOnlineEvent`,\n\t\t\t\tmessage.command,\n\t\t\t\tmessage.params,\n\t\t\t\tmessage.extra\n\t\t\t)\n\t\t} else {\n\t\t\tthis.getLogger().info(\n\t\t\t\t`onPullEvent`,\n\t\t\t\tmessage.module_id,\n\t\t\t\tmessage.command,\n\t\t\t\tmessage.params,\n\t\t\t\tmessage.extra\n\t\t\t)\n\t\t}\n\t}\n\n\t/**\n\t * @param message\n\t * @param force\n\t */\n\tprivate logToConsole(message: string, force: boolean = false): void {\n\t\tif (this._loggingEnabled || force) {\n\t\t\tthis.getLogger().log(`${Text.getDateForLog()}: ${message}`)\n\t\t}\n\t}\n\n\t/**\n\t * @param message\n\t */\n\tprivate addMessageToStat(message: {\n\t\tmodule_id: string\n\t\tcommand: string\n\t}): void {\n\t\tif (!this._session.history[message.module_id]) {\n\t\t\tthis._session.history[message.module_id] = {}\n\t\t}\n\t\tif (!this._session.history[message.module_id][message.command]) {\n\t\t\tthis.session.history[message.module_id][message.command] = 0\n\t\t}\n\n\t\tthis._session.history[message.module_id][message.command]++\n\n\t\tthis._session.messageCount++\n\t}\n\n\t/**\n\t * @param text\n\t */\n\tprivate showNotification(text: string): void {\n\t\tthis.getLogger().warn(text)\n\n\t\t/*/\n\t\tif(this._notificationPopup || typeof BX.PopupWindow === 'undefined')\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tthis._notificationPopup = new BX.PopupWindow('bx-notifier-popup-confirm', null, {\n\t\t\tzIndex: 200,\n\t\t\tautoHide: false,\n\t\t\tcloseByEsc: false,\n\t\t\toverlay: true,\n\t\t\tcontent: BX.create(\"div\", {\n\t\t\t\tprops: {className: \"bx-messenger-confirm\"},\n\t\t\t\thtml: text\n\t\t\t}),\n\t\t\tbuttons: [\n\t\t\t\tnew BX.PopupWindowButton({\n\t\t\t\t\ttext: BX.message('JS_CORE_WINDOW_CLOSE'),\n\t\t\t\t\tclassName: \"popup-window-button-decline\",\n\t\t\t\t\tevents: {\n\t\t\t\t\t\tclick: () => this._notificationPopup.close(),\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t],\n\t\t\tevents: {\n\t\t\t\tonPopupClose: () => this._notificationPopup.destroy(),\n\t\t\t\tonPopupDestroy: () => this._notificationPopup = null,\n\t\t\t}\n\t\t});\n\t\tthis._notificationPopup.show();\n\t\t//*/\n\t}\n\t// endregion ////\n\n\t// region onCustomEvent ////\n\t/**\n\t * @memo may be need to use onCustomEvent\n\t * @memo ? force\n\t */\n\tprivate onCustomEvent(\n\t\teventName: string,\n\t\tdata: any,\n\t\tforce: boolean = false\n\t): void {\n\t\tif (eventName || data || force) {\n\t\t\t/* empty */\n\t\t}\n\n\t\t/*/\n\t\tif (BX && BX.onCustomEvent)\n\t\t{\n\t\t\tBX.onCustomEvent(window, eventName, data, force)\n\t\t}\n\t\t//*/\n\t}\n\t// endregion ////\n\n\t// region deprecated /////\n\t/**\n\t * @deprecated\n\t */\n\t/*/\n\tgetRestClientOptions()\n\t{\n\t\tlet result = {};\n\n\t\tif (this.guestMode && this.guestUserId !== 0)\n\t\t{\n\t\t\tresult.queryParams = {\n\t\t\t\tpull_guest_id: this.guestUserId\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\t//*/\n\t// endregion ////\n}\n","import { LoggerBrowser, LoggerType } from '../logger/browser'\nimport type { TypeB24 } from '../types/b24'\nimport { ProfileManager } from './profile-manager'\nimport { AppManager } from './app-manager'\nimport { PaymentManager } from './payment-manager'\nimport { LicenseManager } from './license-manager'\nimport { CurrencyManager } from './currency-manager'\nimport { OptionsManager } from './options-manager'\nimport { B24PullClientManager } from '../pullClient'\nimport Text from '../tools/text'\nimport { LoadDataType, TypeSpecificUrl } from '../types/b24-helper'\nimport type {\n\tTypeApp,\n\tTypeB24Form,\n\tTypeEnumAppStatus,\n\tTypeLicense,\n\tTypePayment,\n\tTypeUser,\n} from '../types/b24-helper'\nimport type { GenderString } from '../types/common'\nimport type { TypePullMessage } from '../types/pull'\n\n/**\n * A universal class that is used to manage the initial application data\n */\nexport class B24HelperManager {\n\tprivate readonly _b24: TypeB24\n\tprotected _logger: null | LoggerBrowser = null\n\tprivate _isInit: boolean = false\n\n\tprivate _profile: ProfileManager | null = null\n\n\tprivate _app: AppManager | null = null\n\tprivate _payment: PaymentManager | null = null\n\tprivate _license: LicenseManager | null = null\n\n\tprivate _currency: CurrencyManager | null = null\n\tprivate _appOptions: OptionsManager | null = null\n\tprivate _userOptions: OptionsManager | null = null\n\n\tprivate _b24PullClient: B24PullClientManager | null = null\n\tprivate _pullClientUnSubscribe: (() => void)[] = []\n\tprivate _pullClientModuleId: string = ''\n\n\tconstructor(b24: TypeB24) {\n\t\tthis._b24 = b24\n\t\tthis.setLogger(this._b24.getLogger())\n\t}\n\n\tsetLogger(logger: LoggerBrowser): void {\n\t\tthis._logger = logger\n\t\tif (null !== this._profile) {\n\t\t\tthis._profile.setLogger(this.getLogger())\n\t\t}\n\n\t\tif (null !== this._app) {\n\t\t\tthis._app.setLogger(this.getLogger())\n\t\t}\n\n\t\tif (null !== this._payment) {\n\t\t\tthis._payment.setLogger(this.getLogger())\n\t\t}\n\n\t\tif (null !== this._license) {\n\t\t\tthis._license.setLogger(this.getLogger())\n\t\t}\n\n\t\tif (null !== this._currency) {\n\t\t\tthis._currency.setLogger(this.getLogger())\n\t\t}\n\n\t\tif (null !== this._appOptions) {\n\t\t\tthis._appOptions.setLogger(this.getLogger())\n\t\t}\n\n\t\tif (null !== this._userOptions) {\n\t\t\tthis._userOptions.setLogger(this.getLogger())\n\t\t}\n\t}\n\n\tgetLogger(): LoggerBrowser {\n\t\tif (null === this._logger) {\n\t\t\tthis._logger = LoggerBrowser.build(`NullLogger`)\n\t\t\tthis._logger.setConfig({\n\t\t\t\t[LoggerType.desktop]: false,\n\t\t\t\t[LoggerType.log]: false,\n\t\t\t\t[LoggerType.info]: false,\n\t\t\t\t[LoggerType.warn]: false,\n\t\t\t\t[LoggerType.error]: true,\n\t\t\t\t[LoggerType.trace]: false,\n\t\t\t})\n\t\t}\n\n\t\treturn this._logger\n\t}\n\n\tdestroy(): void {\n\t\tthis._destroyPullClient()\n\t}\n\n\t// region loadData ////\n\tasync loadData(\n\t\tdataTypes: LoadDataType[] = [LoadDataType.App, LoadDataType.Profile]\n\t): Promise<void> {\n\t\tconst batchMethods: Record<\n\t\t\tstring,\n\t\t\t{ method: string } | { method: string }[]\n\t\t> = {\n\t\t\t[LoadDataType.App]: { method: 'app.info' },\n\t\t\t[LoadDataType.Profile]: { method: 'profile' },\n\t\t\t[LoadDataType.Currency]: [\n\t\t\t\t{ method: 'crm.currency.base.get' },\n\t\t\t\t{ method: 'crm.currency.list' },\n\t\t\t],\n\t\t\t[LoadDataType.AppOptions]: { method: 'app.option.get' },\n\t\t\t[LoadDataType.UserOptions]: { method: 'user.option.get' },\n\t\t}\n\n\t\t// eslint-disable-next-line unicorn/no-array-reduce\n\t\tconst batchRequest = dataTypes.reduce(\n\t\t\t(acc, type) => {\n\t\t\t\tif (batchMethods[type]) {\n\t\t\t\t\tif (Array.isArray(batchMethods[type])) {\n\t\t\t\t\t\tfor (const [index, row] of batchMethods[type].entries()) {\n\t\t\t\t\t\t\tacc[`get_${type}_${index}`] = row\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tacc[`get_${type}`] = batchMethods[type]\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn acc\n\t\t\t},\n\t\t\t{} as Record<string, { method: string }>\n\t\t)\n\n\t\ttry {\n\t\t\tconst response = await this._b24.callBatch(batchRequest)\n\t\t\tconst data = response.getData()\n\n\t\t\tif (data[`get_${LoadDataType.App}`]) {\n\t\t\t\tthis._app = await this.parseAppData(data[`get_${LoadDataType.App}`])\n\t\t\t\tthis._payment = await this.parsePaymentData(\n\t\t\t\t\tdata[`get_${LoadDataType.App}`]\n\t\t\t\t)\n\t\t\t\tthis._license = await this.parseLicenseData(\n\t\t\t\t\tdata[`get_${LoadDataType.App}`]\n\t\t\t\t)\n\t\t\t}\n\n\t\t\tif (data[`get_${LoadDataType.Profile}`]) {\n\t\t\t\tthis._profile = await this.parseUserData(\n\t\t\t\t\tdata[`get_${LoadDataType.Profile}`]\n\t\t\t\t)\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\tdata[`get_${LoadDataType.Currency}_0`] &&\n\t\t\t\tdata[`get_${LoadDataType.Currency}_1`]\n\t\t\t) {\n\t\t\t\tthis._currency = await this.parseCurrencyData({\n\t\t\t\t\tcurrencyBase: data[`get_${LoadDataType.Currency}_0`],\n\t\t\t\t\tcurrencyList: data[`get_${LoadDataType.Currency}_1`],\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tif (data[`get_${LoadDataType.AppOptions}`]) {\n\t\t\t\tthis._appOptions = await this.parseOptionsData(\n\t\t\t\t\t'app',\n\t\t\t\t\tdata[`get_${LoadDataType.AppOptions}`]\n\t\t\t\t)\n\t\t\t}\n\n\t\t\tif (data[`get_${LoadDataType.UserOptions}`]) {\n\t\t\t\tthis._userOptions = await this.parseOptionsData(\n\t\t\t\t\t'user',\n\t\t\t\t\tdata[`get_${LoadDataType.UserOptions}`]\n\t\t\t\t)\n\t\t\t}\n\n\t\t\tthis._isInit = true\n\t\t} catch (error) {\n\t\t\tif (error instanceof Error) {\n\t\t\t\tthrow error\n\t\t\t}\n\n\t\t\tconsole.error('Error loading data:', error)\n\t\t\tthrow new Error('Failed to load data')\n\t\t}\n\t}\n\n\tprivate async parseUserData(profileData: any): Promise<ProfileManager> {\n\t\tconst manager = new ProfileManager(this._b24)\n\t\tmanager.setLogger(this.getLogger())\n\t\treturn manager\n\t\t\t.initData({\n\t\t\t\tid: Number(profileData.ID),\n\t\t\t\tisAdmin: profileData.ADMIN === true,\n\t\t\t\tlastName: profileData?.LAST_NAME || '',\n\t\t\t\tname: profileData?.NAME || '',\n\t\t\t\tgender: (profileData?.PERSONAL_GENDER || '') as GenderString,\n\t\t\t\tphoto: profileData?.PERSONAL_PHOTO || '',\n\t\t\t\tTimeZone: profileData?.TIME_ZONE || '',\n\t\t\t\tTimeZoneOffset: profileData?.TIME_ZONE_OFFSET,\n\t\t\t} as TypeUser)\n\t\t\t.then(() => {\n\t\t\t\treturn manager\n\t\t\t})\n\t}\n\n\tprivate async parseAppData(appData: any): Promise<AppManager> {\n\t\tconst manager = new AppManager(this._b24)\n\t\tmanager.setLogger(this.getLogger())\n\t\treturn manager\n\t\t\t.initData({\n\t\t\t\tid: Number.parseInt(appData.ID),\n\t\t\t\tcode: appData.CODE,\n\t\t\t\tversion: Number.parseInt(appData.VERSION),\n\t\t\t\tstatus: appData.STATUS as TypeEnumAppStatus,\n\t\t\t\tisInstalled: appData.INSTALLED as boolean,\n\t\t\t} as TypeApp)\n\t\t\t.then(() => {\n\t\t\t\treturn manager\n\t\t\t})\n\t}\n\n\tprivate async parsePaymentData(appData: any): Promise<PaymentManager> {\n\t\tconst manager = new PaymentManager(this._b24)\n\t\tmanager.setLogger(this.getLogger())\n\t\treturn manager\n\t\t\t.initData({\n\t\t\t\tisExpired: appData.PAYMENT_EXPIRED === 'Y',\n\t\t\t\tdays: Number.parseInt(appData.DAYS || '0'),\n\t\t\t} as TypePayment)\n\t\t\t.then(() => {\n\t\t\t\treturn manager\n\t\t\t})\n\t}\n\n\tprivate async parseLicenseData(appData: any): Promise<LicenseManager> {\n\t\tconst manager = new LicenseManager(this._b24)\n\t\tmanager.setLogger(this.getLogger())\n\t\treturn manager\n\t\t\t.initData({\n\t\t\t\tlanguageId: appData.LANGUAGE_ID,\n\t\t\t\tlicense: appData.LICENSE,\n\t\t\t\tlicensePrevious: appData.LICENSE_PREVIOUS,\n\t\t\t\tlicenseType: appData.LICENSE_TYPE,\n\t\t\t\tlicenseFamily: appData.LICENSE_FAMILY,\n\t\t\t\tisSelfHosted: appData.LICENSE.includes('selfhosted'),\n\t\t\t} as TypeLicense)\n\t\t\t.then(() => {\n\t\t\t\treturn manager\n\t\t\t})\n\t}\n\n\tprivate async parseCurrencyData(currencyData: any): Promise<CurrencyManager> {\n\t\tconst manager = new CurrencyManager(this._b24)\n\t\tmanager.setLogger(this.getLogger())\n\t\treturn manager.initData(currencyData).then(() => {\n\t\t\treturn manager\n\t\t})\n\t}\n\n\tprivate async parseOptionsData(\n\t\ttype: 'app' | 'user',\n\t\toptionsData: any\n\t): Promise<OptionsManager> {\n\t\tconst manager = new OptionsManager(this._b24, type)\n\t\tmanager.setLogger(this.getLogger())\n\t\treturn manager.initData(optionsData).then(() => {\n\t\t\treturn manager\n\t\t})\n\t}\n\t// endregion ////\n\n\t// region Get ////\n\tget isInit(): boolean {\n\t\treturn this._isInit\n\t}\n\n\tget forB24Form(): TypeB24Form {\n\t\tthis.ensureInitialized()\n\n\t\tif (null === this._profile) {\n\t\t\tthrow new Error('B24HelperManager.profileInfo not initialized')\n\t\t}\n\n\t\tif (null === this._app) {\n\t\t\tthrow new Error('B24HelperManager.appInfo not initialized')\n\t\t}\n\n\t\treturn {\n\t\t\tapp_code: this.appInfo.data.code,\n\t\t\tapp_status: this.appInfo.data.status as string,\n\t\t\tpayment_expired: this.paymentInfo.data.isExpired ? 'Y' : 'N',\n\t\t\tdays: this.paymentInfo.data.days,\n\t\t\tb24_plan: this.licenseInfo.data.license,\n\t\t\tc_name: this.profileInfo.data.name,\n\t\t\tc_last_name: this.profileInfo.data.lastName,\n\t\t\thostname: this.hostName,\n\t\t} as TypeB24Form\n\t}\n\n\t/**\n\t * Get the account address BX24 (https://name.bitrix24.com)\n\t */\n\tget hostName(): string {\n\t\treturn this._b24.getTargetOrigin()\n\t}\n\n\tget profileInfo(): ProfileManager {\n\t\tthis.ensureInitialized()\n\n\t\tif (null === this._profile) {\n\t\t\tthrow new Error('B24HelperManager.profileInfo not initialized')\n\t\t}\n\n\t\treturn this._profile\n\t}\n\n\tget appInfo(): AppManager {\n\t\tthis.ensureInitialized()\n\n\t\tif (null === this._app) {\n\t\t\tthrow new Error('B24HelperManager.appInfo not initialized')\n\t\t}\n\n\t\treturn this._app\n\t}\n\n\tget paymentInfo(): PaymentManager {\n\t\tthis.ensureInitialized()\n\n\t\tif (null === this._payment) {\n\t\t\tthrow new Error('B24HelperManager.paymentInfo not initialized')\n\t\t}\n\n\t\treturn this._payment\n\t}\n\n\tget licenseInfo(): LicenseManager {\n\t\tthis.ensureInitialized()\n\n\t\tif (null === this._license) {\n\t\t\tthrow new Error('B24HelperManager.licenseInfo not initialized')\n\t\t}\n\n\t\treturn this._license\n\t}\n\n\tget currency(): CurrencyManager {\n\t\tthis.ensureInitialized()\n\n\t\tif (null === this._currency) {\n\t\t\tthrow new Error('B24HelperManager.currency not initialized')\n\t\t}\n\n\t\treturn this._currency\n\t}\n\n\tget appOptions(): OptionsManager {\n\t\tthis.ensureInitialized()\n\n\t\tif (null === this._appOptions) {\n\t\t\tthrow new Error('B24HelperManager.appOptions not initialized')\n\t\t}\n\n\t\treturn this._appOptions\n\t}\n\n\tget userOptions(): OptionsManager {\n\t\tthis.ensureInitialized()\n\n\t\tif (null === this._userOptions) {\n\t\t\tthrow new Error('B24HelperManager.userOptions not initialized')\n\t\t}\n\n\t\treturn this._userOptions\n\t}\n\t// endregion ////\n\n\t// region Custom SelfHosted && Cloud ////\n\tget isSelfHosted(): boolean {\n\t\treturn this.licenseInfo.data.isSelfHosted\n\t}\n\n\t/**\n\t * Returns the increment step of fields of type ID\n\t * @memo in a cloud step = 2 in box step = 1\n\t *\n\t * @returns {number}\n\t */\n\tget primaryKeyIncrementValue(): number {\n\t\tif (this.isSelfHosted) {\n\t\t\treturn 1\n\t\t}\n\n\t\treturn 2\n\t}\n\n\t/**\n\t * Defines specific URLs for a Bitrix24 box or cloud\n\t */\n\tget b24SpecificUrl(): Record<keyof typeof TypeSpecificUrl, string> {\n\t\tif (this.isSelfHosted) {\n\t\t\treturn {\n\t\t\t\t[TypeSpecificUrl.MainSettings]: '/configs/',\n\t\t\t\t[TypeSpecificUrl.UfList]: '/configs/userfield_list.php',\n\t\t\t\t[TypeSpecificUrl.UfPage]: '/configs/userfield.php',\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\t[TypeSpecificUrl.MainSettings]: '/settings/configs/',\n\t\t\t[TypeSpecificUrl.UfList]: '/settings/configs/userfield_list.php',\n\t\t\t[TypeSpecificUrl.UfPage]: '/settings/configs/userfield.php',\n\t\t}\n\t}\n\t// endregion ////\n\n\t// region Pull.Client ////\n\tpublic usePullClient(\n\t\tprefix: string = 'prefix',\n\t\tuserId?: number\n\t): B24HelperManager {\n\t\tif (this._b24PullClient) {\n\t\t\treturn this\n\t\t}\n\n\t\tthis.initializePullClient(\n\t\t\ttypeof userId === 'undefined' ? this.profileInfo.data.id || 0 : userId,\n\t\t\tprefix\n\t\t)\n\n\t\treturn this\n\t}\n\n\tprivate initializePullClient(\n\t\tuserId: number,\n\t\tprefix: string = 'prefix'\n\t): void {\n\t\tthis._b24PullClient = new B24PullClientManager({\n\t\t\tb24: this._b24,\n\t\t\trestApplication: this._b24.auth.getUniq(prefix),\n\t\t\tuserId,\n\t\t})\n\t}\n\n\tpublic subscribePullClient(\n\t\tcallback: (message: TypePullMessage) => void,\n\t\tmoduleId: string = 'application'\n\t): B24HelperManager {\n\t\tif (!this._b24PullClient) {\n\t\t\tthrow new Error('PullClient not init')\n\t\t}\n\n\t\tthis._pullClientModuleId = moduleId\n\n\t\tthis._pullClientUnSubscribe.push(\n\t\t\tthis._b24PullClient.subscribe({\n\t\t\t\tmoduleId: this._pullClientModuleId,\n\t\t\t\tcallback,\n\t\t\t})\n\t\t)\n\n\t\treturn this\n\t}\n\n\tpublic startPullClient(): void {\n\t\tif (!this._b24PullClient) {\n\t\t\tthrow new Error('PullClient not init')\n\t\t}\n\n\t\tthis._b24PullClient.start().catch((error) => {\n\t\t\tthis.getLogger().error(`${Text.getDateForLog()}: Pull not running`, error)\n\t\t})\n\t}\n\n\tpublic getModuleIdPullClient(): string {\n\t\tif (!this._b24PullClient) {\n\t\t\tthrow new Error('PullClient not init')\n\t\t}\n\n\t\treturn this._pullClientModuleId\n\t}\n\n\tprivate _destroyPullClient(): void {\n\t\tfor (const unsubscribeCallback of this._pullClientUnSubscribe) {\n\t\t\tunsubscribeCallback()\n\t\t}\n\n\t\tthis._b24PullClient?.destroy()\n\t\tthis._b24PullClient = null\n\t}\n\t// endregion ////\n\n\t// region Tools ////\n\tprivate ensureInitialized(): void {\n\t\tif (!this._isInit) {\n\t\t\tthrow new Error('B24HelperManager not initialized')\n\t\t}\n\t}\n\t// endregion ////\n}\n","import { B24HelperManager } from './helper-manager'\nimport { LoadDataType } from '../types/b24-helper'\nimport type { TypeB24 } from '../types/b24'\nimport type { TypePullMessage } from '../types/pull'\n\nexport const useB24Helper = () => {\n\tlet $isInitB24Helper = false\n\tlet $isInitPullClient = false\n\n\tlet $b24Helper: null | B24HelperManager = null\n\n\tconst initB24Helper = async (\n\t\t$b24: TypeB24,\n\t\tdataTypes: LoadDataType[] = [LoadDataType.App, LoadDataType.Profile]\n\t): Promise<B24HelperManager> => {\n\t\tif (null === $b24Helper) {\n\t\t\t$b24Helper = new B24HelperManager($b24)\n\t\t}\n\n\t\tif ($isInitB24Helper) {\n\t\t\treturn $b24Helper as B24HelperManager\n\t\t}\n\n\t\treturn $b24Helper.loadData(dataTypes).then(() => {\n\t\t\t$isInitB24Helper = true\n\t\t\treturn $b24Helper as B24HelperManager\n\t\t})\n\t}\n\n\tconst destroyB24Helper = () => {\n\t\t$b24Helper?.destroy()\n\t\t$b24Helper = null\n\t\t$isInitB24Helper = false\n\t\t$isInitPullClient = false\n\t}\n\n\tconst isInitB24Helper = () => {\n\t\treturn $isInitB24Helper\n\t}\n\n\tconst getB24Helper = (): B24HelperManager => {\n\t\tif (null === $b24Helper) {\n\t\t\tthrow new Error(\n\t\t\t\t'B24HelperManager is not initialized. You need to call initB24Helper first.'\n\t\t\t)\n\t\t}\n\n\t\treturn $b24Helper\n\t}\n\n\tconst usePullClient = () => {\n\t\tif (null === $b24Helper) {\n\t\t\tthrow new Error(\n\t\t\t\t'B24HelperManager is not initialized. You need to call initB24Helper first.'\n\t\t\t)\n\t\t}\n\n\t\t$b24Helper.usePullClient()\n\t\t$isInitPullClient = true\n\t}\n\n\tconst useSubscribePullClient = (\n\t\tcallback: (message: TypePullMessage) => void,\n\t\tmoduleId: string = 'application'\n\t) => {\n\t\tif (!$isInitPullClient) {\n\t\t\tthrow new Error(\n\t\t\t\t'PullClient is not initialized. You need to call usePullClient first.'\n\t\t\t)\n\t\t}\n\n\t\t$b24Helper?.subscribePullClient(callback, moduleId)\n\t}\n\n\tconst startPullClient = () => {\n\t\tif (!$isInitPullClient) {\n\t\t\tthrow new Error(\n\t\t\t\t'PullClient is not initialized. You need to call usePullClient first.'\n\t\t\t)\n\t\t}\n\n\t\t$b24Helper?.startPullClient()\n\t}\n\n\treturn {\n\t\tinitB24Helper,\n\t\tisInitB24Helper,\n\t\tdestroyB24Helper,\n\t\tgetB24Helper,\n\t\tusePullClient,\n\t\tuseSubscribePullClient,\n\t\tstartPullClient,\n\t}\n}\n","import { B24Frame } from './frame'\nimport type { B24FrameQueryParams } from './types/auth'\n\ntype whileB24InitCallback = {\n\tresolve: (b24Frame: B24Frame) => void\n\treject: (error: any) => void\n}\n\nconst delay = 50\n\nlet $b24Frame: null | B24Frame = null\nlet isInit = false\nlet connectError: null | Error = null\nlet isMakeFirstCall = false\n\nlet listCallBack: whileB24InitCallback[] = []\nlet isStartWatch = false\n\n// region Watch ////\nfunction startWatch() {\n\twindow.setTimeout(() => {\n\t\tif (!isInit || $b24Frame === null) {\n\t\t\tstartWatch()\n\t\t\treturn\n\t\t}\n\n\t\tprocessResult()\n\t\tlistCallBack = []\n\t}, delay)\n}\n\nfunction processResult(): void {\n\tif (null !== connectError) {\n\t\tfor (const callBack of listCallBack) {\n\t\t\tcallBack.reject(connectError)\n\t\t}\n\t}\n\n\tif (!isInit || $b24Frame === null) {\n\t\treturn\n\t}\n\n\tfor (const callBack of listCallBack) {\n\t\tcallBack.resolve($b24Frame as B24Frame)\n\t}\n}\n// endregion ////\n\nexport async function initializeB24Frame(): Promise<B24Frame> {\n\t// region isInit ////\n\tif (isInit && null !== $b24Frame) {\n\t\treturn Promise.resolve($b24Frame)\n\t}\n\t// endregion ////\n\n\t// region Not First Call ///\n\tif (isMakeFirstCall) {\n\t\t// region startWatch ///\n\t\tif (!isStartWatch) {\n\t\t\tisStartWatch = true\n\t\t\tstartWatch()\n\t\t}\n\t\t// endregion ////\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tlistCallBack.push({\n\t\t\t\tresolve: resolve,\n\t\t\t\treject: reject,\n\t\t\t})\n\t\t})\n\t}\n\t// endregion ////\n\n\t// region First Call ///\n\tisMakeFirstCall = true\n\n\treturn new Promise((resolve, reject) => {\n\t\tconst queryParams: B24FrameQueryParams = {\n\t\t\tDOMAIN: null,\n\t\t\tPROTOCOL: false,\n\t\t\tAPP_SID: null,\n\t\t\tLANG: null,\n\t\t}\n\n\t\tif (window.name) {\n\t\t\tconst [domain, protocol, appSid] = window.name.split('|')\n\t\t\tqueryParams.DOMAIN = domain\n\t\t\tqueryParams.PROTOCOL = Number.parseInt(protocol) === 1\n\t\t\tqueryParams.APP_SID = appSid\n\t\t\tqueryParams.LANG = null\n\t\t}\n\n\t\tif (!queryParams.DOMAIN || !queryParams.APP_SID) {\n\t\t\tconnectError = new Error('Unable to initialize Bitrix24Frame library!')\n\t\t\treject(connectError)\n\t\t}\n\n\t\t$b24Frame = new B24Frame(queryParams)\n\n\t\t$b24Frame\n\t\t\t.init()\n\t\t\t.then(() => {\n\t\t\t\tisInit = true\n\t\t\t\tresolve($b24Frame as B24Frame)\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconnectError = error\n\t\t\t\treject(connectError)\n\t\t\t})\n\t})\n\t// endregion ////\n}\n"],"names":["LoggerType","DataType","n","fractionDigits","EnumCrmEntityType","EnumCrmEntityTypeId","LoadDataType","TypeOption","ConnectionType","LsKeys","PullStatus","SenderType","SubscriptionType","CloseReasons","SystemCommands","ServerMode","RpcMethod","RequestIdGenerator","result","answerError","problemError","resultData","B24LangList","MessageCommands","OptionsManager","undefined","module","params","offset","i","exports","isAbsolute","path","normalize","size","field","token","create_array","buffer","filename","resolved","source","err","global","config","response","B24PullClientManager"],"mappings":"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"}